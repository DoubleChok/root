// threejs.org/license
'use strict';var THREE={REVISION:"70dev"};"object"===typeof module&&(module.exports=THREE);void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:0});THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;
THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;
THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;
THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;
THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;
THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*
c:.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a};b=.5>=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var l=e-f,f=.5>=h?l/(e+f):l/(2-e-f);switch(e){case b:g=(c-d)/l+(c<d?6:0);break;case c:g=(d-b)/l+2;break;case d:g=(b-c)/l+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,
b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;
this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;
this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=
c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,
b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],l=b[6],b=b[10],n=c+f+b;0<n?(c=.5/Math.sqrt(n+1),this._w=.25/c,this._x=(l-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(l-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=
.25*c,this._z=(g+l)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+l)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=
-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,l=b._z,n=b._w;this._x=c*n+f*g+d*l-e*h;this._y=d*n+f*h+e*g-c*l;this._z=e*n+f*l+c*h-d*g;this._w=f*n-c*g-d*h-e*l;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),l=Math.sqrt(1-g*g);if(.001>Math.abs(l))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;g=Math.sin((1-b)*h)/l;h=
Math.sin(b*h)/l;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=
a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,
b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},
roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=
this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},clone:function(){return new THREE.Vector2(this.x,this.y)}};
THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=
a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,
c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=
(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,l=a*c+g*b-e*d,n=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+l*-g-n*-f;this.y=l*a+b*-f+n*-e-h*-g;this.z=n*a+b*-g+h*-f-l*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){void 0===
a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>
a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,
b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/
b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},
projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());
return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(a,b){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},
getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(a,
b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=
this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},
setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],l=a[9];c=a[2];b=a[6];var n=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(l-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(l+b)&&.1>Math.abs(e+h+n-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;n=(n+1)/2;d=(d+g)/4;f=(f+c)/4;l=(l+b)/4;e>h&&e>n?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>n?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),
b=d/c,d=l/c):.01>n?(c=b=.707106781,d=0):(d=Math.sqrt(n),b=f/d,c=l/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-l)*(b-l)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-l)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+n-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);
return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);
return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=
this.z;a[b+3]=this.w;return a},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=
a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b){var c=THREE.Math.clamp,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],l=d[5],n=d[9],p=d[2],q=d[6],d=d[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-n,d),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(q,l),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(n,-1,1)),.99999>Math.abs(n)?(this._y=Math.atan2(g,d),this._z=Math.atan2(h,l)):(this._y=
Math.atan2(-p,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(q,-1,1)),.99999>Math.abs(q)?(this._y=Math.atan2(-p,d),this._z=Math.atan2(-f,l)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(p,-1,1)),.99999>Math.abs(p)?(this._x=Math.atan2(q,d),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,l))):"YZX"===b?(this._z=Math.asin(c(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-n,l),this._y=Math.atan2(-p,e)):(this._x=0,this._y=Math.atan2(g,d))):"XZY"===b?(this._z=Math.asin(-c(f,
-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(q,l),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-n,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;this.onChangeCallback();return this},setFromQuaternion:function(a,b,c){var d=THREE.Math.clamp,e=a.x*a.x,f=a.y*a.y,g=a.z*a.z,h=a.w*a.w;b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w),-1,1)),this._z=Math.atan2(2*(a.z*a.w-a.x*
a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z),-1,1)),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===b?(this._x=Math.atan2(2*
(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w),-1,1))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);
this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};
THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=
this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);
this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>
this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&
a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);
this.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var f=e.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==e.attributes.position)for(f=e.attributes.position.array,e=0,g=f.length;e<g;e+=3)a.set(f[e],f[e+1],f[e+2]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},
makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);
this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-
this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,l){var n=this.elements;n[0]=a;n[3]=b;n[6]=c;n[1]=d;n[4]=e;n[7]=f;n[2]=g;n[5]=h;n[8]=l;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(a){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=
a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],l=a[7],a=a[8];return b*f*a-b*g*l-c*e*a+c*g*h+d*e*l-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];
c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];
a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}};
THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,l,n,p,q,m,r,t,s){var u=this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=f;u[9]=g;u[13]=h;u[2]=l;u[6]=n;u[10]=p;u[14]=q;u[3]=m;u[7]=r;u[11]=t;u[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)},
copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements;b=b.elements;var d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&
console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){a=f*h;var l=f*e,n=c*h,p=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=l+n*d;b[5]=a-p*d;b[9]=-c*g;b[2]=p-a*d;b[6]=n+l*d;b[10]=f*g}else"YXZ"===a.order?(a=g*h,l=g*e,n=d*h,p=d*e,b[0]=a+p*c,b[4]=n*c-l,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=l*c-n,b[6]=p+a*c,
b[10]=f*g):"ZXY"===a.order?(a=g*h,l=g*e,n=d*h,p=d*e,b[0]=a-p*c,b[4]=-f*e,b[8]=n+l*c,b[1]=l+n*c,b[5]=f*h,b[9]=p-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(a=f*h,l=f*e,n=c*h,p=c*e,b[0]=g*h,b[4]=n*d-l,b[8]=a*d+p,b[1]=g*e,b[5]=p*d+a,b[9]=l*d-n,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(a=f*g,l=f*d,n=c*g,p=c*d,b[0]=g*h,b[4]=p-a*e,b[8]=n*e+l,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=l*e+n,b[10]=a-p*e):"XZY"===a.order&&(a=f*g,l=f*d,n=c*g,p=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+p,b[5]=f*h,b[9]=l*
e-n,b[2]=n*e-l,b[6]=c*h,b[10]=p*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,l=e+e;a=c*g;var n=c*h,c=c*l,p=d*h,d=d*l,e=e*l,g=f*g,h=f*h,f=f*l;b[0]=1-(p+e);b[4]=n-f;b[8]=c+h;b[1]=n+f;b[5]=1-
(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+p);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],l=c[12],n=c[1],p=c[5],q=c[9],m=c[13],r=c[2],t=c[6],s=c[10],u=c[14],w=c[3],H=c[7],M=c[11],c=c[15],v=d[0],X=d[4],y=d[8],A=d[12],B=d[1],D=d[5],E=d[9],L=d[13],aa=d[2],N=d[6],F=d[10],Q=d[14],O=d[3],
ca=d[7],ea=d[11],d=d[15];e[0]=f*v+g*B+h*aa+l*O;e[4]=f*X+g*D+h*N+l*ca;e[8]=f*y+g*E+h*F+l*ea;e[12]=f*A+g*L+h*Q+l*d;e[1]=n*v+p*B+q*aa+m*O;e[5]=n*X+p*D+q*N+m*ca;e[9]=n*y+p*E+q*F+m*ea;e[13]=n*A+p*L+q*Q+m*d;e[2]=r*v+t*B+s*aa+u*O;e[6]=r*X+t*D+s*N+u*ca;e[10]=r*y+t*E+s*F+u*ea;e[14]=r*A+t*L+s*Q+u*d;e[3]=w*v+H*B+M*aa+c*O;e[7]=w*X+H*D+M*N+c*ca;e[11]=w*y+H*E+M*F+c*ea;e[15]=w*A+H*L+M*Q+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];
c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=
b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix4(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=
a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],l=a[13],n=a[2],p=a[6],q=a[10],m=a[14];return a[3]*(+e*h*p-d*l*p-e*g*q+c*l*q+d*g*m-c*h*m)+a[7]*(+b*h*m-b*l*q+e*f*q-d*f*m+d*l*n-e*h*n)+a[11]*(+b*l*p-b*g*m-e*f*p+c*f*m+e*g*n-c*l*n)+a[15]*(-d*g*n-b*h*p+b*g*q+d*f*p-c*f*q+c*h*n)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,
b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=
this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],l=d[1],n=d[5],p=d[9],q=d[13],m=d[2],r=d[6],t=d[10],s=d[14],u=d[3],w=d[7],H=d[11],d=d[15];c[0]=p*s*w-q*t*w+q*r*H-n*s*H-p*r*d+n*t*d;c[4]=h*t*w-g*s*w-h*r*H+f*s*H+g*r*d-f*t*d;c[8]=g*q*w-h*p*w+h*n*H-f*q*H-g*n*d+f*p*d;c[12]=h*p*r-g*q*r-h*n*t+f*q*t+g*n*s-f*p*s;c[1]=q*t*u-p*s*u-q*m*H+l*s*H+p*m*d-l*t*d;c[5]=g*s*u-h*t*u+h*m*H-e*s*H-g*m*d+e*t*d;c[9]=h*p*u-g*q*u-h*l*
H+e*q*H+g*l*d-e*p*d;c[13]=g*q*m-h*p*m+h*l*t-e*q*t-g*l*s+e*p*s;c[2]=n*s*u-q*r*u+q*m*w-l*s*w-n*m*d+l*r*d;c[6]=h*r*u-f*s*u-h*m*w+e*s*w+f*m*d-e*r*d;c[10]=f*q*u-h*n*u+h*l*w-e*q*w-f*l*d+e*n*d;c[14]=h*n*m-f*q*m-h*l*r+e*q*r+f*l*s-e*n*s;c[3]=p*r*u-n*t*u-p*m*w+l*t*w+n*m*H-l*r*H;c[7]=f*t*u-g*r*u+g*m*w-e*t*w-f*m*H+e*r*H;c[11]=g*n*u-f*p*u-g*l*w+e*p*w+f*l*H-e*n*H;c[15]=f*p*m-g*n*m+g*l*r-e*p*r-f*l*t+e*n*t;c=e*c[0]+l*c[4]+m*c[8]+u*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");
console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(a){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(a){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(a){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(a){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(a,b){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},
scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,
0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,l=e*f,n=e*g;this.set(l*f+c,l*g-d*h,l*h+d*g,0,l*g+d*h,n*g+c,n*h-d*f,0,l*h-d*g,n*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,
0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),l=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,n=1/l;b.elements[0]*=c;b.elements[1]*=
c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=n;b.elements[9]*=n;b.elements[10]*=n;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=l;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));
var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,l=c-d,n=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/l;g[9]=0;g[13]=-((c+d)/l);g[2]=0;g[6]=0;g[10]=-2/n;g[14]=-((f+e)/n);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}};
THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(a,b,c,d){var e=a.clone().add(b).multiplyScalar(.5),f=b.clone().sub(a).normalize(),g=.5*a.distanceTo(b),h=
this.origin.clone().sub(e);a=-this.direction.dot(f);b=h.dot(this.direction);var l=-h.dot(f),n=h.lengthSq(),p=Math.abs(1-a*a),q,m;0<=p?(h=a*l-b,q=a*b-l,m=g*p,0<=h?q>=-m?q<=m?(g=1/p,h*=g,q*=g,a=h*(h+a*q+2*b)+q*(a*h+q+2*l)+n):(q=g,h=Math.max(0,-(a*q+b)),a=-h*h+q*(q+2*l)+n):(q=-g,h=Math.max(0,-(a*q+b)),a=-h*h+q*(q+2*l)+n):q<=-m?(h=Math.max(0,-(-a*g+b)),q=0<h?-g:Math.min(Math.max(-g,-l),g),a=-h*h+q*(q+2*l)+n):q<=m?(h=0,q=Math.min(Math.max(-g,-l),g),a=q*(q+2*l)+n):(h=Math.max(0,-(a*g+b)),q=0<h?g:Math.min(Math.max(-g,
-l),g),a=-h*h+q*(q+2*l)+n)):(q=0<a?-g:g,h=Math.max(0,-(a*q+b)),a=-h*h+q*(q+2*l)+n);c&&c.copy(this.direction.clone().multiplyScalar(h).add(this.origin));d&&d.copy(f.clone().multiplyScalar(q).add(e));return a},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;f=Math.sqrt(f-e);e=d-f;
d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;
return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==
c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,l){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;
e=-h*a.dot(d);return 0>e?null:this.at(e/f,l)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=
this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],l=c[6],n=c[7],p=c[8],q=c[9],m=c[10],r=c[11],t=c[12],s=c[13],u=c[14],c=c[15];b[0].setComponents(f-a,n-g,r-p,c-t).normalize();b[1].setComponents(f+
a,n+g,r+p,c+t).normalize();b[2].setComponents(f+d,n+h,r+q,c+s).normalize();b[3].setComponents(f-d,n-h,r-q,c-s).normalize();b[4].setComponents(f-e,n-l,r-m,c-u).normalize();b[5].setComponents(f+e,n+l,r+m,c+u).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,
c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),
containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,g);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};
THREE.Math={generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=
b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=
180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a}};
THREE.Spline=function(a){function b(a,b,c,d,e,g,f){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*f+(-3*(b-c)-2*a-d)*g+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,l,n,p,q,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+
2;n=this.points[c[0]];p=this.points[c[1]];q=this.points[c[2]];m=this.points[c[3]];h=g*g;l=g*h;d.x=b(n.x,p.x,q.x,m.x,g,h,l);d.y=b(n.y,p.y,q.y,m.y,g,h,l);d.z=b(n.z,p.z,q.z,m.z,g,h,l);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,g=new THREE.Vector3,f=new THREE.Vector3,h=[],l=0;h[0]=0;a||(a=100);c=this.points.length*a;g.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),f.copy(d),l+=f.distanceTo(g),g.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=l,e=b);h[h.length]=l;return{chunks:h,total:l}};this.reparametrizeByArcLength=function(a){var b,c,d,e,g,f,h=[],l=new THREE.Vector3,m=this.getLength();h.push(l.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];f=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(c=1;c<f-1;c++)d=e+1/f*c*(g-e),d=this.getPoint(d),h.push(l.copy(d).clone());
h.push(l.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var l=b.dot(b);g=b.dot(c);var n=d*l-e*e;h=h||new THREE.Vector3;if(0==n)return h.set(-2,-1,-1);n=1/n;l=(l*f-e*g)*n;d=(d*g-e*f)*n;return h.set(1-l-d,d,l)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};
(function(a){a.Raycaster=function(b,c,f,g){this.ray=new a.Ray(b,c);this.near=f||0;this.far=g||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},c=function(a,b,f,g){a.raycast(b,f);if(!0===g){a=a.children;g=0;for(var h=a.length;g<h;g++)c(a[g],b,f,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},intersectObject:function(a,e){var f=[];c(a,this,f,e);
f.sort(b);return f},intersectObjects:function(a,e){var f=[];if(!1===a instanceof Array)return console.log("THREE.Raycaster.intersectObjects: objects is not an Array."),f;for(var g=0,h=a.length;g<h;g++)c(a[g],this,f,e);f.sort(b);return f}}})(THREE);
THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,
value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);
THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");return this.rotation.order},set eulerOrder(a){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},
applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,
c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));
return this}}(),translate:function(a,b){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,
b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error("THREE.Object3D.add:",
a,"can't be added as a child of itself."),this;a instanceof THREE.Object3D?(void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a)):console.error("THREE.Object3D.add:",a,"is not an instance of THREE.Object3D.");return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(b,1))},getChildByName:function(a,
b){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a,b)},getObjectById:function(a,b){if(this.id===a)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectById(a,b);if(void 0!==e)return e}},getObjectByName:function(a,b){if(this.name===a)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByName(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;
this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;
return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=0,c=this.children.length;b<
c;b++)this.children[b].traverseVisible(a)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},
toJSON:function(){var a={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},b={},c=function(c){void 0===a.geometries&&(a.geometries=[]);if(void 0===b[c.uuid]){var d=c.toJSON();delete d.metadata;b[c.uuid]=d;a.geometries.push(d)}return c.uuid},d={},e=function(b){void 0===a.materials&&(a.materials=[]);if(void 0===d[b.uuid]){var c=b.toJSON();delete c.metadata;d[b.uuid]=c;a.materials.push(c)}return b.uuid},f=function(a){var b={};b.uuid=a.uuid;b.type=a.type;""!==a.name&&(b.name=a.name);"{}"!==
JSON.stringify(a.userData)&&(b.userData=a.userData);!0!==a.visible&&(b.visible=a.visible);a instanceof THREE.PerspectiveCamera?(b.fov=a.fov,b.aspect=a.aspect,b.near=a.near,b.far=a.far):a instanceof THREE.OrthographicCamera?(b.left=a.left,b.right=a.right,b.top=a.top,b.bottom=a.bottom,b.near=a.near,b.far=a.far):a instanceof THREE.AmbientLight?b.color=a.color.getHex():a instanceof THREE.DirectionalLight?(b.color=a.color.getHex(),b.intensity=a.intensity):a instanceof THREE.PointLight?(b.color=a.color.getHex(),
b.intensity=a.intensity,b.distance=a.distance):a instanceof THREE.SpotLight?(b.color=a.color.getHex(),b.intensity=a.intensity,b.distance=a.distance,b.angle=a.angle,b.exponent=a.exponent):a instanceof THREE.HemisphereLight?(b.color=a.color.getHex(),b.groundColor=a.groundColor.getHex()):a instanceof THREE.Mesh?(b.geometry=c(a.geometry),b.material=e(a.material)):a instanceof THREE.Line?(b.geometry=c(a.geometry),b.material=e(a.material)):a instanceof THREE.Sprite&&(b.material=e(a.material));b.matrix=
a.matrix.toArray();if(0<a.children.length){b.children=[];for(var d=0;d<a.children.length;d++)b.children.push(f(a.children[d]))}return b};a.object=f(this);return a},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);
a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;
THREE.Projector=function(){console.warn("THREE.Projector has been moved to /examples/renderers/Projector.js.");this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(a,b){console.error("THREE.Projector: .pickingRay() has been removed.")}};
THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialIndex=this.materialIndex;for(var b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}};
THREE.Face4=function(a,b,c,d,e,f,g){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,c,e,f,g)};THREE.BufferAttribute=function(a,b){this.array=a;this.itemSize=b;this.needsUpdate=!1};
THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d]},set:function(a){this.array.set(a);return this},setX:function(a,b){this.array[a*this.itemSize]=b;return this},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},setXY:function(a,b,c){a*=this.itemSize;
this.array[a]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}};
THREE.Int8Attribute=function(a,b){console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Uint8Attribute=function(a,b){console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint8ClampedAttribute=function(a,b){console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Int16Attribute=function(a,b){console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint16Attribute=function(a,b){console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Int32Attribute=function(a,b){console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint32Attribute=function(a,b){console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Float32Attribute=function(a,b){console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Float64Attribute=function(a,b){console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.attributes={};this.attributesKeys=[];this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b instanceof THREE.BufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[a]={array:b,itemSize:c}):(this.attributes[a]=b,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(a){var b=
this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0)},center:function(){},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};var c=a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,g=0<e[0].length,h=3==d[0].vertexNormals.length,l=new Float32Array(9*d.length);this.addAttribute("position",new THREE.BufferAttribute(l,3));var n=
new Float32Array(9*d.length);this.addAttribute("normal",new THREE.BufferAttribute(n,3));if(f!==THREE.NoColors){var p=new Float32Array(9*d.length);this.addAttribute("color",new THREE.BufferAttribute(p,3))}if(!0===g){var q=new Float32Array(6*d.length);this.addAttribute("uv",new THREE.BufferAttribute(q,2))}for(var m=0,r=0,t=0;m<d.length;m++,r+=6,t+=9){var s=d[m],u=c[s.a],w=c[s.b],H=c[s.c];l[t]=u.x;l[t+1]=u.y;l[t+2]=u.z;l[t+3]=w.x;l[t+4]=w.y;l[t+5]=w.z;l[t+6]=H.x;l[t+7]=H.y;l[t+8]=H.z;!0===h?(u=s.vertexNormals[0],
w=s.vertexNormals[1],H=s.vertexNormals[2],n[t]=u.x,n[t+1]=u.y,n[t+2]=u.z,n[t+3]=w.x,n[t+4]=w.y,n[t+5]=w.z,n[t+6]=H.x,n[t+7]=H.y,n[t+8]=H.z):(u=s.normal,n[t]=u.x,n[t+1]=u.y,n[t+2]=u.z,n[t+3]=u.x,n[t+4]=u.y,n[t+5]=u.z,n[t+6]=u.x,n[t+7]=u.y,n[t+8]=u.z);f===THREE.FaceColors?(s=s.color,p[t]=s.r,p[t+1]=s.g,p[t+2]=s.b,p[t+3]=s.r,p[t+4]=s.g,p[t+5]=s.b,p[t+6]=s.r,p[t+7]=s.g,p[t+8]=s.b):f===THREE.VertexColors&&(u=s.vertexColors[0],w=s.vertexColors[1],s=s.vertexColors[2],p[t]=u.r,p[t+1]=u.g,p[t+2]=u.b,p[t+3]=
w.r,p[t+4]=w.g,p[t+5]=w.b,p[t+6]=s.r,p[t+7]=s.g,p[t+8]=s.b);!0===g&&(s=e[0][m][0],u=e[0][m][1],w=e[0][m][2],q[r]=s.x,q[r+1]=s.y,q[r+2]=u.x,q[r+3]=u.y,q[r+4]=w.x,q[r+5]=w.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.position.array;if(b){var c=this.boundingBox;c.makeEmpty();for(var d=0,e=b.length;d<e;d+=3)a.set(b[d],b[d+1],b[d+2]),c.expandByPoint(a)}if(void 0===
b||0===b.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;
if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandByPoint(b);a.center(d);for(var g=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=
this.attributes;if(a.position){var b=a.position.array;if(void 0===a.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(b.length),3));else for(var c=a.normal.array,d=0,e=c.length;d<e;d++)c[d]=0;var c=a.normal.array,f,g,h,l=new THREE.Vector3,n=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,m=new THREE.Vector3;if(a.index)for(var r=a.index.array,t=0<this.offsets.length?this.offsets:[{start:0,count:r.length,index:0}],s=0,u=t.length;s<u;++s){e=t[s].start;f=t[s].count;
for(var w=t[s].index,d=e,e=e+f;d<e;d+=3)f=3*(w+r[d]),g=3*(w+r[d+1]),h=3*(w+r[d+2]),l.fromArray(b,f),n.fromArray(b,g),p.fromArray(b,h),q.subVectors(p,n),m.subVectors(l,n),q.cross(m),c[f]+=q.x,c[f+1]+=q.y,c[f+2]+=q.z,c[g]+=q.x,c[g+1]+=q.y,c[g+2]+=q.z,c[h]+=q.x,c[h+1]+=q.y,c[h+2]+=q.z}else for(d=0,e=b.length;d<e;d+=9)l.fromArray(b,d),n.fromArray(b,d+3),p.fromArray(b,d+6),q.subVectors(p,n),m.subVectors(l,n),q.cross(m),c[d]=q.x,c[d+1]=q.y,c[d+2]=q.z,c[d+3]=q.x,c[d+4]=q.y,c[d+5]=q.z,c[d+6]=q.x,c[d+7]=q.y,
c[d+8]=q.z;this.normalizeNormals();a.normal.needsUpdate=!0}},computeTangents:function(){function a(a,b,c){q.fromArray(d,3*a);m.fromArray(d,3*b);r.fromArray(d,3*c);t.fromArray(f,2*a);s.fromArray(f,2*b);u.fromArray(f,2*c);w=m.x-q.x;H=r.x-q.x;M=m.y-q.y;v=r.y-q.y;X=m.z-q.z;y=r.z-q.z;A=s.x-t.x;B=u.x-t.x;D=s.y-t.y;E=u.y-t.y;L=1/(A*E-B*D);aa.set((E*w-D*H)*L,(E*M-D*v)*L,(E*X-D*y)*L);N.set((A*H-B*w)*L,(A*v-B*M)*L,(A*y-B*X)*L);l[a].add(aa);l[b].add(aa);l[c].add(aa);n[a].add(N);n[b].add(N);n[c].add(N)}function b(a){db.fromArray(e,
3*a);Ab.copy(db);mb=l[a];Ua.copy(mb);Ua.sub(db.multiplyScalar(db.dot(mb))).normalize();nb.crossVectors(Ab,mb);Da=nb.dot(n[a]);Bb=0>Da?-1:1;h[4*a]=Ua.x;h[4*a+1]=Ua.y;h[4*a+2]=Ua.z;h[4*a+3]=Bb}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,
e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*g),4));for(var h=this.attributes.tangent.array,l=[],n=[],p=0;p<g;p++)l[p]=new THREE.Vector3,n[p]=new THREE.Vector3;var q=new THREE.Vector3,m=new THREE.Vector3,r=new THREE.Vector3,t=new THREE.Vector2,s=new THREE.Vector2,u=new THREE.Vector2,w,H,M,v,X,y,A,B,D,E,L,aa=new THREE.Vector3,N=new THREE.Vector3,F,Q,O,ca,ea;0===this.drawcalls.length&&
this.addDrawCall(0,c.length,0);var J=this.drawcalls,p=0;for(Q=J.length;p<Q;++p){F=J[p].start;O=J[p].count;var T=J[p].index,g=F;for(F+=O;g<F;g+=3)O=T+c[g],ca=T+c[g+1],ea=T+c[g+2],a(O,ca,ea)}var Ua=new THREE.Vector3,nb=new THREE.Vector3,db=new THREE.Vector3,Ab=new THREE.Vector3,Bb,mb,Da,p=0;for(Q=J.length;p<Q;++p)for(F=J[p].start,O=J[p].count,T=J[p].index,g=F,F+=O;g<F;g+=3)O=T+c[g],ca=T+c[g+1],ea=T+c[g+2],b(O),b(ca),b(ea)}},computeOffsets:function(a){var b=a;void 0===a&&(b=65535);Date.now();a=this.attributes.index.array;
for(var c=this.attributes.position.array,d=a.length/3,e=new Uint16Array(a.length),f=0,g=0,h=[{start:0,count:0,index:0}],l=h[0],n=0,p=0,q=new Int32Array(6),m=new Int32Array(c.length),r=new Int32Array(c.length),t=0;t<c.length;t++)m[t]=-1,r[t]=-1;for(c=0;c<d;c++){for(var s=p=0;3>s;s++)t=a[3*c+s],-1==m[t]?(q[2*s]=t,q[2*s+1]=-1,p++):m[t]<l.index?(q[2*s]=t,q[2*s+1]=-1,n++):(q[2*s]=t,q[2*s+1]=m[t]);if(g+p>l.index+b)for(l={start:f,count:0,index:g},h.push(l),p=0;6>p;p+=2)s=q[p+1],-1<s&&s<l.index&&(q[p+1]=
-1);for(p=0;6>p;p+=2)t=q[p],s=q[p+1],-1===s&&(s=g++),m[t]=s,r[s]=t,e[f++]=s-l.index,l.count++}this.reorderBuffers(e,r,g);return this.offsets=h},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},reorderBuffers:function(a,b,c){var d={},e;for(e in this.attributes)"index"!=e&&(d[e]=new this.attributes[e].array.constructor(this.attributes[e].itemSize*
c));for(var f=0;f<c;f++){var g=b[f];for(e in this.attributes)if("index"!=e)for(var h=this.attributes[e].array,l=this.attributes[e].itemSize,n=d[e],p=0;p<l;p++)n[f*l+p]=h[g*l+p]}this.attributes.index.array=a;for(e in this.attributes)"index"!=e&&(this.attributes[e].array=d[e],this.attributes[e].numItems=this.attributes[e].itemSize*c)},toJSON:function(){var a={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},b=this.attributes,
c=this.offsets,d=this.boundingSphere,e;for(e in b){for(var f=b[e],g=[],h=f.array,l=0,n=h.length;l<n;l++)g[l]=h[l];a.data.attributes[e]={itemSize:f.itemSize,type:f.array.constructor.name,array:g}}0<c.length&&(a.data.offsets=JSON.parse(JSON.stringify(c)));null!==d&&(a.data.boundingSphere={center:d.center.toArray(),radius:d.radius});return a},clone:function(){var a=new THREE.BufferGeometry,b;for(b in this.attributes)a.addAttribute(b,this.attributes[b].clone());b=0;for(var c=this.offsets.length;b<c;b++){var d=
this.offsets[b];a.offsets.push({start:d.start,index:d.index,count:d.count})}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);
THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=
this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},
fromBufferGeometry:function(a){for(var b=this,c=a.attributes,d=c.position.array,e=void 0!==c.index?c.index.array:void 0,f=void 0!==c.normal?c.normal.array:void 0,g=void 0!==c.color?c.color.array:void 0,h=void 0!==c.uv?c.uv.array:void 0,l=[],n=[],p=c=0;c<d.length;c+=3,p+=2)b.vertices.push(new THREE.Vector3(d[c],d[c+1],d[c+2])),void 0!==f&&l.push(new THREE.Vector3(f[c],f[c+1],f[c+2])),void 0!==g&&b.colors.push(new THREE.Color(g[c],g[c+1],g[c+2])),void 0!==h&&n.push(new THREE.Vector2(h[p],h[p+1]));h=
function(a,c,d){var e=void 0!==f?[l[a].clone(),l[c].clone(),l[d].clone()]:[],h=void 0!==g?[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()]:[];b.faces.push(new THREE.Face3(a,c,d,e,h));b.faceVertexUvs[0].push([n[a],n[c],n[d]])};if(void 0!==e)for(c=0;c<e.length;c+=3)h(e[c],e[c+1],e[c+2]);else for(c=0;c<d.length/3;c+=3)h(c,c+1,c+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());
return this},center:function(){this.computeBoundingBox();var a=new THREE.Vector3;a.addVectors(this.boundingBox.min,this.boundingBox.max);a.multiplyScalar(-.5);this.applyMatrix((new THREE.Matrix4).makeTranslation(a.x,a.y,a.z));this.computeBoundingBox();return a},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();
e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,l=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),l.subVectors(e,f),h.cross(l),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=0,b=this.faces.length;a<
b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||
(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=this.morphNormals[a].vertexNormals,h,l;c=
0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,l={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(l)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],l=g.vertexNormals[c],h.copy(e.normal),l.a.copy(e.vertexNormals[0]),l.b.copy(e.vertexNormals[1]),l.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=
e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,g,h,l,n,p,q,m,r,t,s,u,w=[],H=[];c=new THREE.Vector3;var M=new THREE.Vector3,v=new THREE.Vector3,X=new THREE.Vector3,y=new THREE.Vector3;a=0;for(b=this.vertices.length;a<b;a++)w[a]=new THREE.Vector3,H[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,u=e.b,e=e.c,g=this.vertices[d],h=this.vertices[u],l=this.vertices[e],n=f[0],p=f[1],q=f[2],
f=h.x-g.x,m=l.x-g.x,r=h.y-g.y,t=l.y-g.y,h=h.z-g.z,g=l.z-g.z,l=p.x-n.x,s=q.x-n.x,p=p.y-n.y,n=q.y-n.y,q=1/(l*n-s*p),c.set((n*f-p*m)*q,(n*r-p*t)*q,(n*h-p*g)*q),M.set((l*m-s*f)*q,(l*t-s*r)*q,(l*g-s*h)*q),w[d].add(c),w[u].add(c),w[e].add(c),H[d].add(M),H[u].add(M),H[e].add(M);M=["a","b","c","d"];a=0;for(b=this.faces.length;a<b;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)y.copy(e.vertexNormals[c]),d=e[M[c]],u=w[d],v.copy(u),v.sub(y.multiplyScalar(y.dot(u))).normalize(),X.crossVectors(e.vertexNormals[c],
u),d=X.dot(H[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(v.x,v.y,v.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},
merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,l=a.faces,n=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var p=0,q=g.length;p<q;p++){var m=g[p].clone();void 0!==b&&m.applyMatrix4(b);f.push(m)}p=0;for(q=l.length;p<q;p++){var g=l[p],r,t=g.vertexNormals,s=
g.vertexColors,m=new THREE.Face3(g.a+e,g.b+e,g.c+e);m.normal.copy(g.normal);void 0!==d&&m.normal.applyMatrix3(d).normalize();b=0;for(f=t.length;b<f;b++)r=t[b].clone(),void 0!==d&&r.applyMatrix3(d).normalize(),m.vertexNormals.push(r);m.color.copy(g.color);b=0;for(f=s.length;b<f;b++)r=s[b],m.vertexColors.push(r.clone());m.materialIndex=g.materialIndex+c;h.push(m)}p=0;for(q=a.length;p<q;p++)if(c=a[p],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(new THREE.Vector2(c[b].x,c[b].y));n.push(d)}}},mergeMesh:function(a){!1===
a instanceof THREE.Mesh?console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a):(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<g;f++)for(e=this.faces[f],
e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==n[b])return n[b];n[b]=l.length/3;l.push(a.x,a.y,a.z);return n[b]}function c(a){var b=
a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==q[b])return q[b];q[b]=p.length;p.push(a.getHex());return q[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==r[b])return r[b];r[b]=m.length/2;m.push(a.x,a.y);return r[b]}var e={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};""!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=
0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],l=[],n={},p=[],q={},m=[],r={};for(g=0;g<this.faces.length;g++){var t=this.faces[g],s=void 0!==this.faceVertexUvs[0][g],u=0<t.normal.length(),w=0<t.vertexNormals.length,H=1!==t.color.r||1!==t.color.g||1!==t.color.b,M=0<t.vertexColors.length,v=0,v=a(v,0,0),v=a(v,1,!1),v=a(v,2,!1),v=a(v,3,s),v=a(v,4,u),v=a(v,5,w),v=a(v,6,H),v=a(v,7,M);h.push(v);h.push(t.a,t.b,t.c);s&&(s=this.faceVertexUvs[0][g],h.push(d(s[0]),d(s[1]),d(s[2])));
u&&h.push(b(t.normal));w&&(u=t.vertexNormals,h.push(b(u[0]),b(u[1]),b(u[2])));H&&h.push(c(t.color));M&&(t=t.vertexColors,h.push(c(t[0]),c(t[1]),c(t[2])))}e.data={};e.data.vertices=f;e.data.normals=l;0<p.length&&(e.data.colors=p);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return e},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<
d;c++){for(var e=b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new THREE.Vector2(e[g].x,e[g].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);
THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();
THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type="CubeCamera";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));
this.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var l=new THREE.PerspectiveCamera(90,1,a,b);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,-1));this.add(l);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,m=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=
1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=m;c.activeCubeFace=5;a.render(b,l,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,a=Math.tan(THREE.Math.degToRad(.5*a))*this.near,c=-a,d=b*c,b=Math.abs(b*a-d),c=Math.abs(a-c);this.projectionMatrix.makeFrustum(d+this.x*b/this.fullWidth,d+(this.x+this.width)*b/this.fullWidth,a-(this.y+this.height)*c/this.fullHeight,a-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,
this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};THREE.Light=function(a){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);
THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};
THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=
0;this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},toJSON:function(){var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};""!==this.name&&
(a.name=this.name);this instanceof THREE.MeshBasicMaterial?(a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshLambertMaterial?(a.color=this.color.getHex(),a.ambient=this.ambient.getHex(),a.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&
(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshPhongMaterial?(a.color=this.color.getHex(),a.ambient=this.ambient.getHex(),a.emissive=this.emissive.getHex(),a.specular=this.specular.getHex(),a.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.shading!==
THREE.FlatShading&&(a.shading=this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.ShaderMaterial?(a.uniforms=this.uniforms,a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(a.color=this.color.getHex());
1>this.opacity&&(a.opacity=this.opacity);!1!==this.transparent&&(a.transparent=this.transparent);!1!==this.wireframe&&(a.wireframe=this.wireframe);return a},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=
this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;
a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=
1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;
a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=
THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type="MeshDepthMaterial";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type="MeshNormalMaterial";this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type="MeshFaceMaterial";this.materials=a instanceof Array?a:[]};
THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;b<c;b++)a.materials.push(this.materials[b].toJSON());return a},clone:function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a}};
THREE.PointCloudMaterial=function(a){THREE.Material.call(this);this.type="PointCloudMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.PointCloudMaterial.prototype.clone=function(){var a=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=function(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ParticleSystemMaterial=function(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=
this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};
THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.fog=this.fog;return a};
THREE.Texture=function(a,b,c,d,e,f,g,h,l){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=
void 0!==l?l:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping;
THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=
this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,l){THREE.Texture.call(this,a,b,c,d,e,f,g,h,l);this.images=a};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CubeTexture.clone=function(a){void 0===a&&(a=new THREE.CubeTexture);THREE.Texture.prototype.clone.call(this,a);a.images=this.images;return a};THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,l,n,p){THREE.Texture.call(this,null,f,g,h,l,n,d,e,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,l,n,p){THREE.Texture.call(this,null,f,g,h,l,n,d,e,p);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};
THREE.VideoTexture=function(a,b,c,d,e,f,g,h,l){THREE.Texture.call(this,a,b,c,d,e,f,g,h,l);this.generateMipmaps=!1;var n=this,p=function(){requestAnimationFrame(p);a.readyState===a.HAVE_ENOUGH_DATA&&(n.needsUpdate=!0)};p()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointCloud=function(a,b){THREE.Object3D.call(this);this.type="PointCloud";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointCloudMaterial({color:16777215*Math.random()});this.sortParticles=!1};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointCloud.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){var e=this,f=e.geometry,g=c.params.PointCloud.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(null===f.boundingBox||!1!==b.isIntersectionBox(f.boundingBox)){var h=g/((this.scale.x+this.scale.y+this.scale.z)/3),l=new THREE.Vector3,g=function(a,f){var g=b.distanceToPoint(a);if(g<h){var l=b.closestPointToPoint(a);l.applyMatrix4(e.matrixWorld);var m=c.ray.origin.distanceTo(l);
d.push({distance:m,distanceToRay:g,point:l.clone(),index:f,face:null,object:e})}};if(f instanceof THREE.BufferGeometry){var n=f.attributes,p=n.position.array;if(void 0!==n.index){var n=n.index.array,q=f.offsets;0===q.length&&(q=[{start:0,count:n.length,index:0}]);for(var m=0,r=q.length;m<r;++m)for(var t=q[m].start,s=q[m].index,f=t,t=t+q[m].count;f<t;f++){var u=s+n[f];l.fromArray(p,3*u);g(l,u)}}else for(n=p.length/3,f=0;f<n;f++)l.set(p[3*f],p[3*f+1],p[3*f+2]),g(l,f)}else for(l=this.geometry.vertices,
f=0;f<l.length;f++)g(l[f],f)}}}();THREE.PointCloud.prototype.clone=function(a){void 0===a&&(a=new THREE.PointCloud(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");return new THREE.PointCloud(a,b)};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.type="Line";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.mode=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==d.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(d.ray).applyMatrix4(a),g instanceof THREE.Geometry))for(var g=g.vertices,h=g.length,l=new THREE.Vector3,n=new THREE.Vector3,p=this.mode===THREE.LineStrip?
1:2,q=0;q<h-1;q+=p)if(!(b.distanceSqToSegment(g[q],g[q+1],n,l)>f)){var m=b.origin.distanceTo(n);m<d.near||m>d.far||e.push({distance:m,point:l.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.mode));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g,h){var l=this.geometry;null===l.boundingSphere&&l.computeBoundingSphere();c.copy(l.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==g.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(g.ray).applyMatrix4(a),null===l.boundingBox||!1!==b.isIntersectionBox(l.boundingBox)))if(l instanceof THREE.BufferGeometry){var n=
this.material;if(void 0!==n){var p=l.attributes,q,m,r=g.precision;if(void 0!==p.index){var t=p.index.array,s=p.position.array,u=l.offsets;0===u.length&&(u=[{start:0,count:t.length,index:0}]);for(var w=0,H=u.length;w<H;++w)for(var p=u[w].start,M=u[w].index,l=p,v=p+u[w].count;l<v;l+=3){p=M+t[l];q=M+t[l+1];m=M+t[l+2];d.fromArray(s,3*p);e.fromArray(s,3*q);f.fromArray(s,3*m);var X=n.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,n.side!==THREE.DoubleSide);if(null!==X){X.applyMatrix4(this.matrixWorld);
var y=g.ray.origin.distanceTo(X);y<r||y<g.near||y>g.far||h.push({distance:y,point:X,face:new THREE.Face3(p,q,m,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this})}}}else for(s=p.position.array,t=l=0,v=s.length;l<v;l+=3,t+=9)p=l,q=l+1,m=l+2,d.fromArray(s,t),e.fromArray(s,t+3),f.fromArray(s,t+6),X=n.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,n.side!==THREE.DoubleSide),null!==X&&(X.applyMatrix4(this.matrixWorld),y=g.ray.origin.distanceTo(X),y<r||y<g.near||y>
g.far||h.push({distance:y,point:X,face:new THREE.Face3(p,q,m,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this}))}}else if(l instanceof THREE.Geometry)for(t=this.material instanceof THREE.MeshFaceMaterial,s=!0===t?this.material.materials:null,r=g.precision,u=l.vertices,w=0,H=l.faces.length;w<H;w++)if(M=l.faces[w],n=!0===t?s[M.materialIndex]:this.material,void 0!==n){p=u[M.a];q=u[M.b];m=u[M.c];if(!0===n.morphTargets){X=l.morphTargets;y=this.morphTargetInfluences;d.set(0,0,0);e.set(0,0,0);f.set(0,
0,0);for(var v=0,A=X.length;v<A;v++){var B=y[v];if(0!==B){var D=X[v].vertices;d.x+=(D[M.a].x-p.x)*B;d.y+=(D[M.a].y-p.y)*B;d.z+=(D[M.a].z-p.z)*B;e.x+=(D[M.b].x-q.x)*B;e.y+=(D[M.b].y-q.y)*B;e.z+=(D[M.b].z-q.z)*B;f.x+=(D[M.c].x-m.x)*B;f.y+=(D[M.c].y-m.y)*B;f.z+=(D[M.c].z-m.z)*B}}d.add(p);e.add(q);f.add(m);p=d;q=e;m=f}X=n.side===THREE.BackSide?b.intersectTriangle(m,q,p,!0):b.intersectTriangle(p,q,m,n.side!==THREE.DoubleSide);null!==X&&(X.applyMatrix4(this.matrixWorld),y=g.ray.origin.distanceTo(X),y<r||
y<g.near||y>g.far||h.push({distance:y,point:X,face:M,faceIndex:w,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),
this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};
THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}};
THREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};
THREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e,f,g,h=0,l=this.geometry.bones.length;h<l;++h)d=this.geometry.bones[h],e=d.pos,f=d.rotq,g=d.scl,b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.set(e[0],e[1],e[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),void 0!==g?b.scale.set(g[0],g[1],g[2]):b.scale.set(1,
1,1);h=0;for(l=this.geometry.bones.length;h<l;++h)d=this.geometry.bones[h],-1!==d.parent?a[d.parent].add(a[h]):this.add(a[h])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};
THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)};
THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.type="MorphAnimMesh";this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)_?(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;e<f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);
THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};
THREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();
THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;d<e;d++)if(c>=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}();
THREE.LOD.prototype.clone=function(a){void 0===a&&(a=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,a);for(var b=0,c=this.objects.length;b<c;b++){var d=this.objects[b].object.clone();d.visible=0===b;a.addLevel(d,this.objects[b].distance)}return a};
THREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;d.addAttribute("index",new THREE.BufferAttribute(a,1));d.addAttribute("position",new THREE.BufferAttribute(b,3));d.addAttribute("uv",new THREE.BufferAttribute(c,2));return function(a){THREE.Object3D.call(this);this.type="Sprite";this.geometry=d;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();
THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceToPoint(a);d>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Particle=THREE.Sprite;
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};
THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";
THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n\tmvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;";
THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";
THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif";
THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";
THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif";
THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif";THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif";
THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";
THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";
THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n";
THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\tvec3 reflectVec;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\tif ( useRefract ) {\n\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t} else { \n\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t}\n\n\t#else\n\n\t\treflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#else\n\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\n\t#endif\n\n\tif ( combine == 1 ) {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n\t} else if ( combine == 2 ) {\n\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n\t} else {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n\t}\n\n#endif";
THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";
THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";
THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif";
THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n\tobjectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n\tobjectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n\tobjectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;";
THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";
THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";
THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif";
THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tif ( useRefract ) {\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t} else {\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t}\n\n#endif";
THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n";
THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#endif\n\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#endif\n\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif";
THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif";
THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n";
THREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];b[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e}}return b}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",
value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},
hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},
opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,
THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,
{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},
specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG\nuniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,
THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,
"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,
"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",
value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},
specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}",
THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\tvec3 hemiDiffuse = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t\themiDiffuse += diffuse * hemiColor;\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\t\t\tvec3 lVectorGround = -lVector;\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\t\tdisplacedPosition = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\tdisplacedPosition = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",
THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};
THREE.WebGLRenderer=function(a){function b(a){var b=a.geometry;a=a.material;var c=b.vertices.length;if(a.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var d in a.attributes){var e=a.attributes[d];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var f=1;"v2"===e.type?f=2:"v3"===e.type?f=3:"v4"===e.type?f=4:"c"===e.type&&(f=3);e.size=f;e.array=new Float32Array(c*f);e.buffer=k.createBuffer();e.buffer.belongsToAttribute=d;e.needsUpdate=
!0}b.__webglCustomAttributesList.push(e)}}}function c(a,b){var c=b.geometry,e=a.faces3,f=3*e.length,g=1*e.length,h=3*e.length,e=d(b,a);a.__vertexArray=new Float32Array(3*f);a.__normalArray=new Float32Array(3*f);a.__colorArray=new Float32Array(3*f);a.__uvArray=new Float32Array(2*f);1<c.faceVertexUvs.length&&(a.__uv2Array=new Float32Array(2*f));c.hasTangents&&(a.__tangentArray=new Float32Array(4*f));b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*
f),a.__skinWeightArray=new Float32Array(4*f));c=null!==ka.get("OES_element_index_uint")&&21845<g?Uint32Array:Uint16Array;a.__typeArray=c;a.__faceArray=new c(3*g);a.__lineArray=new c(2*h);var l;if(a.numMorphTargets)for(a.__morphTargetsArrays=[],c=0,l=a.numMorphTargets;c<l;c++)a.__morphTargetsArrays.push(new Float32Array(3*f));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],c=0,l=a.numMorphNormals;c<l;c++)a.__morphNormalsArrays.push(new Float32Array(3*f));a.__webglFaceCount=3*g;a.__webglLineCount=
2*h;if(e.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var m in e.attributes){var g=e.attributes[m],h={},n;for(n in g)h[n]=g[n];if(!h.__webglInitialized||h.createUniqueBuffers)h.__webglInitialized=!0,c=1,"v2"===h.type?c=2:"v3"===h.type?c=3:"v4"===h.type?c=4:"c"===h.type&&(c=3),h.size=c,h.array=new Float32Array(f*c),h.buffer=k.createBuffer(),h.buffer.belongsToAttribute=m,g.needsUpdate=!0,h.__original=g;a.__webglCustomAttributesList.push(h)}}a.__inittedArrays=
!0}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function e(a,b,c,d){c=c.attributes;var e=b.attributes;b=b.attributesKeys;for(var f=0,l=b.length;f<l;f++){var m=b[f],n=e[m];if(0<=n){var p=c[m];void 0!==p?(m=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),g(n),k.vertexAttribPointer(n,m,k.FLOAT,!1,0,d*m*4)):void 0!==a.defaultAttributeValues&&(2===a.defaultAttributeValues[m].length?k.vertexAttrib2fv(n,a.defaultAttributeValues[m]):
3===a.defaultAttributeValues[m].length&&k.vertexAttrib3fv(n,a.defaultAttributeValues[m]))}}h()}function f(){for(var a=0,b=Cb.length;a<b;a++)Cb[a]=0}function g(a){Cb[a]=1;0===eb[a]&&(k.enableVertexAttribArray(a),eb[a]=1)}function h(){for(var a=0,b=eb.length;a<b;a++)eb[a]!==Cb[a]&&(k.disableVertexAttribArray(a),eb[a]=0)}function l(a,b){return a.material.id!==b.material.id?b.material.id-a.material.id:a.z!==b.z?b.z-a.z:a.id-b.id}function n(a,b){return a.z!==b.z?a.z-b.z:a.id-b.id}function p(a,b){return b[0]-
a[0]}function q(a,e){if(!1!==e.visible){if(!(e instanceof THREE.Scene||e instanceof THREE.Group)){void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,e.addEventListener("removed",Hc));var f=e.geometry;if(void 0!==f&&void 0===f.__webglInit&&(f.__webglInit=!0,f.addEventListener("dispose",Ic),!(f instanceof THREE.BufferGeometry)))if(e instanceof THREE.Mesh)s(a,e,f);else if(e instanceof THREE.Line){if(void 0===f.__webglVertexBuffer){f.__webglVertexBuffer=
k.createBuffer();f.__webglColorBuffer=k.createBuffer();f.__webglLineDistanceBuffer=k.createBuffer();C.info.memory.geometries++;var g=f.vertices.length;f.__vertexArray=new Float32Array(3*g);f.__colorArray=new Float32Array(3*g);f.__lineDistanceArray=new Float32Array(1*g);f.__webglLineCount=g;b(e);f.verticesNeedUpdate=!0;f.colorsNeedUpdate=!0;f.lineDistancesNeedUpdate=!0}}else if(e instanceof THREE.PointCloud&&void 0===f.__webglVertexBuffer){f.__webglVertexBuffer=k.createBuffer();f.__webglColorBuffer=
k.createBuffer();C.info.memory.geometries++;var h=f.vertices.length;f.__vertexArray=new Float32Array(3*h);f.__colorArray=new Float32Array(3*h);f.__sortArray=[];f.__webglParticleCount=h;b(e);f.verticesNeedUpdate=!0;f.colorsNeedUpdate=!0}if(void 0===e.__webglActive)if(e.__webglActive=!0,e instanceof THREE.Mesh)if(f instanceof THREE.BufferGeometry)u(Za,f,e);else{if(f instanceof THREE.Geometry)for(var l=Db[f.id],m=0,n=l.length;m<n;m++)u(Za,l[m],e)}else e instanceof THREE.Line||e instanceof THREE.PointCloud?
u(Za,f,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&fb.push({id:null,object:e,opaque:null,transparent:null,z:0});if(e instanceof THREE.Light)Ra.push(e);else if(e instanceof THREE.Sprite)Bc.push(e);else if(e instanceof THREE.LensFlare)Cc.push(e);else{var t=Za[e.id];if(t&&(!1===e.frustumCulled||!0===Dc.intersectsObject(e))){var r=e.geometry,v,M;if(r instanceof THREE.BufferGeometry)for(var y=r.attributes,A=r.attributesKeys,B=0,E=A.length;B<E;B++){var X=A[B],D=y[X];void 0===
D.buffer&&(D.buffer=k.createBuffer(),D.needsUpdate=!0);if(!0===D.needsUpdate){var F="index"===X?k.ELEMENT_ARRAY_BUFFER:k.ARRAY_BUFFER;k.bindBuffer(F,D.buffer);k.bufferData(F,D.array,k.STATIC_DRAW);D.needsUpdate=!1}}else if(e instanceof THREE.Mesh){!0===r.groupsNeedUpdate&&s(a,e,r);for(var L=Db[r.id],O=0,N=L.length;O<N;O++){var ca=L[O];M=d(e,ca);!0===r.groupsNeedUpdate&&c(ca,e);v=M.attributes&&w(M);if(r.verticesNeedUpdate||r.morphTargetsNeedUpdate||r.elementsNeedUpdate||r.uvsNeedUpdate||r.normalsNeedUpdate||
r.colorsNeedUpdate||r.tangentsNeedUpdate||v){var J=ca,ea=e,Q=k.DYNAMIC_DRAW,aa=!r.dynamic,T=M;if(J.__inittedArrays){var ka=T&&void 0!==T.shading&&T.shading===THREE.SmoothShading,I=void 0,U=void 0,ra=void 0,$=void 0,Da=void 0,Ya=void 0,rc=void 0,mb=void 0,gb=void 0,Ta=void 0,Ua=void 0,Y=void 0,W=void 0,V=void 0,ob=void 0,na=void 0,G=void 0,sc=void 0,la=void 0,Ga=void 0,ha=void 0,pb=void 0,qb=void 0,rb=void 0,wa=void 0,Eb=void 0,Fb=void 0,Aa=void 0,Gb=void 0,va=void 0,sa=void 0,Hb=void 0,Ec=void 0,
Pb=void 0,Ha=void 0,db=void 0,Sa=void 0,Va=void 0,vc=void 0,Qb=void 0,$a=0,ab=0,sb=0,tb=0,Ib=0,La=0,xa=0,Ja=0,Ea=0,ia=0,pa=0,z=0,Ba=void 0,Ka=J.__vertexArray,ub=J.__uvArray,bb=J.__uv2Array,Ma=J.__normalArray,oa=J.__tangentArray,Fa=J.__colorArray,Na=J.__skinIndexArray,Oa=J.__skinWeightArray,Jb=J.__morphTargetsArrays,Jc=J.__morphNormalsArrays,eb=J.__webglCustomAttributesList,x=void 0,Rb=J.__faceArray,Ca=J.__lineArray,ta=ea.geometry,Wa=ta.elementsNeedUpdate,Kc=ta.uvsNeedUpdate,ec=ta.normalsNeedUpdate,
ba=ta.tangentsNeedUpdate,fc=ta.colorsNeedUpdate,P=ta.morphTargetsNeedUpdate,da=ta.vertices,K=J.faces3,ua=ta.faces,qa=ta.faceVertexUvs[0],Lc=ta.faceVertexUvs[1],Fc=ta.skinIndices,Sb=ta.skinWeights,hb=ta.morphTargets,ya=ta.morphNormals;if(ta.verticesNeedUpdate){I=0;for(U=K.length;I<U;I++)$=ua[K[I]],Y=da[$.a],W=da[$.b],V=da[$.c],Ka[ab]=Y.x,Ka[ab+1]=Y.y,Ka[ab+2]=Y.z,Ka[ab+3]=W.x,Ka[ab+4]=W.y,Ka[ab+5]=W.z,Ka[ab+6]=V.x,Ka[ab+7]=V.y,Ka[ab+8]=V.z,ab+=9;k.bindBuffer(k.ARRAY_BUFFER,J.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,
Ka,Q)}if(P)for(Ha=0,db=hb.length;Ha<db;Ha++){I=pa=0;for(U=K.length;I<U;I++)vc=K[I],$=ua[vc],Y=hb[Ha].vertices[$.a],W=hb[Ha].vertices[$.b],V=hb[Ha].vertices[$.c],Sa=Jb[Ha],Sa[pa]=Y.x,Sa[pa+1]=Y.y,Sa[pa+2]=Y.z,Sa[pa+3]=W.x,Sa[pa+4]=W.y,Sa[pa+5]=W.z,Sa[pa+6]=V.x,Sa[pa+7]=V.y,Sa[pa+8]=V.z,T.morphNormals&&(ka?(Qb=ya[Ha].vertexNormals[vc],sc=Qb.a,la=Qb.b,Ga=Qb.c):Ga=la=sc=ya[Ha].faceNormals[vc],Va=Jc[Ha],Va[pa]=sc.x,Va[pa+1]=sc.y,Va[pa+2]=sc.z,Va[pa+3]=la.x,Va[pa+4]=la.y,Va[pa+5]=la.z,Va[pa+6]=Ga.x,Va[pa+
7]=Ga.y,Va[pa+8]=Ga.z),pa+=9;k.bindBuffer(k.ARRAY_BUFFER,J.__webglMorphTargetsBuffers[Ha]);k.bufferData(k.ARRAY_BUFFER,Jb[Ha],Q);T.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,J.__webglMorphNormalsBuffers[Ha]),k.bufferData(k.ARRAY_BUFFER,Jc[Ha],Q))}if(Sb.length){I=0;for(U=K.length;I<U;I++)$=ua[K[I]],rb=Sb[$.a],wa=Sb[$.b],Eb=Sb[$.c],Oa[ia]=rb.x,Oa[ia+1]=rb.y,Oa[ia+2]=rb.z,Oa[ia+3]=rb.w,Oa[ia+4]=wa.x,Oa[ia+5]=wa.y,Oa[ia+6]=wa.z,Oa[ia+7]=wa.w,Oa[ia+8]=Eb.x,Oa[ia+9]=Eb.y,Oa[ia+10]=Eb.z,Oa[ia+11]=Eb.w,Fb=
Fc[$.a],Aa=Fc[$.b],Gb=Fc[$.c],Na[ia]=Fb.x,Na[ia+1]=Fb.y,Na[ia+2]=Fb.z,Na[ia+3]=Fb.w,Na[ia+4]=Aa.x,Na[ia+5]=Aa.y,Na[ia+6]=Aa.z,Na[ia+7]=Aa.w,Na[ia+8]=Gb.x,Na[ia+9]=Gb.y,Na[ia+10]=Gb.z,Na[ia+11]=Gb.w,ia+=12;0<ia&&(k.bindBuffer(k.ARRAY_BUFFER,J.__webglSkinIndicesBuffer),k.bufferData(k.ARRAY_BUFFER,Na,Q),k.bindBuffer(k.ARRAY_BUFFER,J.__webglSkinWeightsBuffer),k.bufferData(k.ARRAY_BUFFER,Oa,Q))}if(fc){I=0;for(U=K.length;I<U;I++)$=ua[K[I]],rc=$.vertexColors,mb=$.color,3===rc.length&&T.vertexColors===THREE.VertexColors?
(ha=rc[0],pb=rc[1],qb=rc[2]):qb=pb=ha=mb,Fa[Ea]=ha.r,Fa[Ea+1]=ha.g,Fa[Ea+2]=ha.b,Fa[Ea+3]=pb.r,Fa[Ea+4]=pb.g,Fa[Ea+5]=pb.b,Fa[Ea+6]=qb.r,Fa[Ea+7]=qb.g,Fa[Ea+8]=qb.b,Ea+=9;0<Ea&&(k.bindBuffer(k.ARRAY_BUFFER,J.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,Fa,Q))}if(ba&&ta.hasTangents){I=0;for(U=K.length;I<U;I++)$=ua[K[I]],gb=$.vertexTangents,ob=gb[0],na=gb[1],G=gb[2],oa[xa]=ob.x,oa[xa+1]=ob.y,oa[xa+2]=ob.z,oa[xa+3]=ob.w,oa[xa+4]=na.x,oa[xa+5]=na.y,oa[xa+6]=na.z,oa[xa+7]=na.w,oa[xa+8]=G.x,oa[xa+9]=
G.y,oa[xa+10]=G.z,oa[xa+11]=G.w,xa+=12;k.bindBuffer(k.ARRAY_BUFFER,J.__webglTangentBuffer);k.bufferData(k.ARRAY_BUFFER,oa,Q)}if(ec){I=0;for(U=K.length;I<U;I++)if($=ua[K[I]],Da=$.vertexNormals,Ya=$.normal,3===Da.length&&ka)for(va=0;3>va;va++)Hb=Da[va],Ma[La]=Hb.x,Ma[La+1]=Hb.y,Ma[La+2]=Hb.z,La+=3;else for(va=0;3>va;va++)Ma[La]=Ya.x,Ma[La+1]=Ya.y,Ma[La+2]=Ya.z,La+=3;k.bindBuffer(k.ARRAY_BUFFER,J.__webglNormalBuffer);k.bufferData(k.ARRAY_BUFFER,Ma,Q)}if(Kc&&qa){I=0;for(U=K.length;I<U;I++)if(ra=K[I],
Ta=qa[ra],void 0!==Ta)for(va=0;3>va;va++)Ec=Ta[va],ub[sb]=Ec.x,ub[sb+1]=Ec.y,sb+=2;0<sb&&(k.bindBuffer(k.ARRAY_BUFFER,J.__webglUVBuffer),k.bufferData(k.ARRAY_BUFFER,ub,Q))}if(Kc&&Lc){I=0;for(U=K.length;I<U;I++)if(ra=K[I],Ua=Lc[ra],void 0!==Ua)for(va=0;3>va;va++)Pb=Ua[va],bb[tb]=Pb.x,bb[tb+1]=Pb.y,tb+=2;0<tb&&(k.bindBuffer(k.ARRAY_BUFFER,J.__webglUV2Buffer),k.bufferData(k.ARRAY_BUFFER,bb,Q))}if(Wa){I=0;for(U=K.length;I<U;I++)Rb[Ib]=$a,Rb[Ib+1]=$a+1,Rb[Ib+2]=$a+2,Ib+=3,Ca[Ja]=$a,Ca[Ja+1]=$a+1,Ca[Ja+
2]=$a,Ca[Ja+3]=$a+2,Ca[Ja+4]=$a+1,Ca[Ja+5]=$a+2,Ja+=6,$a+=3;k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,J.__webglFaceBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,Rb,Q);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,J.__webglLineBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,Ca,Q)}if(eb)for(va=0,sa=eb.length;va<sa;va++)if(x=eb[va],x.__original.needsUpdate){z=0;if(1===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo)for(I=0,U=K.length;I<U;I++)$=ua[K[I]],x.array[z]=x.value[$.a],x.array[z+1]=x.value[$.b],x.array[z+2]=x.value[$.c],
z+=3;else{if("faces"===x.boundTo)for(I=0,U=K.length;I<U;I++)Ba=x.value[K[I]],x.array[z]=Ba,x.array[z+1]=Ba,x.array[z+2]=Ba,z+=3}else if(2===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo)for(I=0,U=K.length;I<U;I++)$=ua[K[I]],Y=x.value[$.a],W=x.value[$.b],V=x.value[$.c],x.array[z]=Y.x,x.array[z+1]=Y.y,x.array[z+2]=W.x,x.array[z+3]=W.y,x.array[z+4]=V.x,x.array[z+5]=V.y,z+=6;else{if("faces"===x.boundTo)for(I=0,U=K.length;I<U;I++)V=W=Y=Ba=x.value[K[I]],x.array[z]=Y.x,x.array[z+1]=Y.y,x.array[z+
2]=W.x,x.array[z+3]=W.y,x.array[z+4]=V.x,x.array[z+5]=V.y,z+=6}else if(3===x.size){var ja;ja="c"===x.type?["r","g","b"]:["x","y","z"];if(void 0===x.boundTo||"vertices"===x.boundTo)for(I=0,U=K.length;I<U;I++)$=ua[K[I]],Y=x.value[$.a],W=x.value[$.b],V=x.value[$.c],x.array[z]=Y[ja[0]],x.array[z+1]=Y[ja[1]],x.array[z+2]=Y[ja[2]],x.array[z+3]=W[ja[0]],x.array[z+4]=W[ja[1]],x.array[z+5]=W[ja[2]],x.array[z+6]=V[ja[0]],x.array[z+7]=V[ja[1]],x.array[z+8]=V[ja[2]],z+=9;else if("faces"===x.boundTo)for(I=0,U=
K.length;I<U;I++)V=W=Y=Ba=x.value[K[I]],x.array[z]=Y[ja[0]],x.array[z+1]=Y[ja[1]],x.array[z+2]=Y[ja[2]],x.array[z+3]=W[ja[0]],x.array[z+4]=W[ja[1]],x.array[z+5]=W[ja[2]],x.array[z+6]=V[ja[0]],x.array[z+7]=V[ja[1]],x.array[z+8]=V[ja[2]],z+=9;else if("faceVertices"===x.boundTo)for(I=0,U=K.length;I<U;I++)Ba=x.value[K[I]],Y=Ba[0],W=Ba[1],V=Ba[2],x.array[z]=Y[ja[0]],x.array[z+1]=Y[ja[1]],x.array[z+2]=Y[ja[2]],x.array[z+3]=W[ja[0]],x.array[z+4]=W[ja[1]],x.array[z+5]=W[ja[2]],x.array[z+6]=V[ja[0]],x.array[z+
7]=V[ja[1]],x.array[z+8]=V[ja[2]],z+=9}else if(4===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo)for(I=0,U=K.length;I<U;I++)$=ua[K[I]],Y=x.value[$.a],W=x.value[$.b],V=x.value[$.c],x.array[z]=Y.x,x.array[z+1]=Y.y,x.array[z+2]=Y.z,x.array[z+3]=Y.w,x.array[z+4]=W.x,x.array[z+5]=W.y,x.array[z+6]=W.z,x.array[z+7]=W.w,x.array[z+8]=V.x,x.array[z+9]=V.y,x.array[z+10]=V.z,x.array[z+11]=V.w,z+=12;else if("faces"===x.boundTo)for(I=0,U=K.length;I<U;I++)V=W=Y=Ba=x.value[K[I]],x.array[z]=Y.x,x.array[z+1]=
Y.y,x.array[z+2]=Y.z,x.array[z+3]=Y.w,x.array[z+4]=W.x,x.array[z+5]=W.y,x.array[z+6]=W.z,x.array[z+7]=W.w,x.array[z+8]=V.x,x.array[z+9]=V.y,x.array[z+10]=V.z,x.array[z+11]=V.w,z+=12;else if("faceVertices"===x.boundTo)for(I=0,U=K.length;I<U;I++)Ba=x.value[K[I]],Y=Ba[0],W=Ba[1],V=Ba[2],x.array[z]=Y.x,x.array[z+1]=Y.y,x.array[z+2]=Y.z,x.array[z+3]=Y.w,x.array[z+4]=W.x,x.array[z+5]=W.y,x.array[z+6]=W.z,x.array[z+7]=W.w,x.array[z+8]=V.x,x.array[z+9]=V.y,x.array[z+10]=V.z,x.array[z+11]=V.w,z+=12;k.bindBuffer(k.ARRAY_BUFFER,
x.buffer);k.bufferData(k.ARRAY_BUFFER,x.array,Q)}aa&&(delete J.__inittedArrays,delete J.__colorArray,delete J.__normalArray,delete J.__tangentArray,delete J.__uvArray,delete J.__uv2Array,delete J.__faceArray,delete J.__vertexArray,delete J.__lineArray,delete J.__skinIndexArray,delete J.__skinWeightArray)}}}r.verticesNeedUpdate=!1;r.morphTargetsNeedUpdate=!1;r.elementsNeedUpdate=!1;r.uvsNeedUpdate=!1;r.normalsNeedUpdate=!1;r.colorsNeedUpdate=!1;r.tangentsNeedUpdate=!1;M.attributes&&H(M)}else if(e instanceof
THREE.Line){M=d(e,r);v=M.attributes&&w(M);if(r.verticesNeedUpdate||r.colorsNeedUpdate||r.lineDistancesNeedUpdate||v){var Yb=k.DYNAMIC_DRAW,Xa,Kb,cb,Zb,fa,wc,zb=r.vertices,Ab=r.colors,nb=r.lineDistances,Bb=zb.length,Cb=Ab.length,jc=nb.length,Nb=r.__vertexArray,lb=r.__colorArray,yb=r.__lineDistanceArray,pc=r.colorsNeedUpdate,qc=r.lineDistancesNeedUpdate,cc=r.__webglCustomAttributesList,xc,kc,za,hc,Pa,ma;if(r.verticesNeedUpdate){for(Xa=0;Xa<Bb;Xa++)Zb=zb[Xa],fa=3*Xa,Nb[fa]=Zb.x,Nb[fa+1]=Zb.y,Nb[fa+2]=
Zb.z;k.bindBuffer(k.ARRAY_BUFFER,r.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,Nb,Yb)}if(pc){for(Kb=0;Kb<Cb;Kb++)wc=Ab[Kb],fa=3*Kb,lb[fa]=wc.r,lb[fa+1]=wc.g,lb[fa+2]=wc.b;k.bindBuffer(k.ARRAY_BUFFER,r.__webglColorBuffer);k.bufferData(k.ARRAY_BUFFER,lb,Yb)}if(qc){for(cb=0;cb<jc;cb++)yb[cb]=nb[cb];k.bindBuffer(k.ARRAY_BUFFER,r.__webglLineDistanceBuffer);k.bufferData(k.ARRAY_BUFFER,yb,Yb)}if(cc)for(xc=0,kc=cc.length;xc<kc;xc++)if(ma=cc[xc],ma.needsUpdate&&(void 0===ma.boundTo||"vertices"===ma.boundTo)){fa=
0;hc=ma.value.length;if(1===ma.size)for(za=0;za<hc;za++)ma.array[za]=ma.value[za];else if(2===ma.size)for(za=0;za<hc;za++)Pa=ma.value[za],ma.array[fa]=Pa.x,ma.array[fa+1]=Pa.y,fa+=2;else if(3===ma.size)if("c"===ma.type)for(za=0;za<hc;za++)Pa=ma.value[za],ma.array[fa]=Pa.r,ma.array[fa+1]=Pa.g,ma.array[fa+2]=Pa.b,fa+=3;else for(za=0;za<hc;za++)Pa=ma.value[za],ma.array[fa]=Pa.x,ma.array[fa+1]=Pa.y,ma.array[fa+2]=Pa.z,fa+=3;else if(4===ma.size)for(za=0;za<hc;za++)Pa=ma.value[za],ma.array[fa]=Pa.x,ma.array[fa+
1]=Pa.y,ma.array[fa+2]=Pa.z,ma.array[fa+3]=Pa.w,fa+=4;k.bindBuffer(k.ARRAY_BUFFER,ma.buffer);k.bufferData(k.ARRAY_BUFFER,ma.array,Yb)}}r.verticesNeedUpdate=!1;r.colorsNeedUpdate=!1;r.lineDistancesNeedUpdate=!1;M.attributes&&H(M)}else if(e instanceof THREE.PointCloud){M=d(e,r);v=M.attributes&&w(M);if(r.verticesNeedUpdate||r.colorsNeedUpdate||e.sortParticles||v){var dc=k.DYNAMIC_DRAW,Qa,vb,wb,S,xb,Tb,yc=r.vertices,gc=yc.length,kb=r.colors,lc=kb.length,$b=r.__vertexArray,ac=r.__colorArray,Lb=r.__sortArray,
mc=r.verticesNeedUpdate,nc=r.colorsNeedUpdate,Mb=r.__webglCustomAttributesList,ib,ic,Z,jb,ga,R;if(e.sortParticles){Gc.copy(zc);Gc.multiply(e.matrixWorld);for(Qa=0;Qa<gc;Qa++)wb=yc[Qa],Ia.copy(wb),Ia.applyProjection(Gc),Lb[Qa]=[Ia.z,Qa];Lb.sort(p);for(Qa=0;Qa<gc;Qa++)wb=yc[Lb[Qa][1]],S=3*Qa,$b[S]=wb.x,$b[S+1]=wb.y,$b[S+2]=wb.z;for(vb=0;vb<lc;vb++)S=3*vb,Tb=kb[Lb[vb][1]],ac[S]=Tb.r,ac[S+1]=Tb.g,ac[S+2]=Tb.b;if(Mb)for(ib=0,ic=Mb.length;ib<ic;ib++)if(R=Mb[ib],void 0===R.boundTo||"vertices"===R.boundTo)if(S=
0,jb=R.value.length,1===R.size)for(Z=0;Z<jb;Z++)xb=Lb[Z][1],R.array[Z]=R.value[xb];else if(2===R.size)for(Z=0;Z<jb;Z++)xb=Lb[Z][1],ga=R.value[xb],R.array[S]=ga.x,R.array[S+1]=ga.y,S+=2;else if(3===R.size)if("c"===R.type)for(Z=0;Z<jb;Z++)xb=Lb[Z][1],ga=R.value[xb],R.array[S]=ga.r,R.array[S+1]=ga.g,R.array[S+2]=ga.b,S+=3;else for(Z=0;Z<jb;Z++)xb=Lb[Z][1],ga=R.value[xb],R.array[S]=ga.x,R.array[S+1]=ga.y,R.array[S+2]=ga.z,S+=3;else if(4===R.size)for(Z=0;Z<jb;Z++)xb=Lb[Z][1],ga=R.value[xb],R.array[S]=
ga.x,R.array[S+1]=ga.y,R.array[S+2]=ga.z,R.array[S+3]=ga.w,S+=4}else{if(mc)for(Qa=0;Qa<gc;Qa++)wb=yc[Qa],S=3*Qa,$b[S]=wb.x,$b[S+1]=wb.y,$b[S+2]=wb.z;if(nc)for(vb=0;vb<lc;vb++)Tb=kb[vb],S=3*vb,ac[S]=Tb.r,ac[S+1]=Tb.g,ac[S+2]=Tb.b;if(Mb)for(ib=0,ic=Mb.length;ib<ic;ib++)if(R=Mb[ib],R.needsUpdate&&(void 0===R.boundTo||"vertices"===R.boundTo))if(jb=R.value.length,S=0,1===R.size)for(Z=0;Z<jb;Z++)R.array[Z]=R.value[Z];else if(2===R.size)for(Z=0;Z<jb;Z++)ga=R.value[Z],R.array[S]=ga.x,R.array[S+1]=ga.y,S+=
2;else if(3===R.size)if("c"===R.type)for(Z=0;Z<jb;Z++)ga=R.value[Z],R.array[S]=ga.r,R.array[S+1]=ga.g,R.array[S+2]=ga.b,S+=3;else for(Z=0;Z<jb;Z++)ga=R.value[Z],R.array[S]=ga.x,R.array[S+1]=ga.y,R.array[S+2]=ga.z,S+=3;else if(4===R.size)for(Z=0;Z<jb;Z++)ga=R.value[Z],R.array[S]=ga.x,R.array[S+1]=ga.y,R.array[S+2]=ga.z,R.array[S+3]=ga.w,S+=4}if(mc||e.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,r.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,$b,dc);if(nc||e.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,
r.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,ac,dc);if(Mb)for(ib=0,ic=Mb.length;ib<ic;ib++)if(R=Mb[ib],R.needsUpdate||e.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,R.buffer),k.bufferData(k.ARRAY_BUFFER,R.array,dc)}r.verticesNeedUpdate=!1;r.colorsNeedUpdate=!1;M.attributes&&H(M)}for(var bc=0,Ob=t.length;bc<Ob;bc++){var Ac=t[bc],Ub=Ac,oc=Ub.object,tc=Ub.buffer,uc=oc.geometry,Vb=oc.material;Vb instanceof THREE.MeshFaceMaterial?(Vb=Vb.materials[uc instanceof THREE.BufferGeometry?0:tc.materialIndex],
Ub.material=Vb,Vb.transparent?Wb.push(Ub):Xb.push(Ub)):Vb&&(Ub.material=Vb,Vb.transparent?Wb.push(Ub):Xb.push(Ub));Ac.render=!0;!0===C.sortObjects&&(null!==e.renderDepth?Ac.z=e.renderDepth:(Ia.setFromMatrixPosition(e.matrixWorld),Ia.applyProjection(zc),Ac.z=Ia.z))}}}}bc=0;for(Ob=e.children.length;bc<Ob;bc++)q(a,e.children[bc])}}function m(a,b,c,d,e,f){for(var g,k=a.length-1;-1!==k;k--){g=a[k];var h=g.object,l=g.buffer;y(h,b);if(f)g=f;else{g=g.material;if(!g)continue;e&&C.setBlending(g.blending,g.blendEquation,
g.blendSrc,g.blendDst);C.setDepthTest(g.depthTest);C.setDepthWrite(g.depthWrite);E(g.polygonOffset,g.polygonOffsetFactor,g.polygonOffsetUnits)}C.setMaterialFaces(g);l instanceof THREE.BufferGeometry?C.renderBufferDirect(b,c,d,g,l,h):C.renderBuffer(b,c,d,g,l,h)}}function r(a,b,c,d,e,f,g){for(var k,h=0,l=a.length;h<l;h++){k=a[h];var m=k.object;if(m.visible){if(g)k=g;else{k=k[b];if(!k)continue;f&&C.setBlending(k.blending,k.blendEquation,k.blendSrc,k.blendDst);C.setDepthTest(k.depthTest);C.setDepthWrite(k.depthWrite);
E(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits)}C.renderImmediateObject(c,d,e,k,m)}}}function t(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function s(a,b,d){var e=b.material,f=!1;if(void 0===Db[d.id]||!0===d.groupsNeedUpdate){delete Za[b.id];a=Db;for(var g=d.id,e=e instanceof THREE.MeshFaceMaterial,h=ka.get("OES_element_index_uint")?4294967296:65535,l,f={},m=d.morphTargets.length,n=d.morphNormals.length,p,q={},t=[],s=0,r=
d.faces.length;s<r;s++){l=d.faces[s];var v=e?l.materialIndex:0;v in f||(f[v]={hash:v,counter:0});l=f[v].hash+"_"+f[v].counter;l in q||(p={id:Mc++,faces3:[],materialIndex:v,vertices:0,numMorphTargets:m,numMorphNormals:n},q[l]=p,t.push(p));q[l].vertices+3>h&&(f[v].counter+=1,l=f[v].hash+"_"+f[v].counter,l in q||(p={id:Mc++,faces3:[],materialIndex:v,vertices:0,numMorphTargets:m,numMorphNormals:n},q[l]=p,t.push(p)));q[l].faces3.push(s);q[l].vertices+=3}a[g]=t;d.groupsNeedUpdate=!1}a=Db[d.id];g=0;for(e=
a.length;g<e;g++){h=a[g];if(void 0===h.__webglVertexBuffer){f=h;f.__webglVertexBuffer=k.createBuffer();f.__webglNormalBuffer=k.createBuffer();f.__webglTangentBuffer=k.createBuffer();f.__webglColorBuffer=k.createBuffer();f.__webglUVBuffer=k.createBuffer();f.__webglUV2Buffer=k.createBuffer();f.__webglSkinIndicesBuffer=k.createBuffer();f.__webglSkinWeightsBuffer=k.createBuffer();f.__webglFaceBuffer=k.createBuffer();f.__webglLineBuffer=k.createBuffer();n=m=void 0;if(f.numMorphTargets)for(f.__webglMorphTargetsBuffers=
[],m=0,n=f.numMorphTargets;m<n;m++)f.__webglMorphTargetsBuffers.push(k.createBuffer());if(f.numMorphNormals)for(f.__webglMorphNormalsBuffers=[],m=0,n=f.numMorphNormals;m<n;m++)f.__webglMorphNormalsBuffers.push(k.createBuffer());C.info.memory.geometries++;c(h,b);d.verticesNeedUpdate=!0;d.morphTargetsNeedUpdate=!0;d.elementsNeedUpdate=!0;d.uvsNeedUpdate=!0;d.normalsNeedUpdate=!0;d.tangentsNeedUpdate=!0;f=d.colorsNeedUpdate=!0}else f=!1;(f||void 0===b.__webglActive)&&u(Za,h,b)}b.__webglActive=!0}function u(a,
b,c){var d=c.id;a[d]=a[d]||[];a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function w(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function H(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function M(a,b,c,d,e){var f,g,h,l;jc=0;if(d.needsUpdate){d.program&&Nc(d);d.addEventListener("dispose",Oc);var m;d instanceof THREE.MeshDepthMaterial?m="depth":d instanceof THREE.MeshNormalMaterial?m="normal":d instanceof THREE.MeshBasicMaterial?m="basic":d instanceof
THREE.MeshLambertMaterial?m="lambert":d instanceof THREE.MeshPhongMaterial?m="phong":d instanceof THREE.LineBasicMaterial?m="basic":d instanceof THREE.LineDashedMaterial?m="dashed":d instanceof THREE.PointCloudMaterial&&(m="particle_basic");if(m){var n=THREE.ShaderLib[m];d.__webglShader={uniforms:THREE.UniformsUtils.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}}else d.__webglShader={uniforms:d.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader};for(var p=
0,q=0,t=0,s=0,r=0,u=b.length;r<u;r++){var M=b[r];M.onlyShadow||!1===M.visible||(M instanceof THREE.DirectionalLight&&p++,M instanceof THREE.PointLight&&q++,M instanceof THREE.SpotLight&&t++,M instanceof THREE.HemisphereLight&&s++)}f=p;g=q;h=t;l=s;for(var w,y=0,H=0,E=b.length;H<E;H++){var D=b[H];D.castShadow&&(D instanceof THREE.SpotLight&&y++,D instanceof THREE.DirectionalLight&&!D.shadowCascade&&y++)}w=y;var F;if(cc&&e&&e.skeleton&&e.skeleton.useVertexTexture)F=1024;else{var N=k.getParameter(k.MAX_VERTEX_UNIFORM_VECTORS),
Q=Math.floor((N-20)/4);void 0!==e&&e instanceof THREE.SkinnedMesh&&(Q=Math.min(e.skeleton.bones.length,Q),Q<e.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+Q+" (try OpenGL instead of ANGLE)"));F=Q}var ea={precision:J,supportsVertexTextures:kc,map:!!d.map,envMap:!!d.envMap,lightMap:!!d.lightMap,bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,vertexColors:d.vertexColors,fog:c,useFog:d.fog,
fogExp:c instanceof THREE.FogExp2,sizeAttenuation:d.sizeAttenuation,logarithmicDepthBuffer:mb,skinning:d.skinning,maxBones:F,useVertexTexture:cc&&e&&e.skeleton&&e.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:C.maxMorphTargets,maxMorphNormals:C.maxMorphNormals,maxDirLights:f,maxPointLights:g,maxSpotLights:h,maxHemiLights:l,maxShadows:w,shadowMapEnabled:C.shadowMapEnabled&&e.receiveShadow&&0<w,shadowMapType:C.shadowMapType,shadowMapDebug:C.shadowMapDebug,
shadowMapCascade:C.shadowMapCascade,alphaTest:d.alphaTest,metal:d.metal,wrapAround:d.wrapAround,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===THREE.BackSide},T=[];m?T.push(m):(T.push(d.fragmentShader),T.push(d.vertexShader));if(void 0!==d.defines)for(var ka in d.defines)T.push(ka),T.push(d.defines[ka]);for(ka in ea)T.push(ka),T.push(ea[ka]);for(var I=T.join(),U,Da=0,$=Ya.length;Da<$;Da++){var Ta=Ya[Da];if(Ta.code===I){U=Ta;U.usedTimes++;break}}void 0===U&&(U=new THREE.WebGLProgram(C,I,
d,ea),Ya.push(U),C.info.memory.programs=Ya.length);d.program=U;var Ua=U.attributes;if(d.morphTargets){d.numSupportedMorphTargets=0;for(var Ra,Za="morphTarget",gb=0;gb<C.maxMorphTargets;gb++)Ra=Za+gb,0<=Ua[Ra]&&d.numSupportedMorphTargets++}if(d.morphNormals)for(d.numSupportedMorphNormals=0,Za="morphNormal",gb=0;gb<C.maxMorphNormals;gb++)Ra=Za+gb,0<=Ua[Ra]&&d.numSupportedMorphNormals++;d.uniformsList=[];for(var db in d.__webglShader.uniforms){var eb=d.program.uniforms[db];eb&&d.uniformsList.push([d.__webglShader.uniforms[db],
eb])}d.needsUpdate=!1}d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(C.maxMorphTargets));var Y=!1,W=!1,V=!1,ob=d.program,na=ob.uniforms,G=d.__webglShader.uniforms;ob.id!==dc&&(k.useProgram(ob.program),dc=ob.id,V=W=Y=!0);d.id!==ec&&(-1===ec&&(V=!0),ec=d.id,W=!0);if(Y||a!==fc)k.uniformMatrix4fv(na.projectionMatrix,!1,a.projectionMatrix.elements),mb&&k.uniform1f(na.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==fc&&(fc=a),(d instanceof THREE.ShaderMaterial||
d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==na.cameraPosition&&(Ia.setFromMatrixPosition(a.matrixWorld),k.uniform3f(na.cameraPosition,Ia.x,Ia.y,Ia.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==na.viewMatrix&&k.uniformMatrix4fv(na.viewMatrix,!1,a.matrixWorldInverse.elements);if(d.skinning)if(e.bindMatrix&&null!==na.bindMatrix&&k.uniformMatrix4fv(na.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&
null!==na.bindMatrixInverse&&k.uniformMatrix4fv(na.bindMatrixInverse,!1,e.bindMatrixInverse.elements),cc&&e.skeleton&&e.skeleton.useVertexTexture){if(null!==na.boneTexture){var lb=X();k.uniform1i(na.boneTexture,lb);C.setTexture(e.skeleton.boneTexture,lb)}null!==na.boneTextureWidth&&k.uniform1i(na.boneTextureWidth,e.skeleton.boneTextureWidth);null!==na.boneTextureHeight&&k.uniform1i(na.boneTextureHeight,e.skeleton.boneTextureHeight)}else e.skeleton&&e.skeleton.boneMatrices&&null!==na.boneGlobalMatrices&&
k.uniformMatrix4fv(na.boneGlobalMatrices,!1,e.skeleton.boneMatrices);if(W){c&&d.fog&&(G.fogColor.value=c.color,c instanceof THREE.Fog?(G.fogNear.value=c.near,G.fogFar.value=c.far):c instanceof THREE.FogExp2&&(G.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Nb){var V=!0,la,Ga,ha,pb=0,qb=0,rb=0,wa,Eb,Fb,Aa,Gb,va,sa=Pc,Hb=sa.directional.colors,fb=sa.directional.positions,Pb=sa.point.colors,Ha=sa.point.positions,zb=sa.point.distances,
Sa=sa.spot.colors,Va=sa.spot.positions,Ab=sa.spot.distances,Qb=sa.spot.directions,$a=sa.spot.anglesCos,ab=sa.spot.exponents,sb=sa.hemi.skyColors,tb=sa.hemi.groundColors,Ib=sa.hemi.positions,La=0,xa=0,Ja=0,Ea=0,ia=0,pa=0,z=0,Ba=0,Ka=0,ub=0,bb=0,Ma=0;la=0;for(Ga=b.length;la<Ga;la++)ha=b[la],ha.onlyShadow||(wa=ha.color,Aa=ha.intensity,va=ha.distance,ha instanceof THREE.AmbientLight?ha.visible&&(C.gammaInput?(pb+=wa.r*wa.r,qb+=wa.g*wa.g,rb+=wa.b*wa.b):(pb+=wa.r,qb+=wa.g,rb+=wa.b)):ha instanceof THREE.DirectionalLight?
(ia+=1,ha.visible&&(ra.setFromMatrixPosition(ha.matrixWorld),Ia.setFromMatrixPosition(ha.target.matrixWorld),ra.sub(Ia),ra.normalize(),Ka=3*La,fb[Ka]=ra.x,fb[Ka+1]=ra.y,fb[Ka+2]=ra.z,C.gammaInput?A(Hb,Ka,wa,Aa*Aa):B(Hb,Ka,wa,Aa),La+=1)):ha instanceof THREE.PointLight?(pa+=1,ha.visible&&(ub=3*xa,C.gammaInput?A(Pb,ub,wa,Aa*Aa):B(Pb,ub,wa,Aa),Ia.setFromMatrixPosition(ha.matrixWorld),Ha[ub]=Ia.x,Ha[ub+1]=Ia.y,Ha[ub+2]=Ia.z,zb[xa]=va,xa+=1)):ha instanceof THREE.SpotLight?(z+=1,ha.visible&&(bb=3*Ja,C.gammaInput?
A(Sa,bb,wa,Aa*Aa):B(Sa,bb,wa,Aa),ra.setFromMatrixPosition(ha.matrixWorld),Va[bb]=ra.x,Va[bb+1]=ra.y,Va[bb+2]=ra.z,Ab[Ja]=va,Ia.setFromMatrixPosition(ha.target.matrixWorld),ra.sub(Ia),ra.normalize(),Qb[bb]=ra.x,Qb[bb+1]=ra.y,Qb[bb+2]=ra.z,$a[Ja]=Math.cos(ha.angle),ab[Ja]=ha.exponent,Ja+=1)):ha instanceof THREE.HemisphereLight&&(Ba+=1,ha.visible&&(ra.setFromMatrixPosition(ha.matrixWorld),ra.normalize(),Ma=3*Ea,Ib[Ma]=ra.x,Ib[Ma+1]=ra.y,Ib[Ma+2]=ra.z,Eb=ha.color,Fb=ha.groundColor,C.gammaInput?(Gb=Aa*
Aa,A(sb,Ma,Eb,Gb),A(tb,Ma,Fb,Gb)):(B(sb,Ma,Eb,Aa),B(tb,Ma,Fb,Aa)),Ea+=1)));la=3*La;for(Ga=Math.max(Hb.length,3*ia);la<Ga;la++)Hb[la]=0;la=3*xa;for(Ga=Math.max(Pb.length,3*pa);la<Ga;la++)Pb[la]=0;la=3*Ja;for(Ga=Math.max(Sa.length,3*z);la<Ga;la++)Sa[la]=0;la=3*Ea;for(Ga=Math.max(sb.length,3*Ba);la<Ga;la++)sb[la]=0;la=3*Ea;for(Ga=Math.max(tb.length,3*Ba);la<Ga;la++)tb[la]=0;sa.directional.length=La;sa.point.length=xa;sa.spot.length=Ja;sa.hemi.length=Ea;sa.ambient[0]=pb;sa.ambient[1]=qb;sa.ambient[2]=
rb;Nb=!1}if(V){var oa=Pc;G.ambientLightColor.value=oa.ambient;G.directionalLightColor.value=oa.directional.colors;G.directionalLightDirection.value=oa.directional.positions;G.pointLightColor.value=oa.point.colors;G.pointLightPosition.value=oa.point.positions;G.pointLightDistance.value=oa.point.distances;G.spotLightColor.value=oa.spot.colors;G.spotLightPosition.value=oa.spot.positions;G.spotLightDistance.value=oa.spot.distances;G.spotLightDirection.value=oa.spot.directions;G.spotLightAngleCos.value=
oa.spot.anglesCos;G.spotLightExponent.value=oa.spot.exponents;G.hemisphereLightSkyColor.value=oa.hemi.skyColors;G.hemisphereLightGroundColor.value=oa.hemi.groundColors;G.hemisphereLightDirection.value=oa.hemi.positions;v(G,!0)}else v(G,!1)}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){G.opacity.value=d.opacity;C.gammaInput?G.diffuse.value.copyGammaToLinear(d.color):G.diffuse.value=d.color;G.map.value=d.map;G.lightMap.value=d.lightMap;
G.specularMap.value=d.specularMap;G.alphaMap.value=d.alphaMap;d.bumpMap&&(G.bumpMap.value=d.bumpMap,G.bumpScale.value=d.bumpScale);d.normalMap&&(G.normalMap.value=d.normalMap,G.normalScale.value.copy(d.normalScale));var Fa;d.map?Fa=d.map:d.specularMap?Fa=d.specularMap:d.normalMap?Fa=d.normalMap:d.bumpMap?Fa=d.bumpMap:d.alphaMap&&(Fa=d.alphaMap);if(void 0!==Fa){var Na=Fa.offset,Oa=Fa.repeat;G.offsetRepeat.value.set(Na.x,Na.y,Oa.x,Oa.y)}G.envMap.value=d.envMap;G.flipEnvMap.value=d.envMap instanceof
THREE.WebGLRenderTargetCube?1:-1;G.reflectivity.value=d.reflectivity;G.refractionRatio.value=d.refractionRatio;G.combine.value=d.combine;G.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(G.diffuse.value=d.color,G.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(G.diffuse.value=d.color,G.opacity.value=d.opacity,G.dashSize.value=d.dashSize,G.totalSize.value=d.dashSize+d.gapSize,G.scale.value=d.scale):d instanceof
THREE.PointCloudMaterial?(G.psColor.value=d.color,G.opacity.value=d.opacity,G.size.value=d.size,G.scale.value=ca.height/2,G.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(G.shininess.value=d.shininess,C.gammaInput?(G.ambient.value.copyGammaToLinear(d.ambient),G.emissive.value.copyGammaToLinear(d.emissive),G.specular.value.copyGammaToLinear(d.specular)):(G.ambient.value=d.ambient,G.emissive.value=d.emissive,G.specular.value=d.specular),d.wrapAround&&G.wrapRGB.value.copy(d.wrapRGB)):d instanceof
THREE.MeshLambertMaterial?(C.gammaInput?(G.ambient.value.copyGammaToLinear(d.ambient),G.emissive.value.copyGammaToLinear(d.emissive)):(G.ambient.value=d.ambient,G.emissive.value=d.emissive),d.wrapAround&&G.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(G.mNear.value=a.near,G.mFar.value=a.far,G.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(G.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&G.shadowMatrix)for(var Jb=0,nb=0,Db=b.length;nb<Db;nb++){var x=
b[nb];x.castShadow&&(x instanceof THREE.SpotLight||x instanceof THREE.DirectionalLight&&!x.shadowCascade)&&(G.shadowMap.value[Jb]=x.shadowMap,G.shadowMapSize.value[Jb]=x.shadowMapSize,G.shadowMatrix.value[Jb]=x.shadowMatrix,G.shadowDarkness.value[Jb]=x.shadowDarkness,G.shadowBias.value[Jb]=x.shadowBias,Jb++)}for(var Rb=d.uniformsList,Ca,ta,Wa,kb=0,Ob=Rb.length;kb<Ob;kb++){var ba=Rb[kb][0];if(!1!==ba.needsUpdate){var yb=ba.type,P=ba.value,da=Rb[kb][1];switch(yb){case "1i":k.uniform1i(da,P);break;case "1f":k.uniform1f(da,
P);break;case "2f":k.uniform2f(da,P[0],P[1]);break;case "3f":k.uniform3f(da,P[0],P[1],P[2]);break;case "4f":k.uniform4f(da,P[0],P[1],P[2],P[3]);break;case "1iv":k.uniform1iv(da,P);break;case "3iv":k.uniform3iv(da,P);break;case "1fv":k.uniform1fv(da,P);break;case "2fv":k.uniform2fv(da,P);break;case "3fv":k.uniform3fv(da,P);break;case "4fv":k.uniform4fv(da,P);break;case "Matrix3fv":k.uniformMatrix3fv(da,!1,P);break;case "Matrix4fv":k.uniformMatrix4fv(da,!1,P);break;case "i":k.uniform1i(da,P);break;
case "f":k.uniform1f(da,P);break;case "v2":k.uniform2f(da,P.x,P.y);break;case "v3":k.uniform3f(da,P.x,P.y,P.z);break;case "v4":k.uniform4f(da,P.x,P.y,P.z,P.w);break;case "c":k.uniform3f(da,P.r,P.g,P.b);break;case "iv1":k.uniform1iv(da,P);break;case "iv":k.uniform3iv(da,P);break;case "fv1":k.uniform1fv(da,P);break;case "fv":k.uniform3fv(da,P);break;case "v2v":void 0===ba._array&&(ba._array=new Float32Array(2*P.length));for(var K=0,ua=P.length;K<ua;K++)Wa=2*K,ba._array[Wa]=P[K].x,ba._array[Wa+1]=P[K].y;
k.uniform2fv(da,ba._array);break;case "v3v":void 0===ba._array&&(ba._array=new Float32Array(3*P.length));K=0;for(ua=P.length;K<ua;K++)Wa=3*K,ba._array[Wa]=P[K].x,ba._array[Wa+1]=P[K].y,ba._array[Wa+2]=P[K].z;k.uniform3fv(da,ba._array);break;case "v4v":void 0===ba._array&&(ba._array=new Float32Array(4*P.length));K=0;for(ua=P.length;K<ua;K++)Wa=4*K,ba._array[Wa]=P[K].x,ba._array[Wa+1]=P[K].y,ba._array[Wa+2]=P[K].z,ba._array[Wa+3]=P[K].w;k.uniform4fv(da,ba._array);break;case "m3":k.uniformMatrix3fv(da,
!1,P.elements);break;case "m3v":void 0===ba._array&&(ba._array=new Float32Array(9*P.length));K=0;for(ua=P.length;K<ua;K++)P[K].flattenToArrayOffset(ba._array,9*K);k.uniformMatrix3fv(da,!1,ba._array);break;case "m4":k.uniformMatrix4fv(da,!1,P.elements);break;case "m4v":void 0===ba._array&&(ba._array=new Float32Array(16*P.length));K=0;for(ua=P.length;K<ua;K++)P[K].flattenToArrayOffset(ba._array,16*K);k.uniformMatrix4fv(da,!1,ba._array);break;case "t":Ca=P;ta=X();k.uniform1i(da,ta);if(!Ca)continue;if(Ca instanceof
THREE.CubeTexture||Ca.image instanceof Array&&6===Ca.image.length){var qa=Ca,Bb=ta;if(6===qa.image.length)if(qa.needsUpdate){qa.image.__webglTextureCube||(qa.addEventListener("dispose",gc),qa.image.__webglTextureCube=k.createTexture(),C.info.memory.textures++);k.activeTexture(k.TEXTURE0+Bb);k.bindTexture(k.TEXTURE_CUBE_MAP,qa.image.__webglTextureCube);k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,qa.flipY);for(var Cb=qa instanceof THREE.CompressedTexture,Sb=qa.image[0]instanceof THREE.DataTexture,hb=[],ya=
0;6>ya;ya++)hb[ya]=!C.autoScaleCubemaps||Cb||Sb?Sb?qa.image[ya].image:qa.image[ya]:aa(qa.image[ya],ed);var ja=hb[0],Yb=THREE.Math.isPowerOfTwo(ja.width)&&THREE.Math.isPowerOfTwo(ja.height),Xa=O(qa.format),Kb=O(qa.type);L(k.TEXTURE_CUBE_MAP,qa,Yb);for(ya=0;6>ya;ya++)if(Cb)for(var cb,Zb=hb[ya].mipmaps,fa=0,Wb=Zb.length;fa<Wb;fa++)cb=Zb[fa],qa.format!==THREE.RGBAFormat&&qa.format!==THREE.RGBFormat?-1<Qc().indexOf(Xa)?k.compressedTexImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+ya,fa,Xa,cb.width,cb.height,0,
cb.data):console.warn("Attempt to load unsupported compressed texture format"):k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+ya,fa,Xa,cb.width,cb.height,0,Xa,Kb,cb.data);else Sb?k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+ya,0,Xa,hb[ya].width,hb[ya].height,0,Xa,Kb,hb[ya].data):k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+ya,0,Xa,Xa,Kb,hb[ya]);qa.generateMipmaps&&Yb&&k.generateMipmap(k.TEXTURE_CUBE_MAP);qa.needsUpdate=!1;if(qa.onUpdate)qa.onUpdate()}else k.activeTexture(k.TEXTURE0+Bb),k.bindTexture(k.TEXTURE_CUBE_MAP,
qa.image.__webglTextureCube)}else if(Ca instanceof THREE.WebGLRenderTargetCube){var Xb=Ca;k.activeTexture(k.TEXTURE0+ta);k.bindTexture(k.TEXTURE_CUBE_MAP,Xb.__webglTexture)}else C.setTexture(Ca,ta);break;case "tv":void 0===ba._array&&(ba._array=[]);K=0;for(ua=ba.value.length;K<ua;K++)ba._array[K]=X();k.uniform1iv(da,ba._array);K=0;for(ua=ba.value.length;K<ua;K++)Ca=ba.value[K],ta=ba._array[K],Ca&&C.setTexture(Ca,ta);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+yb)}}}}k.uniformMatrix4fv(na.modelViewMatrix,
!1,e._modelViewMatrix.elements);na.normalMatrix&&k.uniformMatrix3fv(na.normalMatrix,!1,e._normalMatrix.elements);null!==na.modelMatrix&&k.uniformMatrix4fv(na.modelMatrix,!1,e.matrixWorld.elements);return ob}function v(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=
b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=b;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function X(){var a=jc;a>=Rc&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Rc);jc+=1;return a}function y(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}
function A(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function B(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function D(a){a!==Sc&&(k.lineWidth(a),Sc=a)}function E(a,b,c){Tc!==a&&(a?k.enable(k.POLYGON_OFFSET_FILL):k.disable(k.POLYGON_OFFSET_FILL),Tc=a);!a||Uc===b&&Vc===c||(k.polygonOffset(b,c),Uc=b,Vc=c)}function L(a,b,c){c?(k.texParameteri(a,k.TEXTURE_WRAP_S,O(b.wrapS)),k.texParameteri(a,k.TEXTURE_WRAP_T,O(b.wrapT)),k.texParameteri(a,k.TEXTURE_MAG_FILTER,O(b.magFilter)),k.texParameteri(a,
k.TEXTURE_MIN_FILTER,O(b.minFilter))):(k.texParameteri(a,k.TEXTURE_WRAP_S,k.CLAMP_TO_EDGE),k.texParameteri(a,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE),k.texParameteri(a,k.TEXTURE_MAG_FILTER,Q(b.magFilter)),k.texParameteri(a,k.TEXTURE_MIN_FILTER,Q(b.minFilter)));(c=ka.get("EXT_texture_filter_anisotropic"))&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy)&&(k.texParameterf(a,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,C.getMaxAnisotropy())),b.__oldAnisotropy=b.anisotropy)}function aa(a,
b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement("canvas");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.log("THREE.WebGLRenderer:",a,"is too big ("+a.width+"x"+a.height+"). Resized to "+d.width+"x"+d.height+".");return d}return a}function N(a,b){k.bindRenderbuffer(k.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_COMPONENT16,
b.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_STENCIL,b.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,a)):k.renderbufferStorage(k.RENDERBUFFER,k.RGBA4,b.width,b.height)}function F(a){a instanceof THREE.WebGLRenderTargetCube?(k.bindTexture(k.TEXTURE_CUBE_MAP,a.__webglTexture),k.generateMipmap(k.TEXTURE_CUBE_MAP),k.bindTexture(k.TEXTURE_CUBE_MAP,
null)):(k.bindTexture(k.TEXTURE_2D,a.__webglTexture),k.generateMipmap(k.TEXTURE_2D),k.bindTexture(k.TEXTURE_2D,null))}function Q(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?k.NEAREST:k.LINEAR}function O(a){var b;if(a===THREE.RepeatWrapping)return k.REPEAT;if(a===THREE.ClampToEdgeWrapping)return k.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return k.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return k.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return k.NEAREST_MIPMAP_NEAREST;
if(a===THREE.NearestMipMapLinearFilter)return k.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return k.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return k.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return k.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return k.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return k.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return k.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return k.UNSIGNED_SHORT_5_6_5;
if(a===THREE.ByteType)return k.BYTE;if(a===THREE.ShortType)return k.SHORT;if(a===THREE.UnsignedShortType)return k.UNSIGNED_SHORT;if(a===THREE.IntType)return k.INT;if(a===THREE.UnsignedIntType)return k.UNSIGNED_INT;if(a===THREE.FloatType)return k.FLOAT;if(a===THREE.AlphaFormat)return k.ALPHA;if(a===THREE.RGBFormat)return k.RGB;if(a===THREE.RGBAFormat)return k.RGBA;if(a===THREE.LuminanceFormat)return k.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return k.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return k.FUNC_ADD;
if(a===THREE.SubtractEquation)return k.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return k.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return k.ZERO;if(a===THREE.OneFactor)return k.ONE;if(a===THREE.SrcColorFactor)return k.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return k.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return k.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return k.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return k.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return k.ONE_MINUS_DST_ALPHA;
if(a===THREE.DstColorFactor)return k.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return k.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return k.SRC_ALPHA_SATURATE;b=ka.get("WEBGL_compressed_texture_s3tc");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=
ka.get("WEBGL_compressed_texture_pvrtc");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=ka.get("EXT_blend_minmax");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}
console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var ca=void 0!==a.canvas?a.canvas:document.createElement("canvas"),ea=void 0!==a.context?a.context:null,J=void 0!==a.precision?a.precision:"highp",T=void 0!==a.alpha?a.alpha:!1,Ua=void 0!==a.depth?a.depth:!0,nb=void 0!==a.stencil?a.stencil:!0,db=void 0!==a.antialias?a.antialias:!1,Ab=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,Bb=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,mb=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:
!1,Da=new THREE.Color(0),zb=0,Ra=[],Za={},fb=[],Xb=[],Wb=[],Bc=[],Cc=[];this.domElement=ca;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=
!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var C=this,Ya=[],dc=null,Wc=null,ec=-1,Ta=-1,fc=null,jc=0,kb=-1,lc=-1,mc=-1,nc=-1,Ob=-1,oc=-1,tc=-1,uc=-1,Tc=null,Uc=null,Vc=null,Sc=null,lb=0,yb=0,pc=ca.width,qc=ca.height,Xc=0,Yc=0,Cb=new Uint8Array(16),eb=new Uint8Array(16),Dc=new THREE.Frustum,zc=new THREE.Matrix4,Gc=new THREE.Matrix4,Ia=new THREE.Vector3,ra=new THREE.Vector3,
Nb=!0,Pc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},k;try{var Zc={alpha:T,depth:Ua,stencil:nb,antialias:db,premultipliedAlpha:Ab,preserveDrawingBuffer:Bb};k=ea||ca.getContext("webgl",Zc)||ca.getContext("experimental-webgl",Zc);if(null===k){if(null!==ca.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";
throw"Error creating WebGL context.";}ca.addEventListener("webglcontextlost",function(a){a.preventDefault();$c();ad();Za={}},!1)}catch(fd){console.error(fd)}void 0===k.getShaderPrecisionFormat&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var ka=new THREE.WebGLExtensions(k);ka.get("OES_texture_float");ka.get("OES_texture_float_linear");ka.get("OES_standard_derivatives");mb&&ka.get("EXT_frag_depth");var ad=function(){k.clearColor(0,0,0,1);k.clearDepth(1);k.clearStencil(0);
k.enable(k.DEPTH_TEST);k.depthFunc(k.LEQUAL);k.frontFace(k.CCW);k.cullFace(k.BACK);k.enable(k.CULL_FACE);k.enable(k.BLEND);k.blendEquation(k.FUNC_ADD);k.blendFunc(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA);k.viewport(lb,yb,pc,qc);k.clearColor(Da.r,Da.g,Da.b,zb)},$c=function(){fc=dc=null;ec=Ta=lc=kb=uc=tc=mc=-1;Nb=!0};ad();this.context=k;var Rc=k.getParameter(k.MAX_TEXTURE_IMAGE_UNITS),gd=k.getParameter(k.MAX_VERTEX_TEXTURE_IMAGE_UNITS),hd=k.getParameter(k.MAX_TEXTURE_SIZE),ed=k.getParameter(k.MAX_CUBE_MAP_TEXTURE_SIZE),
kc=0<gd,cc=kc&&ka.get("OES_texture_float"),id=k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.HIGH_FLOAT),jd=k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.MEDIUM_FLOAT);k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.LOW_FLOAT);var kd=k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.HIGH_FLOAT),ld=k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.MEDIUM_FLOAT);k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.LOW_FLOAT);var Qc=function(){var a;return function(){if(void 0!==a)return a;a=[];if(ka.get("WEBGL_compressed_texture_pvrtc")||
ka.get("WEBGL_compressed_texture_s3tc"))for(var b=k.getParameter(k.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return a}}(),md=0<id.precision&&0<kd.precision,bd=0<jd.precision&&0<ld.precision;"highp"!==J||md||(bd?(J="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(J="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));"mediump"!==J||bd||(J="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));
var nd=new THREE.ShadowMapPlugin(this,Ra,Za,fb),od=new THREE.SpritePlugin(this,Bc),pd=new THREE.LensFlarePlugin(this,Cc);this.getContext=function(){return k};this.forceContextLoss=function(){ka.get("WEBGL_lose_context").loseContext()};this.supportsVertexTextures=function(){return kc};this.supportsFloatTextures=function(){return ka.get("OES_texture_float")};this.supportsStandardDerivatives=function(){return ka.get("OES_standard_derivatives")};this.supportsCompressedTextureS3TC=function(){return ka.get("WEBGL_compressed_texture_s3tc")};
this.supportsCompressedTexturePVRTC=function(){return ka.get("WEBGL_compressed_texture_pvrtc")};this.supportsBlendMinMax=function(){return ka.get("EXT_blend_minmax")};this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=ka.get("EXT_texture_filter_anisotropic");return a=null!==b?k.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return J};this.setSize=function(a,b,c){ca.width=a*this.devicePixelRatio;ca.height=b*this.devicePixelRatio;
!1!==c&&(ca.style.width=a+"px",ca.style.height=b+"px");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){lb=a*this.devicePixelRatio;yb=b*this.devicePixelRatio;pc=c*this.devicePixelRatio;qc=d*this.devicePixelRatio;k.viewport(lb,yb,pc,qc)};this.setScissor=function(a,b,c,d){k.scissor(a*this.devicePixelRatio,b*this.devicePixelRatio,c*this.devicePixelRatio,d*this.devicePixelRatio)};this.enableScissorTest=function(a){a?k.enable(k.SCISSOR_TEST):k.disable(k.SCISSOR_TEST)};this.setClearColor=function(a,
b){Da.set(a);zb=void 0!==b?b:1;k.clearColor(Da.r,Da.g,Da.b,zb)};this.setClearColorHex=function(a,b){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,b)};this.getClearColor=function(){return Da};this.getClearAlpha=function(){return zb};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=k.COLOR_BUFFER_BIT;if(void 0===b||b)d|=k.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=k.STENCIL_BUFFER_BIT;k.clear(d)};this.clearColor=function(){k.clear(k.COLOR_BUFFER_BIT)};
this.clearDepth=function(){k.clear(k.DEPTH_BUFFER_BIT)};this.clearStencil=function(){k.clear(k.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=$c;var Hc=function(a){a.target.traverse(function(a){a.removeEventListener("remove",Hc);if(a instanceof THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line)delete Za[a.id];else if(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)for(var b=fb,c=b.length-1;0<=
c;c--)b[c].object===a&&b.splice(c,1);delete a.__webglInit;delete a._modelViewMatrix;delete a._normalMatrix;delete a.__webglActive})},Ic=function(a){a=a.target;a.removeEventListener("dispose",Ic);delete a.__webglInit;if(a instanceof THREE.BufferGeometry){for(var b in a.attributes){var c=a.attributes[b];void 0!==c.buffer&&(k.deleteBuffer(c.buffer),delete c.buffer)}C.info.memory.geometries--}else if(b=Db[a.id],void 0!==b){for(var c=0,d=b.length;c<d;c++){var e=b[c];if(void 0!==e.numMorphTargets){for(var f=
0,g=e.numMorphTargets;f<g;f++)k.deleteBuffer(e.__webglMorphTargetsBuffers[f]);delete e.__webglMorphTargetsBuffers}if(void 0!==e.numMorphNormals){f=0;for(g=e.numMorphNormals;f<g;f++)k.deleteBuffer(e.__webglMorphNormalsBuffers[f]);delete e.__webglMorphNormalsBuffers}cd(e)}delete Db[a.id]}else cd(a);Ta=-1},gc=function(a){a=a.target;a.removeEventListener("dispose",gc);a.image&&a.image.__webglTextureCube?(k.deleteTexture(a.image.__webglTextureCube),delete a.image.__webglTextureCube):void 0!==a.__webglInit&&
(k.deleteTexture(a.__webglTexture),delete a.__webglTexture,delete a.__webglInit);C.info.memory.textures--},dd=function(a){a=a.target;a.removeEventListener("dispose",dd);if(a&&void 0!==a.__webglTexture){k.deleteTexture(a.__webglTexture);delete a.__webglTexture;if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)k.deleteFramebuffer(a.__webglFramebuffer[b]),k.deleteRenderbuffer(a.__webglRenderbuffer[b]);else k.deleteFramebuffer(a.__webglFramebuffer),k.deleteRenderbuffer(a.__webglRenderbuffer);
delete a.__webglFramebuffer;delete a.__webglRenderbuffer}C.info.memory.textures--},Oc=function(a){a=a.target;a.removeEventListener("dispose",Oc);Nc(a)},cd=function(a){for(var b="__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer".split(" "),c=0,d=b.length;c<d;c++){var e=b[c];void 0!==a[e]&&(k.deleteBuffer(a[e]),delete a[e])}if(void 0!==
a.__webglCustomAttributesList){for(e in a.__webglCustomAttributesList)k.deleteBuffer(a.__webglCustomAttributesList[e].buffer);delete a.__webglCustomAttributesList}C.info.memory.geometries--},Nc=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=Ya.length;a<c;a++)if(d=Ya[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Ya.length;a<c;a++)d=Ya[a],d.program!==b&&e.push(d);Ya=e;k.deleteProgram(b);C.info.memory.programs--}}};
this.renderBufferImmediate=function(a,b,c){f();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=k.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=k.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=k.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=k.createBuffer());a.hasPositions&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,a.positionArray,k.DYNAMIC_DRAW),g(b.attributes.position),
k.vertexAttribPointer(b.attributes.position,3,k.FLOAT,!1,0,0));if(a.hasNormals){k.bindBuffer(k.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,l,m,n,p,q,t,s,r,v,u=3*a.count;for(v=0;v<u;v+=9)r=a.normalArray,d=r[v],e=r[v+1],l=r[v+2],m=r[v+3],p=r[v+4],t=r[v+5],n=r[v+6],q=r[v+7],s=r[v+8],d=(d+m+n)/3,e=(e+p+q)/3,l=(l+t+s)/3,r[v]=d,r[v+1]=e,r[v+2]=l,r[v+3]=d,r[v+4]=e,r[v+5]=l,r[v+6]=d,r[v+7]=e,r[v+8]=l}k.bufferData(k.ARRAY_BUFFER,a.normalArray,k.DYNAMIC_DRAW);g(b.attributes.normal);
k.vertexAttribPointer(b.attributes.normal,3,k.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglUvBuffer),k.bufferData(k.ARRAY_BUFFER,a.uvArray,k.DYNAMIC_DRAW),g(b.attributes.uv),k.vertexAttribPointer(b.attributes.uv,2,k.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,a.colorArray,k.DYNAMIC_DRAW),g(b.attributes.color),k.vertexAttribPointer(b.attributes.color,3,k.FLOAT,!1,0,0));h();k.drawArrays(k.TRIANGLES,
0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,g,h){if(!1!==d.visible)if(a=M(a,b,c,d,h),b=!1,c=16777215*g.id+2*a.id+(d.wireframe?1:0),c!==Ta&&(Ta=c,b=!0),b&&f(),h instanceof THREE.Mesh)if(h=!0===d.wireframe?k.LINES:k.TRIANGLES,c=g.attributes.index){var l,m;c.array instanceof Uint32Array&&ka.get("OES_element_index_uint")?(l=k.UNSIGNED_INT,m=4):(l=k.UNSIGNED_SHORT,m=2);var n=g.offsets;if(0===n.length)b&&(e(d,a,g,0),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,c.buffer)),k.drawElements(h,c.array.length,
l,0),C.info.render.calls++,C.info.render.vertices+=c.array.length,C.info.render.faces+=c.array.length/3;else{b=!0;for(var p=0,q=n.length;p<q;p++){var r=n[p].index;b&&(e(d,a,g,r),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,c.buffer));k.drawElements(h,n[p].count,l,n[p].start*m);C.info.render.calls++;C.info.render.vertices+=n[p].count;C.info.render.faces+=n[p].count/3}}}else b&&e(d,a,g,0),d=g.attributes.position,k.drawArrays(h,0,d.array.length/3),C.info.render.calls++,C.info.render.vertices+=d.array.length/
3,C.info.render.faces+=d.array.length/9;else if(h instanceof THREE.PointCloud)b&&e(d,a,g,0),d=g.attributes.position,k.drawArrays(k.POINTS,0,d.array.length/3),C.info.render.calls++,C.info.render.points+=d.array.length/3;else if(h instanceof THREE.Line)if(h=h.mode===THREE.LineStrip?k.LINE_STRIP:k.LINES,D(d.linewidth),c=g.attributes.index)if(c.array instanceof Uint32Array?(l=k.UNSIGNED_INT,m=4):(l=k.UNSIGNED_SHORT,m=2),n=g.offsets,0===n.length)b&&(e(d,a,g,0),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,c.buffer)),
k.drawElements(h,c.array.length,l,0),C.info.render.calls++,C.info.render.vertices+=c.array.length;else for(1<n.length&&(b=!0),p=0,q=n.length;p<q;p++)r=n[p].index,b&&(e(d,a,g,r),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,c.buffer)),k.drawElements(h,n[p].count,l,n[p].start*m),C.info.render.calls++,C.info.render.vertices+=n[p].count;else b&&e(d,a,g,0),d=g.attributes.position,k.drawArrays(h,0,d.array.length/3),C.info.render.calls++,C.info.render.points+=d.array.length/3};this.renderBuffer=function(a,b,c,d,e,
l){if(!1!==d.visible){c=M(a,b,c,d,l);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==Ta&&(Ta=c,a=!0);a&&f();if(!d.morphTargets&&0<=b.position)a&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglVertexBuffer),g(b.position),k.vertexAttribPointer(b.position,3,k.FLOAT,!1,0,0));else if(l.morphTargetBase){c=d.program.attributes;-1!==l.morphTargetBase&&0<=c.position?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[l.morphTargetBase]),g(c.position),k.vertexAttribPointer(c.position,3,k.FLOAT,
!1,0,0)):0<=c.position&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglVertexBuffer),g(c.position),k.vertexAttribPointer(c.position,3,k.FLOAT,!1,0,0));if(l.morphTargetForcedOrder.length)for(var m=0,n=l.morphTargetForcedOrder,q=l.morphTargetInfluences;m<d.numSupportedMorphTargets&&m<n.length;)0<=c["morphTarget"+m]&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[n[m]]),g(c["morphTarget"+m]),k.vertexAttribPointer(c["morphTarget"+m],3,k.FLOAT,!1,0,0)),0<=c["morphNormal"+m]&&d.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,
e.__webglMorphNormalsBuffers[n[m]]),g(c["morphNormal"+m]),k.vertexAttribPointer(c["morphNormal"+m],3,k.FLOAT,!1,0,0)),l.__webglMorphTargetInfluences[m]=q[n[m]],m++;else{var n=[],q=l.morphTargetInfluences,r,t=q.length;for(r=0;r<t;r++)m=q[r],0<m&&n.push([m,r]);n.length>d.numSupportedMorphTargets?(n.sort(p),n.length=d.numSupportedMorphTargets):n.length>d.numSupportedMorphNormals?n.sort(p):0===n.length&&n.push([0,0]);for(m=0;m<d.numSupportedMorphTargets;)n[m]?(r=n[m][1],0<=c["morphTarget"+m]&&(k.bindBuffer(k.ARRAY_BUFFER,
e.__webglMorphTargetsBuffers[r]),g(c["morphTarget"+m]),k.vertexAttribPointer(c["morphTarget"+m],3,k.FLOAT,!1,0,0)),0<=c["morphNormal"+m]&&d.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[r]),g(c["morphNormal"+m]),k.vertexAttribPointer(c["morphNormal"+m],3,k.FLOAT,!1,0,0)),l.__webglMorphTargetInfluences[m]=q[r]):l.__webglMorphTargetInfluences[m]=0,m++}null!==d.program.uniforms.morphTargetInfluences&&k.uniform1fv(d.program.uniforms.morphTargetInfluences,l.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(c=
0,q=e.__webglCustomAttributesList.length;c<q;c++)n=e.__webglCustomAttributesList[c],0<=b[n.buffer.belongsToAttribute]&&(k.bindBuffer(k.ARRAY_BUFFER,n.buffer),g(b[n.buffer.belongsToAttribute]),k.vertexAttribPointer(b[n.buffer.belongsToAttribute],n.size,k.FLOAT,!1,0,0));0<=b.color&&(0<l.geometry.colors.length||0<l.geometry.faces.length?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglColorBuffer),g(b.color),k.vertexAttribPointer(b.color,3,k.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&k.vertexAttrib3fv(b.color,
d.defaultAttributeValues.color));0<=b.normal&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglNormalBuffer),g(b.normal),k.vertexAttribPointer(b.normal,3,k.FLOAT,!1,0,0));0<=b.tangent&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglTangentBuffer),g(b.tangent),k.vertexAttribPointer(b.tangent,4,k.FLOAT,!1,0,0));0<=b.uv&&(l.geometry.faceVertexUvs[0]?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglUVBuffer),g(b.uv),k.vertexAttribPointer(b.uv,2,k.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&k.vertexAttrib2fv(b.uv,d.defaultAttributeValues.uv));
0<=b.uv2&&(l.geometry.faceVertexUvs[1]?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglUV2Buffer),g(b.uv2),k.vertexAttribPointer(b.uv2,2,k.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&k.vertexAttrib2fv(b.uv2,d.defaultAttributeValues.uv2));d.skinning&&0<=b.skinIndex&&0<=b.skinWeight&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),g(b.skinIndex),k.vertexAttribPointer(b.skinIndex,4,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),g(b.skinWeight),k.vertexAttribPointer(b.skinWeight,
4,k.FLOAT,!1,0,0));0<=b.lineDistance&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglLineDistanceBuffer),g(b.lineDistance),k.vertexAttribPointer(b.lineDistance,1,k.FLOAT,!1,0,0))}h();l instanceof THREE.Mesh?(l=e.__typeArray===Uint32Array?k.UNSIGNED_INT:k.UNSIGNED_SHORT,d.wireframe?(D(d.wireframeLinewidth),a&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),k.drawElements(k.LINES,e.__webglLineCount,l,0)):(a&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),k.drawElements(k.TRIANGLES,e.__webglFaceCount,
l,0)),C.info.render.calls++,C.info.render.vertices+=e.__webglFaceCount,C.info.render.faces+=e.__webglFaceCount/3):l instanceof THREE.Line?(l=l.mode===THREE.LineStrip?k.LINE_STRIP:k.LINES,D(d.linewidth),k.drawArrays(l,0,e.__webglLineCount),C.info.render.calls++):l instanceof THREE.PointCloud&&(k.drawArrays(k.POINTS,0,e.__webglParticleCount),C.info.render.calls++,C.info.render.points+=e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
else{var e=a.fog;ec=Ta=-1;fc=null;Nb=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();a.traverse(function(a){a instanceof THREE.SkinnedMesh&&a.skeleton.update()});b.matrixWorldInverse.getInverse(b.matrixWorld);zc.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Dc.setFromMatrix(zc);Ra.length=0;Xb.length=0;Wb.length=0;Bc.length=0;Cc.length=0;q(a,a);!0===C.sortObjects&&(Xb.sort(l),Wb.sort(n));nd.render(a,b);C.info.render.calls=0;C.info.render.vertices=0;
C.info.render.faces=0;C.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);d=0;for(var f=fb.length;d<f;d++){var g=fb[d],h=g.object;h.visible&&(y(h,b),t(g))}a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),E(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),m(Xb,b,Ra,e,!0,d),m(Wb,
b,Ra,e,!0,d),r(fb,"",b,Ra,e,!1,d)):(d=null,this.setBlending(THREE.NoBlending),m(Xb,b,Ra,e,!1,d),r(fb,"opaque",b,Ra,e,!1,d),m(Wb,b,Ra,e,!0,d),r(fb,"transparent",b,Ra,e,!0,d));od.render(a,b);pd.render(a,b,Xc,Yc);c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&F(c);this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=M(a,b,c,d,e);Ta=-1;C.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,
k,Dc):e.render(function(a){C.renderBufferImmediate(a,f,d)})};var Db={},Mc=0;this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?k.disable(k.CULL_FACE):(b===THREE.FrontFaceDirectionCW?k.frontFace(k.CW):k.frontFace(k.CCW),a===THREE.CullFaceBack?k.cullFace(k.BACK):a===THREE.CullFaceFront?k.cullFace(k.FRONT):k.cullFace(k.FRONT_AND_BACK),k.enable(k.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;kb!==b&&(b?k.disable(k.CULL_FACE):k.enable(k.CULL_FACE),
kb=b);lc!==a&&(a?k.frontFace(k.CW):k.frontFace(k.CCW),lc=a)};this.setDepthTest=function(a){tc!==a&&(a?k.enable(k.DEPTH_TEST):k.disable(k.DEPTH_TEST),tc=a)};this.setDepthWrite=function(a){uc!==a&&(k.depthMask(a),uc=a)};this.setBlending=function(a,b,c,d){a!==mc&&(a===THREE.NoBlending?k.disable(k.BLEND):a===THREE.AdditiveBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.SRC_ALPHA,k.ONE)):a===THREE.SubtractiveBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,
k.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,k.SRC_COLOR)):a===THREE.CustomBlending?k.enable(k.BLEND):(k.enable(k.BLEND),k.blendEquationSeparate(k.FUNC_ADD,k.FUNC_ADD),k.blendFuncSeparate(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA)),mc=a);if(a===THREE.CustomBlending){if(b!==nc&&(k.blendEquation(O(b)),nc=b),c!==Ob||d!==oc)k.blendFunc(O(c),O(d)),Ob=c,oc=d}else oc=Ob=nc=null};this.uploadTexture=function(a){void 0===
a.__webglInit&&(a.__webglInit=!0,a.addEventListener("dispose",gc),a.__webglTexture=k.createTexture(),C.info.memory.textures++);k.bindTexture(k.TEXTURE_2D,a.__webglTexture);k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,a.flipY);k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);k.pixelStorei(k.UNPACK_ALIGNMENT,a.unpackAlignment);a.image=aa(a.image,hd);var b=a.image,c=THREE.Math.isPowerOfTwo(b.width)&&THREE.Math.isPowerOfTwo(b.height),d=O(a.format),e=O(a.type);L(k.TEXTURE_2D,a,c);var f=a.mipmaps;
if(a instanceof THREE.DataTexture)if(0<f.length&&c){for(var g=0,h=f.length;g<h;g++)b=f[g],k.texImage2D(k.TEXTURE_2D,g,d,b.width,b.height,0,d,e,b.data);a.generateMipmaps=!1}else k.texImage2D(k.TEXTURE_2D,0,d,b.width,b.height,0,d,e,b.data);else if(a instanceof THREE.CompressedTexture)for(g=0,h=f.length;g<h;g++)b=f[g],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?-1<Qc().indexOf(d)?k.compressedTexImage2D(k.TEXTURE_2D,g,d,b.width,b.height,0,b.data):console.warn("Attempt to load unsupported compressed texture format"):
k.texImage2D(k.TEXTURE_2D,g,d,b.width,b.height,0,d,e,b.data);else if(0<f.length&&c){g=0;for(h=f.length;g<h;g++)b=f[g],k.texImage2D(k.TEXTURE_2D,g,d,d,e,b);a.generateMipmaps=!1}else k.texImage2D(k.TEXTURE_2D,0,d,d,e,a.image);a.generateMipmaps&&c&&k.generateMipmap(k.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()};this.setTexture=function(a,b){k.activeTexture(k.TEXTURE0+b);a.needsUpdate?C.uploadTexture(a):k.bindTexture(k.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof
THREE.WebGLRenderTargetCube;if(a&&void 0===a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",dd);a.__webglTexture=k.createTexture();C.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=O(a.format),e=O(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];k.bindTexture(k.TEXTURE_CUBE_MAP,a.__webglTexture);L(k.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=
k.createFramebuffer();a.__webglRenderbuffer[f]=k.createRenderbuffer();k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=k.TEXTURE_CUBE_MAP_POSITIVE_X+f;k.bindFramebuffer(k.FRAMEBUFFER,a.__webglFramebuffer[f]);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,h,g.__webglTexture,0);N(a.__webglRenderbuffer[f],a)}c&&k.generateMipmap(k.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=k.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:
k.createRenderbuffer(),k.bindTexture(k.TEXTURE_2D,a.__webglTexture),L(k.TEXTURE_2D,a,c),k.texImage2D(k.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=k.TEXTURE_2D,k.bindFramebuffer(k.FRAMEBUFFER,a.__webglFramebuffer),k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&k.framebufferRenderbuffer(k.FRAMEBUFFER,
k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,a.__webglRenderbuffer):N(a.__webglRenderbuffer,a),c&&k.generateMipmap(k.TEXTURE_2D);b?k.bindTexture(k.TEXTURE_CUBE_MAP,null):k.bindTexture(k.TEXTURE_2D,null);k.bindRenderbuffer(k.RENDERBUFFER,null);k.bindFramebuffer(k.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=pc,a=qc,d=lb,e=yb);b!==Wc&&(k.bindFramebuffer(k.FRAMEBUFFER,b),k.viewport(d,e,c,a),Wc=b);Xc=c;Yc=a};this.initMaterial=
function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;
a.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);
THREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case "WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
break;case "WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}null===d&&console.log("THREE.WebGLRenderer: "+c+" extension not supported.");return b[c]=d}};
THREE.WebGLProgram=function(){var a=0;return function(b,c,d,e){var f=b.context,g=d.defines,h=d.__webglShader.uniforms,l=d.attributes,n=d.__webglShader.vertexShader,p=d.__webglShader.fragmentShader,q=d.index0AttributeName;void 0===q&&!0===e.morphTargets&&(q="position");var m="SHADOWMAP_TYPE_BASIC";e.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":e.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var r,t;r=[];for(var s in g)t=g[s],!1!==t&&(t="#define "+s+" "+t,r.push(t));
r=r.join("\n");g=f.createProgram();d instanceof THREE.RawShaderMaterial?b=d="":(d=["precision "+e.precision+" float;","precision "+e.precision+" int;",r,e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,"#define MAX_BONES "+
e.maxBones,e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals?"#define USE_MORPHNORMALS":"",e.wrapAround?"#define WRAP_AROUND":
"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+m:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),
b=["precision "+e.precision+" float;","precision "+e.precision+" int;",e.bumpMap||e.normalMap?"#extension GL_OES_standard_derivatives : enable":"",r,"#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,e.alphaTest?"#define ALPHATEST "+e.alphaTest:"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"",e.useFog&&e.fog?"#define USE_FOG":
"",e.useFog&&e.fogExp?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.metal?"#define METAL":"",e.wrapAround?"#define WRAP_AROUND":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":
"",e.shadowMapEnabled?"#define "+m:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));n=new THREE.WebGLShader(f,f.VERTEX_SHADER,d+n);p=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,b+p);f.attachShader(g,n);f.attachShader(g,p);void 0!==q&&f.bindAttribLocation(g,0,q);f.linkProgram(g);!1===f.getProgramParameter(g,f.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),
console.error("gl.VALIDATE_STATUS",f.getProgramParameter(g,f.VALIDATE_STATUS)),console.error("gl.getError()",f.getError()));""!==f.getProgramInfoLog(g)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f.getProgramInfoLog(g));f.deleteShader(n);f.deleteShader(p);q="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");e.useVertexTexture?(q.push("boneTexture"),q.push("boneTextureWidth"),q.push("boneTextureHeight")):
q.push("boneGlobalMatrices");e.logarithmicDepthBuffer&&q.push("logDepthBufFC");for(var u in h)q.push(u);h=q;u={};q=0;for(b=h.length;q<b;q++)m=h[q],u[m]=f.getUniformLocation(g,m);this.uniforms=u;q="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(h=0;h<e.maxMorphTargets;h++)q.push("morphTarget"+h);for(h=0;h<e.maxMorphNormals;h++)q.push("morphNormal"+h);for(var w in l)q.push(w);e=q;l={};w=0;for(h=e.length;w<h;w++)u=e[w],l[u]=f.getAttribLocation(g,u);this.attributes=
l;this.attributesKeys=Object.keys(this.attributes);this.id=a++;this.code=c;this.usedTimes=1;this.program=g;this.vertexShader=n;this.fragmentShader=p;return this}}();
THREE.WebGLShader=function(){var a=function(a){a=a.split("\n");for(var c=0;c<a.length;c++)a[c]=c+1+": "+a[c];return a.join("\n")};return function(b,c,d){c=b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==b.getShaderInfoLog(c)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b.getShaderInfoLog(c)),console.warn(a(d)));return c}}();
THREE.LensFlarePlugin=function(a,b){var c,d,e,f,g,h,l,n,p,q,m=a.context,r,t,s,u,w,H;this.render=function(M,v,X,y){if(0!==b.length){M=new THREE.Vector3;var A=y/X,B=.5*X,D=.5*y,E=16/y,L=new THREE.Vector2(E*A,E),aa=new THREE.Vector3(1,1,0),N=new THREE.Vector2(1,1);if(void 0===s){var E=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),F=new Uint16Array([0,1,2,0,2,3]);r=m.createBuffer();t=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,r);m.bufferData(m.ARRAY_BUFFER,E,m.STATIC_DRAW);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,
t);m.bufferData(m.ELEMENT_ARRAY_BUFFER,F,m.STATIC_DRAW);w=m.createTexture();H=m.createTexture();m.bindTexture(m.TEXTURE_2D,w);m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);m.bindTexture(m.TEXTURE_2D,H);m.texImage2D(m.TEXTURE_2D,0,
m.RGBA,16,16,0,m.RGBA,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);var E=(u=0<m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
F=m.createProgram(),Q=m.createShader(m.FRAGMENT_SHADER),O=m.createShader(m.VERTEX_SHADER),ca="precision "+a.getPrecision()+" float;\n";m.shaderSource(Q,ca+E.fragmentShader);m.shaderSource(O,ca+E.vertexShader);m.compileShader(Q);m.compileShader(O);m.attachShader(F,Q);m.attachShader(F,O);m.linkProgram(F);s=F;p=m.getAttribLocation(s,"position");q=m.getAttribLocation(s,"uv");c=m.getUniformLocation(s,"renderType");d=m.getUniformLocation(s,"map");e=m.getUniformLocation(s,"occlusionMap");f=m.getUniformLocation(s,
"opacity");g=m.getUniformLocation(s,"color");h=m.getUniformLocation(s,"scale");l=m.getUniformLocation(s,"rotation");n=m.getUniformLocation(s,"screenPosition")}m.useProgram(s);m.enableVertexAttribArray(p);m.enableVertexAttribArray(q);m.uniform1i(e,0);m.uniform1i(d,1);m.bindBuffer(m.ARRAY_BUFFER,r);m.vertexAttribPointer(p,2,m.FLOAT,!1,16,0);m.vertexAttribPointer(q,2,m.FLOAT,!1,16,8);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,t);m.disable(m.CULL_FACE);m.depthMask(!1);F=0;for(Q=b.length;F<Q;F++)if(E=16/y,L.set(E*
A,E),O=b[F],M.set(O.matrixWorld.elements[12],O.matrixWorld.elements[13],O.matrixWorld.elements[14]),M.applyMatrix4(v.matrixWorldInverse),M.applyProjection(v.projectionMatrix),aa.copy(M),N.x=aa.x*B+B,N.y=aa.y*D+D,u||0<N.x&&N.x<X&&0<N.y&&N.y<y){m.activeTexture(m.TEXTURE1);m.bindTexture(m.TEXTURE_2D,w);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,N.x-8,N.y-8,16,16,0);m.uniform1i(c,0);m.uniform2f(h,L.x,L.y);m.uniform3f(n,aa.x,aa.y,aa.z);m.disable(m.BLEND);m.enable(m.DEPTH_TEST);m.drawElements(m.TRIANGLES,6,
m.UNSIGNED_SHORT,0);m.activeTexture(m.TEXTURE0);m.bindTexture(m.TEXTURE_2D,H);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,N.x-8,N.y-8,16,16,0);m.uniform1i(c,1);m.disable(m.DEPTH_TEST);m.activeTexture(m.TEXTURE1);m.bindTexture(m.TEXTURE_2D,w);m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0);O.positionScreen.copy(aa);O.customUpdateCallback?O.customUpdateCallback(O):O.updateLensFlares();m.uniform1i(c,2);m.enable(m.BLEND);for(var ca=0,ea=O.lensFlares.length;ca<ea;ca++){var J=O.lensFlares[ca];.001<J.opacity&&
.001<J.scale&&(aa.x=J.x,aa.y=J.y,aa.z=J.z,E=J.size*J.scale/y,L.x=E*A,L.y=E,m.uniform3f(n,aa.x,aa.y,aa.z),m.uniform2f(h,L.x,L.y),m.uniform1f(l,J.rotation),m.uniform1f(f,J.opacity),m.uniform3f(g,J.color.r,J.color.g,J.color.b),a.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst),a.setTexture(J.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}}m.enable(m.CULL_FACE);m.enable(m.DEPTH_TEST);m.depthMask(!0);a.resetGLState()}}};
THREE.ShadowMapPlugin=function(a,b,c,d){function e(a,b,d){if(b.visible){var f=c[b.id];if(f&&b.castShadow&&(!1===b.frustumCulled||!0===p.intersectsObject(b)))for(var g=0,h=f.length;g<h;g++){var l=f[g];b._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,b.matrixWorld);s.push(l)}g=0;for(h=b.children.length;g<h;g++)e(a,b.children[g],d)}}var f=a.context,g,h,l,n,p=new THREE.Frustum,q=new THREE.Matrix4,m=new THREE.Vector3,r=new THREE.Vector3,t=new THREE.Vector3,s=[],u=THREE.ShaderLib.depthRGBA,w=THREE.UniformsUtils.clone(u.uniforms);
g=new THREE.ShaderMaterial({uniforms:w,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader});h=new THREE.ShaderMaterial({uniforms:w,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0});l=new THREE.ShaderMaterial({uniforms:w,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,skinning:!0});n=new THREE.ShaderMaterial({uniforms:w,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0,skinning:!0});g._shadowPass=!0;h._shadowPass=!0;l._shadowPass=
!0;n._shadowPass=!0;this.render=function(c,u){if(!1!==a.shadowMapEnabled){var v,w,y,A,B,D,E,L,aa=[];A=0;f.clearColor(1,1,1,1);f.disable(f.BLEND);f.enable(f.CULL_FACE);f.frontFace(f.CCW);a.shadowMapCullFace===THREE.CullFaceFront?f.cullFace(f.FRONT):f.cullFace(f.BACK);a.setDepthTest(!0);v=0;for(w=b.length;v<w;v++)if(y=b[v],y.castShadow)if(y instanceof THREE.DirectionalLight&&y.shadowCascade)for(B=0;B<y.shadowCascadeCount;B++){var N;if(y.shadowCascadeArray[B])N=y.shadowCascadeArray[B];else{E=y;var F=
B;N=new THREE.DirectionalLight;N.isVirtual=!0;N.onlyShadow=!0;N.castShadow=!0;N.shadowCameraNear=E.shadowCameraNear;N.shadowCameraFar=E.shadowCameraFar;N.shadowCameraLeft=E.shadowCameraLeft;N.shadowCameraRight=E.shadowCameraRight;N.shadowCameraBottom=E.shadowCameraBottom;N.shadowCameraTop=E.shadowCameraTop;N.shadowCameraVisible=E.shadowCameraVisible;N.shadowDarkness=E.shadowDarkness;N.shadowBias=E.shadowCascadeBias[F];N.shadowMapWidth=E.shadowCascadeWidth[F];N.shadowMapHeight=E.shadowCascadeHeight[F];
N.pointsWorld=[];N.pointsFrustum=[];L=N.pointsWorld;D=N.pointsFrustum;for(var Q=0;8>Q;Q++)L[Q]=new THREE.Vector3,D[Q]=new THREE.Vector3;L=E.shadowCascadeNearZ[F];E=E.shadowCascadeFarZ[F];D[0].set(-1,-1,L);D[1].set(1,-1,L);D[2].set(-1,1,L);D[3].set(1,1,L);D[4].set(-1,-1,E);D[5].set(1,-1,E);D[6].set(-1,1,E);D[7].set(1,1,E);N.originalCamera=u;D=new THREE.Gyroscope;D.position.copy(y.shadowCascadeOffset);D.add(N);D.add(N.target);u.add(D);y.shadowCascadeArray[B]=N;console.log("Created virtualLight",N)}F=
y;L=B;E=F.shadowCascadeArray[L];E.position.copy(F.position);E.target.position.copy(F.target.position);E.lookAt(E.target);E.shadowCameraVisible=F.shadowCameraVisible;E.shadowDarkness=F.shadowDarkness;E.shadowBias=F.shadowCascadeBias[L];D=F.shadowCascadeNearZ[L];F=F.shadowCascadeFarZ[L];E=E.pointsFrustum;E[0].z=D;E[1].z=D;E[2].z=D;E[3].z=D;E[4].z=F;E[5].z=F;E[6].z=F;E[7].z=F;aa[A]=N;A++}else aa[A]=y,A++;v=0;for(w=aa.length;v<w;v++){y=aa[v];y.shadowMap||(B=THREE.LinearFilter,a.shadowMapType===THREE.PCFSoftShadowMap&&
(B=THREE.NearestFilter),y.shadowMap=new THREE.WebGLRenderTarget(y.shadowMapWidth,y.shadowMapHeight,{minFilter:B,magFilter:B,format:THREE.RGBAFormat}),y.shadowMapSize=new THREE.Vector2(y.shadowMapWidth,y.shadowMapHeight),y.shadowMatrix=new THREE.Matrix4);if(!y.shadowCamera){if(y instanceof THREE.SpotLight)y.shadowCamera=new THREE.PerspectiveCamera(y.shadowCameraFov,y.shadowMapWidth/y.shadowMapHeight,y.shadowCameraNear,y.shadowCameraFar);else if(y instanceof THREE.DirectionalLight)y.shadowCamera=new THREE.OrthographicCamera(y.shadowCameraLeft,
y.shadowCameraRight,y.shadowCameraTop,y.shadowCameraBottom,y.shadowCameraNear,y.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}c.add(y.shadowCamera);!0===c.autoUpdate&&c.updateMatrixWorld()}y.shadowCameraVisible&&!y.cameraHelper&&(y.cameraHelper=new THREE.CameraHelper(y.shadowCamera),c.add(y.cameraHelper));if(y.isVirtual&&N.originalCamera==u){B=u;A=y.shadowCamera;D=y.pointsFrustum;E=y.pointsWorld;m.set(Infinity,Infinity,Infinity);r.set(-Infinity,-Infinity,-Infinity);
for(F=0;8>F;F++)L=E[F],L.copy(D[F]),L.unproject(B),L.applyMatrix4(A.matrixWorldInverse),L.x<m.x&&(m.x=L.x),L.x>r.x&&(r.x=L.x),L.y<m.y&&(m.y=L.y),L.y>r.y&&(r.y=L.y),L.z<m.z&&(m.z=L.z),L.z>r.z&&(r.z=L.z);A.left=m.x;A.right=r.x;A.top=r.y;A.bottom=m.y;A.updateProjectionMatrix()}A=y.shadowMap;D=y.shadowMatrix;B=y.shadowCamera;B.position.setFromMatrixPosition(y.matrixWorld);t.setFromMatrixPosition(y.target.matrixWorld);B.lookAt(t);B.updateMatrixWorld();B.matrixWorldInverse.getInverse(B.matrixWorld);y.cameraHelper&&
(y.cameraHelper.visible=y.shadowCameraVisible);y.shadowCameraVisible&&y.cameraHelper.update();D.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);D.multiply(B.projectionMatrix);D.multiply(B.matrixWorldInverse);q.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse);p.setFromMatrix(q);a.setRenderTarget(A);a.clear();s.length=0;e(c,c,B);y=0;for(A=s.length;y<A;y++)E=s[y],D=E.object,E=E.buffer,F=D.material instanceof THREE.MeshFaceMaterial?D.material.materials[0]:D.material,L=void 0!==D.geometry.morphTargets&&
0<D.geometry.morphTargets.length&&F.morphTargets,Q=D instanceof THREE.SkinnedMesh&&F.skinning,L=D.customDepthMaterial?D.customDepthMaterial:Q?L?n:l:L?h:g,a.setMaterialFaces(F),E instanceof THREE.BufferGeometry?a.renderBufferDirect(B,b,null,L,E,D):a.renderBuffer(B,b,null,L,E,D);y=0;for(A=d.length;y<A;y++)E=d[y],D=E.object,D.visible&&D.castShadow&&(D._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,D.matrixWorld),a.renderImmediateObject(B,b,null,g,D))}v=a.getClearColor();w=a.getClearAlpha();f.clearColor(v.r,
v.g,v.b,w);f.enable(f.BLEND);a.shadowMapCullFace===THREE.CullFaceFront&&f.cullFace(f.BACK);a.resetGLState()}}};
THREE.SpritePlugin=function(a,b){var c,d,e,f,g,h,l,n,p,q,m,r,t,s,u,w,H;function M(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var v=a.context,X,y,A,B,D=new THREE.Vector3,E=new THREE.Quaternion,L=new THREE.Vector3;this.render=function(aa,N){if(0!==b.length){if(void 0===A){var F=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),Q=new Uint16Array([0,1,2,0,2,3]);X=v.createBuffer();y=v.createBuffer();v.bindBuffer(v.ARRAY_BUFFER,X);v.bufferData(v.ARRAY_BUFFER,F,v.STATIC_DRAW);v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,
y);v.bufferData(v.ELEMENT_ARRAY_BUFFER,Q,v.STATIC_DRAW);var F=v.createProgram(),Q=v.createShader(v.VERTEX_SHADER),O=v.createShader(v.FRAGMENT_SHADER);v.shaderSource(Q,["precision "+a.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
v.shaderSource(O,["precision "+a.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
v.compileShader(Q);v.compileShader(O);v.attachShader(F,Q);v.attachShader(F,O);v.linkProgram(F);A=F;w=v.getAttribLocation(A,"position");H=v.getAttribLocation(A,"uv");c=v.getUniformLocation(A,"uvOffset");d=v.getUniformLocation(A,"uvScale");e=v.getUniformLocation(A,"rotation");f=v.getUniformLocation(A,"scale");g=v.getUniformLocation(A,"color");h=v.getUniformLocation(A,"map");l=v.getUniformLocation(A,"opacity");n=v.getUniformLocation(A,"modelViewMatrix");p=v.getUniformLocation(A,"projectionMatrix");q=
v.getUniformLocation(A,"fogType");m=v.getUniformLocation(A,"fogDensity");r=v.getUniformLocation(A,"fogNear");t=v.getUniformLocation(A,"fogFar");s=v.getUniformLocation(A,"fogColor");u=v.getUniformLocation(A,"alphaTest");F=document.createElement("canvas");F.width=8;F.height=8;Q=F.getContext("2d");Q.fillStyle="white";Q.fillRect(0,0,8,8);B=new THREE.Texture(F);B.needsUpdate=!0}v.useProgram(A);v.enableVertexAttribArray(w);v.enableVertexAttribArray(H);v.disable(v.CULL_FACE);v.enable(v.BLEND);v.bindBuffer(v.ARRAY_BUFFER,
X);v.vertexAttribPointer(w,2,v.FLOAT,!1,16,0);v.vertexAttribPointer(H,2,v.FLOAT,!1,16,8);v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,y);v.uniformMatrix4fv(p,!1,N.projectionMatrix.elements);v.activeTexture(v.TEXTURE0);v.uniform1i(h,0);Q=F=0;(O=aa.fog)?(v.uniform3f(s,O.color.r,O.color.g,O.color.b),O instanceof THREE.Fog?(v.uniform1f(r,O.near),v.uniform1f(t,O.far),v.uniform1i(q,1),Q=F=1):O instanceof THREE.FogExp2&&(v.uniform1f(m,O.density),v.uniform1i(q,2),Q=F=2)):(v.uniform1i(q,0),Q=F=0);for(var O=0,ca=b.length;O<
ca;O++){var ea=b[O];ea._modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,ea.matrixWorld);ea.z=null===ea.renderDepth?-ea._modelViewMatrix.elements[14]:ea.renderDepth}b.sort(M);for(var J=[],O=0,ca=b.length;O<ca;O++){var ea=b[O],T=ea.material;v.uniform1f(u,T.alphaTest);v.uniformMatrix4fv(n,!1,ea._modelViewMatrix.elements);ea.matrixWorld.decompose(D,E,L);J[0]=L.x;J[1]=L.y;ea=0;aa.fog&&T.fog&&(ea=Q);F!==ea&&(v.uniform1i(q,ea),F=ea);null!==T.map?(v.uniform2f(c,T.map.offset.x,T.map.offset.y),v.uniform2f(d,
T.map.repeat.x,T.map.repeat.y)):(v.uniform2f(c,0,0),v.uniform2f(d,1,1));v.uniform1f(l,T.opacity);v.uniform3f(g,T.color.r,T.color.g,T.color.b);v.uniform1f(e,T.rotation);v.uniform2fv(f,J);a.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst);a.setDepthTest(T.depthTest);a.setDepthWrite(T.depthWrite);T.map&&T.map.image&&T.map.image.width?a.setTexture(T.map,0):a.setTexture(B,0);v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0)}v.enable(v.CULL_FACE);a.resetGLState()}}};
THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.Texture(void 0,b);e.load(a,function(a){f.image=a;f.needsUpdate=!0;c&&c(f)},void 0,function(a){d&&d(a)});f.sourceFile=a;return f},loadTextureCube:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.CubeTexture([],b);f.flipY=!1;var g=0;b=function(b){e.load(a[b],function(a){f.images[b]=a;g+=1;6===g&&(f.needsUpdate=!0,c&&
c(f))})};d=0;for(var h=a.length;d<h;++d)b(d);return f},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");
f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,l=g.createImageData(d,e),n=l.data,p=0;p<d;p++)for(var q=0;q<e;q++){var m=0>q-1?0:q-1,r=q+1>e-1?e-1:q+1,t=0>p-1?0:p-1,s=p+1>d-1?d-1:p+1,u=[],w=[0,0,h[4*(q*d+p)]/255*b];u.push([-1,0,h[4*(q*d+t)]/255*b]);u.push([-1,-1,h[4*(m*d+t)]/255*b]);u.push([0,-1,h[4*(m*d+p)]/255*b]);u.push([1,-1,h[4*(m*d+s)]/255*b]);u.push([1,0,h[4*(q*d+s)]/255*b]);u.push([1,1,h[4*(r*d+s)]/255*b]);u.push([0,1,h[4*(r*d+p)]/255*
b]);u.push([-1,1,h[4*(r*d+t)]/255*b]);m=[];t=u.length;for(r=0;r<t;r++){var s=u[r],H=u[(r+1)%t],s=[s[0]-w[0],s[1]-w[1],s[2]-w[2]],H=[H[0]-w[0],H[1]-w[1],H[2]-w[2]];m.push(c([s[1]*H[2]-s[2]*H[1],s[2]*H[0]-s[0]*H[2],s[0]*H[1]-s[1]*H[0]]))}u=[0,0,0];for(r=0;r<m.length;r++)u[0]+=m[r][0],u[1]+=m[r][1],u[2]+=m[r][2];u[0]/=m.length;u[1]/=m.length;u[2]/=m.length;w=4*(q*d+p);n[w]=(u[0]+1)/2*255|0;n[w+1]=(u[1]+1)/2*255|0;n[w+2]=255*u[2]|0;n[w+3]=255}g.putImageData(l,0,0);return f},generateDataTexture:function(a,
b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,l;g<=h;)if(d=Math.floor(g+(h-g)/2),l=c[d]-f,0>l)g=d+1;else if(0<l)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};
THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,l,n,p,q=a[0]instanceof THREE.Vector3;p=q?new THREE.Vector3:new THREE.Vector2;l=0;for(n=a.length;l<n;l++)h=a[l],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),q&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),p.add(h);a={minX:e,minY:f,maxX:b,maxY:c};q&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,l;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,l=g/c.maxX,l=b.getUtoTmapping(l,g),g=b.getPoint(l),l=b.getTangent(l),l.set(-l.y,l.x).multiplyScalar(h),f.x=g.x+l.x,f.y=g.y+l.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Quaternion,f=new THREE.Vector3;return function(g){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||g)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(d,e,f),this.matrix.decompose(a,b,c),this.matrixWorld.compose(d,b,f)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,g=!0;for(var h=0,l=this.children.length;h<l;h++)this.children[h].updateMatrixWorld(g)}}();THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};
THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};
THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),l=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(l);l=l.getPoint(1);h.push(l.x);h.push(l.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,l,n,p,q,m,r,t,s;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];l=f[3];q=f[0];m=f[1];0<c.length?(g=c[c.length-1],r=g.x,
t=g.y):(g=this.actions[d-1].args,r=g[g.length-2],t=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b2(s,r,q,h),s=THREE.Shape.Utils.b2(s,t,m,l),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];l=f[5];q=f[0];m=f[1];n=f[2];p=f[3];0<c.length?(g=c[c.length-1],r=g.x,t=g.y):(g=this.actions[d-1].args,r=g[g.length-2],t=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b3(s,r,q,n,h),s=THREE.Shape.Utils.b3(s,t,m,p,l),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;s=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;s=s.concat(f[0]);s=new THREE.SplineCurve(s);for(f=1;f<=g;f++)c.push(s.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];l=f[1];m=f[2];n=f[3];g=f[4];q=!!f[5];r=g-n;t=2*a;for(f=1;f<=t;f++)s=f/t,q||(s=1-s),s=n+s*r,g=h+m*Math.cos(s),s=l+m*Math.sin(s),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.ELLIPSE:for(h=f[0],l=f[1],m=f[2],p=f[3],n=f[4],g=f[5],q=!!f[6],r=g-n,t=2*a,f=1;f<=t;f++)s=f/t,q||
(s=1-s),s=n+s*r,g=h+m*Math.cos(s),s=l+p*Math.sin(s),c.push(new THREE.Vector2(g,s))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],l=h.x-g.x,m=h.y-g.y;if(1E-10<Math.abs(m)){if(0>m&&(g=b[f],l=-l,h=b[e],m=-m),!(a.y<g.y||a.y>h.y))if(a.y==g.y){if(a.x==g.x)return!0}else{e=m*(a.x-g.x)-l*(a.y-g.y);if(0==e)return!0;0>e||(d=!d)}}else if(a.y==g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=
h.x))return!0}return d}var e=function(a){var b,c,d,e,f=[],g=new THREE.Path;b=0;for(c=a.length;b<c;b++)d=a[b],e=d.args,d=d.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);0!=g.actions.length&&f.push(g);return f}(this.actions);if(0==e.length)return[];if(!0===b)return c(e);var f,g,h,l=[];if(1==e.length)return g=e[0],h=new THREE.Shape,h.actions=g.actions,h.curves=g.curves,l.push(h),l;var n=!THREE.Shape.Utils.isClockWise(e[0].getPoints()),n=a?!n:n;
h=[];var p=[],q=[],m=0,r;p[m]=void 0;q[m]=[];var t,s;t=0;for(s=e.length;t<s;t++)g=e[t],r=g.getPoints(),f=THREE.Shape.Utils.isClockWise(r),(f=a?!f:f)?(!n&&p[m]&&m++,p[m]={s:new THREE.Shape,p:r},p[m].s.actions=g.actions,p[m].s.curves=g.curves,n&&m++,q[m]=[]):q[m].push({h:g,p:r[0]});if(!p[0])return c(e);if(1<p.length){t=!1;s=[];g=0;for(e=p.length;g<e;g++)h[g]=[];g=0;for(e=p.length;g<e;g++)for(f=q[g],n=0;n<f.length;n++){m=f[n];r=!0;for(var u=0;u<p.length;u++)d(m.p,p[u].p)&&(g!=u&&s.push({froms:g,tos:u,
hole:n}),r?(r=!1,h[u].push(m)):t=!0);r&&h[g].push(m)}0<s.length&&(t||(q=h))}t=0;for(s=p.length;t<s;t++)for(h=p[t].s,l.push(h),g=q[t],e=0,f=g.length;e<f;e++)h.holes.push(g[e].h);return l};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};
THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};
THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,l=e.x-d.x,n=e.y-d.y,p=a.x-d.x,q=a.y-d.y,A=h*l-g*n,B=h*p-g*q;if(1E-10<Math.abs(A)){if(0<A){if(0>B||B>A)return[];l=n*p-l*q;if(0>l||l>A)return[]}else{if(0<B||B<A)return[];l=n*p-l*q;if(0<l||l<A)return[]}if(0==l)return!f||0!=B&&B!=A?[a]:[];if(l==A)return!f||0!=B&&B!=A?[b]:[];if(0==B)return[d];
if(B==A)return[e];f=l/A;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!=B||n*p!=l*q)return[];h=0==g&&0==h;l=0==l&&0==n;if(h&&l)return a.x!=d.x||a.y!=d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(l)return c(a,b,d)?[d]:[];0!=g?(a.x<b.x?(g=a,l=a.x,h=b,a=b.x):(g=b,l=b.x,h=a,a=a.x),d.x<e.x?(b=d,A=d.x,n=e,d=e.x):(b=e,A=e.x,n=d,d=d.x)):(a.y<b.y?(g=a,l=a.y,h=b,a=b.y):(g=b,l=b.y,h=a,a=a.y),d.y<e.y?(b=d,A=d.y,n=e,d=e.y):(b=e,A=e.y,n=d,d=d.y));return l<=A?a<A?[]:a==A?f?[]:[b]:a<=d?[b,h]:[b,n]:l>d?[]:l==d?f?[]:[g]:a<=d?[g,h]:
[g,n]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return 1E-10<Math.abs(a)?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var f,g,h,l,n,p={};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=h.length;f<g;f++)n=h[f].x+":"+h[f].y,void 0!==p[n]&&console.log("Duplicate point",n),p[n]=f;f=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],l[b]);if(!d)return!1;
d=l.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(l[b],l[f],l[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,l;for(e=0;e<n.length;e++)for(f=b[n[e]],h=0;h<f.length;h++)if(l=h+1,l%=f.length,l=d(a,c,f[h],f[l],!0),0<l.length)return!0;return!1}var h=a.concat(),l,n=[],p,q,y,A,B,D=[],E,L,aa,N=0;for(p=b.length;N<p;N++)n.push(N);E=0;for(var F=2*n.length;0<n.length;){F--;if(0>F){console.log("Infinite Loop! Holes left:"+
n.length+", Probably Hole outside Shape!");break}for(q=E;q<h.length;q++){y=h[q];p=-1;for(N=0;N<n.length;N++)if(A=n[N],B=y.x+":"+y.y+":"+A,void 0===D[B]){l=b[A];for(L=0;L<l.length;L++)if(A=l[L],c(q,L)&&!f(y,A)&&!g(y,A)){p=L;n.splice(N,1);E=h.slice(0,q+1);A=h.slice(q);L=l.slice(p);aa=l.slice(0,p+1);h=E.concat(L).concat(aa).concat(A);E=q;break}if(0<=p)break;D[B]=!0}if(0<=p)break}}return h}(a,b);var q=THREE.FontUtils.Triangulate(f,!1);f=0;for(g=q.length;f<g;f++)for(l=q[f],h=0;3>h;h++)n=l[h].x+":"+l[h].y,
n=p[n],void 0!==n&&(l[h]=n);return q.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,
b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}};
THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(a){if(!0===a.initialized)return a;for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(0>a.hierarchy[b].keys[c].time&&(a.hierarchy[b].keys[c].time=
0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){d={};for(c=0;c<a.hierarchy[b].keys.length;c++)for(var e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++){var f=a.hierarchy[b].keys[c].morphTargets[e];d[f]=-1}a.hierarchy[b].usedMorphTargets=d;for(c=0;c<a.hierarchy[b].keys.length;c++){var g=
{};for(f in d){for(e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++)if(a.hierarchy[b].keys[c].morphTargets[e]===f){g[f]=a.hierarchy[b].keys[c].morphTargetsInfluences[e];break}e===a.hierarchy[b].keys[c].morphTargets.length&&(g[f]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=g}}for(c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}a.initialized=
!0;return a},parse:function(a){var b=function(a,c){c.push(a);for(var d=0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a instanceof THREE.SkinnedMesh)for(var d=0;d<a.skeleton.bones.length;d++)c.push(a.skeleton.bones[d]);else b(a,c);return c},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].resetBlendWeights();
for(b=0;b<this.animations.length;b++)this.animations[b].update(a)}};THREE.Animation=function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];
THREE.Animation.prototype.play=function(a,b){this.currentTime=void 0!==a?a:0;this.weight=void 0!==b?b:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)};THREE.Animation.prototype.stop=function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)};
THREE.Animation.prototype.reset=function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a];c.matrixAutoUpdate=!0;void 0===c.animationCache&&(c.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});void 0===c.animationCache.animations[this.data.name]&&(c.animationCache.animations[this.data.name]={},c.animationCache.animations[this.data.name].prevKey={pos:0,rot:0,scl:0},c.animationCache.animations[this.data.name].nextKey={pos:0,rot:0,scl:0},
c.animationCache.animations[this.data.name].originalMatrix=c.matrix);for(var c=c.animationCache.animations[this.data.name],d=0;3>d;d++){for(var e=this.keyTypes[d],f=this.data.hierarchy[a].keys[0],g=this.getNextKeyWith(e,a,1);g.time<this.currentTime&&g.index>f.index;)f=g,g=this.getNextKeyWith(e,a,g.index+1);c.prevKey[e]=f;c.nextKey[e]=g}}};
THREE.Animation.prototype.resetBlendWeights=function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a];void 0!==c.animationCache&&(c.animationCache.blending.positionWeight=0,c.animationCache.blending.quaternionWeight=0,c.animationCache.blending.scaleWeight=0)}};
THREE.Animation.prototype.update=function(){var a=[],b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Quaternion,e=function(a,b){var c=[],d=[],e,q,m,r,t,s;e=(a.length-1)*b;q=Math.floor(e);e-=q;c[0]=0===q?q:q-1;c[1]=q;c[2]=q>a.length-2?q:q+1;c[3]=q>a.length-3?q:q+2;q=a[c[0]];r=a[c[1]];t=a[c[2]];s=a[c[3]];c=e*e;m=e*c;d[0]=f(q[0],r[0],t[0],s[0],e,c,m);d[1]=f(q[1],r[1],t[1],s[1],e,c,m);d[2]=f(q[2],r[2],t[2],s[2],e,c,m);return d},f=function(a,b,c,d,e,f,m){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*m+
(-3*(b-c)-2*a-d)*f+a*e+b};return function(f){if(!1!==this.isPlaying&&(this.currentTime+=f*this.timeScale,0!==this.weight)){f=this.data.length;if(this.currentTime>f||0>this.currentTime)if(this.loop)this.currentTime%=f,0>this.currentTime&&(this.currentTime+=f),this.reset();else{this.stop();return}f=0;for(var h=this.hierarchy.length;f<h;f++)for(var l=this.hierarchy[f],n=l.animationCache.animations[this.data.name],p=l.animationCache.blending,q=0;3>q;q++){var m=this.keyTypes[q],r=n.prevKey[m],t=n.nextKey[m];
if(0<this.timeScale&&t.time<=this.currentTime||0>this.timeScale&&r.time>=this.currentTime){r=this.data.hierarchy[f].keys[0];for(t=this.getNextKeyWith(m,f,1);t.time<this.currentTime&&t.index>r.index;)r=t,t=this.getNextKeyWith(m,f,t.index+1);n.prevKey[m]=r;n.nextKey[m]=t}l.matrixAutoUpdate=!0;l.matrixWorldNeedsUpdate=!0;var s=(this.currentTime-r.time)/(t.time-r.time),u=r[m],w=t[m];0>s&&(s=0);1<s&&(s=1);if("pos"===m)if(this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=u[0]+(w[0]-u[0])*s,c.y=
u[1]+(w[1]-u[1])*s,c.z=u[2]+(w[2]-u[2])*s,r=this.weight/(this.weight+p.positionWeight),l.position.lerp(c,r),p.positionWeight+=this.weight;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith("pos",f,r.index-1).pos,a[1]=u,a[2]=w,a[3]=this.getNextKeyWith("pos",f,t.index+1).pos,s=.33*s+.33,t=e(a,s),r=this.weight/(this.weight+p.positionWeight),p.positionWeight+=this.weight,m=l.position,m.x+=(t[0]-
m.x)*r,m.y+=(t[1]-m.y)*r,m.z+=(t[2]-m.z)*r,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(s=e(a,1.01*s),b.set(s[0],s[1],s[2]),b.sub(m),b.y=0,b.normalize(),s=Math.atan2(b.x,b.z),l.rotation.set(0,s,0))}else"rot"===m?(THREE.Quaternion.slerp(u,w,d,s),0===p.quaternionWeight?(l.quaternion.copy(d),p.quaternionWeight=this.weight):(r=this.weight/(this.weight+p.quaternionWeight),THREE.Quaternion.slerp(l.quaternion,d,l.quaternion,r),p.quaternionWeight+=this.weight)):"scl"===m&&(c.x=u[0]+
(w[0]-u[0])*s,c.y=u[1]+(w[1]-u[1])*s,c.z=u[2]+(w[2]-u[2])*s,r=this.weight/(this.weight+p.scaleWeight),l.scale.lerp(c,r),p.scaleWeight+=this.weight)}return!0}}}();THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a){this.currentTime=void 0!==a?a:0;if(!1===this.isPlaying){this.isPlaying=!0;var b=this.hierarchy.length,c,d;for(a=0;a<b;a++)c=this.hierarchy[a],d=this.data.hierarchy[a],void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix),c=this.data.hierarchy[a].keys,c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=c[1],this.startTime=Math.min(c[0].time,
this.startTime),this.endTime=Math.max(c[c.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;d.copy(b.matrix);b.matrix=d;delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(!1!==this.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime>a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var f=d.prevKey,g=d.nextKey;if(g.time<=this.currentTime){for(;g.time<this.currentTime&&g.index>f.index;)f=g,g=e[f.index+1];d.prevKey=
f;d.nextKey=g}g.time>=this.currentTime?f.interpolate(g,this.currentTime):f.interpolate(g,g.time);this.data.hierarchy[a].node.updateMatrix();c.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};
THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};THREE.MorphAnimation=function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.isPlaying=!1};
THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var a=0,b=0;return function(c){if(!1!==this.isPlaying){this.currentTime+=c;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);c=this.duration/this.frames;var d=Math.floor(this.currentTime/c);d!=b&&(this.mesh.morphTargetInfluences[a]=0,this.mesh.morphTargetInfluences[b]=1,this.mesh.morphTargetInfluences[d]=
0,a=b,b=d);this.mesh.morphTargetInfluences[d]=this.currentTime%c/c;this.mesh.morphTargetInfluences[a]=1-this.mesh.morphTargetInfluences[d]}}}()};var SEA3D={VERSION:16500,REVISION:2,Timer:function(){this.time=this.start=this.getTime()}};SEA3D.Timer.prototype.getDeltaTime=function(){return this.getTime()-this.time};SEA3D.Timer.prototype.getTime=function(){return(new Date).getTime()};SEA3D.Timer.prototype.getElapsedTime=function(){return this.getTime()-this.start};
SEA3D.Timer.prototype.update=function(){this.time=this.getTime()};SEA3D.Stream=function(a){this.position=0;this.set(a||new Uint8Array)};SEA3D.Stream.bufferToBase64=function(a){for(var b=0,c=a.length,d="";b<c;)d+=String.fromCharCode(a[b++]);return window.btoa(d)};SEA3D.Stream.prototype.TWOeN23=Math.pow(2,-23);SEA3D.Stream.prototype.TWOeN52=Math.pow(2,-52);SEA3D.Stream.prototype.pow=Math.pow;SEA3D.Stream.prototype.set=function(a){this.buffer=a;this.length=a.length};
SEA3D.Stream.prototype.readByte=function(){return this.buffer[this.position++]<<24>>24};SEA3D.Stream.prototype.readUByte=function(){return this.buffer[this.position++]};SEA3D.Stream.prototype.readUBytes=function(a){for(var b=new Uint8Array(a),c=0;c<a;++c)b[c]=this.buffer[this.position++];return b};SEA3D.Stream.prototype.readBool=function(){return 0!=this.readUByte()};SEA3D.Stream.prototype.readShort=function(){var a=this.readUShort();return a>Math.pow(2,15)-1?a-Math.pow(2,16):a};
SEA3D.Stream.prototype.readUShort=function(){return this.readUByte()|this.readUByte()<<8};SEA3D.Stream.prototype.readUInt24=function(){return this.readUByte()|this.readUByte()<<8|this.readUByte()<<16};SEA3D.Stream.prototype.readUInt=function(){return this.readUByte()|this.readUByte()<<8|this.readUByte()<<16|this.readUByte()<<24};
SEA3D.Stream.prototype.readUInteger=function(){var a=this.readUByte(),b=a&127;0!=(a&128)&&(a=this.readUByte(),b|=(a&127)<<7,0!=(a&128)&&(a=this.readUByte(),b|=(a&127)<<13));return b};SEA3D.Stream.prototype.readFloat=function(){var a=this.readUByte(),b=this.readUByte(),c=this.readUByte(),d=this.readUByte(),e=(d<<1&255|c>>7)-127,a=(c&127)<<16|b<<8|a;return 0==a&&-127==e?0:(1-(d>>7<<1))*(1+this.TWOeN23*a)*this.pow(2,e)};SEA3D.Stream.prototype.readVector2=function(){return{x:this.readFloat(),y:this.readFloat()}};
SEA3D.Stream.prototype.readVector3=function(){return{x:this.readFloat(),y:this.readFloat(),z:this.readFloat()}};SEA3D.Stream.prototype.readVector4=function(){return{x:this.readFloat(),y:this.readFloat(),z:this.readFloat(),w:this.readFloat()}};
SEA3D.Stream.prototype.readMatrix=function(){var a=new Float32Array(16);a[0]=this.readFloat();a[1]=this.readFloat();a[2]=this.readFloat();a[3]=0;a[4]=this.readFloat();a[5]=this.readFloat();a[6]=this.readFloat();a[7]=0;a[8]=this.readFloat();a[9]=this.readFloat();a[10]=this.readFloat();a[11]=0;a[12]=this.readFloat();a[13]=this.readFloat();a[14]=this.readFloat();a[15]=1;return a};SEA3D.Stream.prototype.readUTF=function(a){return String.fromCharCode.apply(null,new Uint16Array(this.readUBytes(a)))};
SEA3D.Stream.prototype.readExt=function(){return this.readUTF(4).replace(/\0/g,"")};SEA3D.Stream.prototype.readUTF8=function(){return this.readUTF(this.readUByte())};SEA3D.Stream.prototype.readBlendMode=function(){return SEA3D.DataTable.BLEND_MODE[this.readUByte()]};SEA3D.Stream.prototype.toBase64=function(){return SEA3D.Stream.bufferToBase64(this.data)};
SEA3D.Stream.prototype.append=function(a){var b=new Uint8Array(this.data.byteLength+a.byteLength);b.set(new Uint8Array(this.data),0);b.set(new Uint8Array(a),this.data.byteLength);this.data=b};SEA3D.Stream.prototype.concat=function(a,b){return new SEA3D.Stream(this.buffer.subarray(a,a+b))};SEA3D.Stream.prototype.bytesAvailable=function(){return this.length-this.position};
SEA3D.DataTable={NONE:0,BOOLEAN:1,BYTE:2,UBYTE:3,SHORT:4,USHORT:5,INT24:6,UINT24:7,INT:8,UINT:9,FLOAT:10,DOUBLE:11,DECIMAL:12,VECTOR3D:74,VECTOR4D:106,STRING_TINY:128,STRING_SHORT:129,STRING_LONG:130};SEA3D.DataTable.BLEND_MODE="normal add subtract multiply dividing alpha screen darken overlay colorburn linearburn lighten colordodge lineardodge softlight hardlight pinlight spotlight spotlightblend hardmix average difference exclusion hue saturation color value".split(" ");
SEA3D.DataTable.INTERPOLATION_TABLE="normal linear sine.in sine.out sine.inout cubic.in cubic.out cubic.inout quint.in quint.out quint.inout circ.in circ.out circ.inout back.in back.out back.inout quad.in quad.out quad.inout quart.in quart.out quart.inout expo.in expo.out expo.inout elastic.in elastic.out elastic.inout bounce.in bounce.out bounce.inout".split(" ");SEA3D.DataTable.readObject=function(a){SEA3D.DataTable.readToken(a.readUByte(),a)};
SEA3D.DataTable.readToken=function(a,b){switch(a){case SEA3D.DataTable.BOOLEAN:return b.readBool();case SEA3D.DataTable.UBYTE:return b.readUByte();case SEA3D.DataTable.USHORT:return b.readUShort();case SEA3D.DataTable.UINT24:return b.readUInt24();case SEA3D.DataTable.UINT:return b.readUInt();case SEA3D.DataTable.FLOAT:return b.readFloat();case SEA3D.DataTable.VECTOR3D:return b.readVector3();case SEA3D.DataTable.VECTOR4D:return b.readVector4();case SEA3D.DataTable.STRING_TINY:return b.readUTF8()}return null};
SEA3D.DataTable.readVector=function(a,b,c,d,e){var f=SEA3D.DataTable.sizeOf(a);e*=f;d=e+d*f;switch(a){case SEA3D.DataTable.BOOLEAN:for(;e<d;)c[e++]=b.readBool()?1:0;break;case SEA3D.DataTable.UBYTE:for(;e<d;)c[e++]=b.readUByte();break;case SEA3D.DataTable.USHORT:for(;e<d;)c[e++]=b.readUShort();break;case SEA3D.DataTable.UINT24:for(;e<d;)c[e++]=b.readUInt24();break;case SEA3D.DataTable.UINT:for(;e<d;)c[e++]=b.readUInt();break;case SEA3D.DataTable.FLOAT:for(;e<d;)c[e++]=b.readFloat();break;case SEA3D.DataTable.VECTOR3D:for(;e<
d;)c[e++]=b.readFloat(),c[e++]=b.readFloat(),c[e++]=b.readFloat();break;case SEA3D.DataTable.VECTOR4D:for(;e<d;)c[e++]=b.readFloat(),c[e++]=b.readFloat(),c[e++]=b.readFloat(),c[e++]=b.readFloat()}};SEA3D.DataTable.sizeOf=function(a){return 0==a?0:1<=a&&31>=a?1:32<=a&&63>=a?2:64<=a&&95>=a?3:96<=a&&125>=a?4:-1};SEA3D.Math={DEGREES:180/Math.PI,RADIANS:Math.PI/180};SEA3D.Math.angle=function(a){var b=0>a;a=(b?-a:a)%360;180<a&&(a=-180+(a-180));return b?-a:a};
SEA3D.Math.lerpAngle=function(a,b,c){180<Math.abs(a-b)&&(b=a>b?b+360:b-360);return SEA3D.Math.angle(a+(b-a)*c)};SEA3D.Math.lerpColor=function(a,b,c){var d=a>>24&255,e=a>>16&255,f=a>>8&255;a&=255;e+=((b>>16&255)-e)*c;f+=((b>>8&255)-f)*c;a+=((b&255)-a)*c;return d+((b>>24&255)-d)*c<<24|e<<16|f<<8|a};SEA3D.Math.lerp=function(a,b,c){return a+(b-a)*c};SEA3D.Math.lerp1x=function(a,b,c){a[0]+=(b[0]-a[0])*c};SEA3D.Math.lerp3x=function(a,b,c){a[0]+=(b[0]-a[0])*c;a[1]+=(b[1]-a[1])*c;a[2]+=(b[2]-a[2])*c};
SEA3D.Math.lerpAng1x=function(a,b,c){a[0]=SEA3D.Math.lerpAngle(a[0],b[0],c)};SEA3D.Math.lerpColor1x=function(a,b,c){a[0]=SEA3D.Math.lerpColor(a[0],b[0],c)};SEA3D.Math.lerpQuat4x=function(a,b,c){var d=a[0],e=a[1],f=a[2],g=a[3],h=b[0],l=b[1],n=b[2];b=b[3];0>d*h+e*l+f*n+g*b&&(h=-h,l=-l,n=-n,b=-b);d+=c*(h-d);e+=c*(l-e);f+=c*(n-f);c=g+c*(b-g);g=1/Math.sqrt(c*c+d*d+e*e+f*f);a[0]=d*g;a[1]=e*g;a[2]=f*g;a[3]=c*g};SEA3D.AnimationBlendMethod={LINEAR:"linear",EASING:"easing"};
SEA3D.AnimationFrame=function(){this.data=[0,0,0,0]};SEA3D.AnimationFrame.prototype.toVector=function(){return{x:this.data[0],y:this.data[1],z:this.data[2],w:this.data[3]}};SEA3D.AnimationFrame.prototype.toAngles=function(a){var b=this.data[0],c=this.data[1],d=this.data[2],e=this.data[3],f=2*(e*c-d*b);-1>f?f=-1:1<f&&(f=1);return{x:Math.atan2(2*(e*b+c*d),1-2*(b*b+c*c))*a,y:Math.asin(f)*a,z:Math.atan2(2*(e*d+b*c),1-2*(c*c+d*d))*a}};SEA3D.AnimationFrame.prototype.toEuler=function(){return this.toAngles(SEA3D.Math.DEGREES)};
SEA3D.AnimationFrame.prototype.toRadians=function(){return this.toAngles(1)};SEA3D.AnimationFrame.prototype.setX=function(a){this.data[0]=a};SEA3D.AnimationFrame.prototype.getX=function(){return this.data[0]};SEA3D.AnimationFrame.prototype.setY=function(a){this.data[1]=a};SEA3D.AnimationFrame.prototype.getY=function(){return this.data[1]};SEA3D.AnimationFrame.prototype.setZ=function(a){this.data[2]=a};SEA3D.AnimationFrame.prototype.getZ=function(){return this.data[2]};
SEA3D.AnimationFrame.prototype.setW=function(a){this.data[3]=a};SEA3D.AnimationFrame.prototype.getW=function(){return this.data[3]};SEA3D.AnimationData=function(a,b,c,d){this.kind=a;this.type=b;this.blockLength=SEA3D.DataTable.sizeOf(b);this.data=c;this.offset=void 0==d?0:d;switch(this.blockLength){case 1:this.getData=this.getData1x;break;case 2:this.getData=this.getData2x;break;case 3:this.getData=this.getData3x;break;case 4:this.getData=this.getData4x}};
SEA3D.AnimationData.prototype.getData1x=function(a,b){a=this.offset+a*this.blockLength;b[0]=this.data[a]};SEA3D.AnimationData.prototype.getData2x=function(a,b){a=this.offset+a*this.blockLength;b[0]=this.data[a];b[1]=this.data[a+1]};SEA3D.AnimationData.prototype.getData3x=function(a,b){a=this.offset+a*this.blockLength;b[0]=this.data[a];b[1]=this.data[a+1];b[2]=this.data[a+2]};
SEA3D.AnimationData.prototype.getData4x=function(a,b){a=this.offset+a*this.blockLength;b[0]=this.data[a];b[1]=this.data[a+1];b[2]=this.data[a+2];b[3]=this.data[a+3]};
SEA3D.AnimationNode=function(a,b,c,d,e){this.name=a;this.frameRate=b;this.frameMill=1E3/b;this.numFrames=c;this.length=c-1;this.time=0;this.duration=this.length*this.frameMill;this.repeat=d;this.intrpl=e;this.invalidState=!0;this.dataList=[];this.dataListId={};this.buffer=new SEA3D.AnimationFrame;this.frame=this.nextFrame=this.prevFrame=this.percent=0};
SEA3D.AnimationNode.prototype.setTime=function(a){this.frame=this.validFrame(a/this.frameMill);this.time=this.frame*this.frameRate;this.invalidState=!0};SEA3D.AnimationNode.prototype.getTime=function(){return this.time};SEA3D.AnimationNode.prototype.setFrame=function(a){this.setTime(a*this.frameMill)};SEA3D.AnimationNode.prototype.getRealFrame=function(){return Math.floor(this.frame)};SEA3D.AnimationNode.prototype.getFrame=function(){return this.frame};
SEA3D.AnimationNode.prototype.setPosition=function(a){this.setFrame(a*(this.numFrames-1))};SEA3D.AnimationNode.prototype.getPosition=function(){return this.frame/(this.numFrames-1)};SEA3D.AnimationNode.prototype.validFrame=function(a){var b=0>a;b&&(a=-a);a>this.length&&(a=this.repeat?a%this.length:this.length);b&&(a=this.length-a);return a};SEA3D.AnimationNode.prototype.addData=function(a){this.dataListId[a.kind]=a;this.dataList[this.dataList.length]=a};
SEA3D.AnimationNode.prototype.removeData=function(a){delete this.dataListId[a.kind];this.dataList.splice(this.dataList.indexOf(a),1)};SEA3D.AnimationNode.prototype.getDataByKind=function(a){return this.dataListId[a]};SEA3D.AnimationNode.prototype.getFrameAt=function(a,b){this.dataListId[b].getFrameData(a,this.buffer.data);return this.buffer};SEA3D.AnimationNode.prototype.getFrame=function(a){this.dataListId[a].getFrameData(this.getRealFrame(),this.buffer.data);return this.buffer};
SEA3D.AnimationNode.prototype.getInterpolationFrame=function(a,b){if(0==this.numFrames)return this.buffer;this.invalidState&&(this.prevFrame=this.getRealFrame(),this.nextFrame=this.validFrame(this.prevFrame+1),this.percent=this.frame-this.prevFrame,this.invalidState=!1);a.getData(this.prevFrame,this.buffer.data);0<this.percent&&(a.getData(this.nextFrame,SEA3D.AnimationNode.FRAME_BUFFER),b(this.buffer.data,SEA3D.AnimationNode.FRAME_BUFFER,this.percent));return this.buffer};
SEA3D.AnimationNode.FRAME_BUFFER=[0,0,0,0];SEA3D.AnimationSet=function(){this.animations=[];this.dataCount=-1};SEA3D.AnimationSet.prototype.addAnimation=function(a){-1==this.dataCount&&(this.dataCount=a.dataList.length);this.animations[a.name]=a;this.animations.push(a)};SEA3D.AnimationSet.prototype.getAnimationByName=function(a){return this.animations[a]};SEA3D.AnimationState=function(a){this.node=a;this.time=this.weight=this.offset=0};
SEA3D.AnimationState.prototype.setTime=function(a){this.node.time=this.time=a};SEA3D.AnimationState.prototype.getTime=function(){return this.time};SEA3D.AnimationState.prototype.setFrame=function(a){this.node.setFrame(a);this.time=this.node.time};SEA3D.AnimationState.prototype.getFrame=function(){this.update();return this.node.getFrame()};SEA3D.AnimationState.prototype.setPosition=function(a){this.node.setPosition(a);this.time=this.node.time};
SEA3D.AnimationState.prototype.getPosition=function(){this.update();return this.node.getPosition()};SEA3D.AnimationState.prototype.update=function(){this.node.time!=this.time&&this.node.setTime(this.time)};
SEA3D.AnimationHandler=function(a){this.animationSet=a;this.states=SEA3D.AnimationHandler.stateFromAnimations(a.animations);this.timeScale=1;this.time=0;this.numAnimation=a.animations.length;this.playing=this.relative=!1;this.delta=0;this.easeSpeed=2;this.crossfade=0;this.updateAllStates=!1;this.blendMethod=SEA3D.AnimationBlendMethod.LINEAR};SEA3D.AnimationHandler.prototype.update=function(a){this.delta=a;this.time+=a*this.timeScale;this.updateState();this.updateAnimation()};
SEA3D.AnimationHandler.prototype.updateState=function(){var a,b;this.currentState.node.setTime(this.time-this.currentState.offset);if(1>this.currentState.weight&&0<this.crossfade){var c=Math.abs(this.delta)/(1E3*this.crossfade),d=1;this.blendMethod===SEA3D.AnimationBlendMethod.EASING&&(c*=this.easeSpeed);for(a=0;a<this.states.length;++a)b=this.states[a],b!==this.currentState&&(this.blendMethod===SEA3D.AnimationBlendMethod.LINEAR?b.weight-=c:this.blendMethod===SEA3D.AnimationBlendMethod.EASING&&(b.weight-=
b.weight*c),0>b.weight&&(b.weight=0),d-=b.weight,this.updateAllStates&&b.node.setTime(this.time-b.offset));0>d&&(d=0);this.currentState.weight=d}else for(a=0;a<this.states.length;++a)b=this.states[a],b===this.currentState?b.weight=1:(b.weight=0,this.updateAllStates&&b.node.setTime(this.time))};
SEA3D.AnimationHandler.prototype.updateAnimation=function(){for(var a=this.animationSet.dataCount,b=this.animationSet.animations,c=this.currentState.node,d=0;d<a;d++)for(var e=0;e<b.length;e++){var f=b[e],g=this.states[e],h=f.dataList[d],l=SEA3D.Animation.DefaultLerpFuncs[h.kind],n;if(0==e&&(n=c.getInterpolationFrame(c.dataList[d],l),!c.repeat&&c.frame==c.numFrames-1&&this.onComplete))this.onComplete(this);f!=c&&0<g.weight&&l(n.data,f.getInterpolationFrame(h,l).data,g.weight);this.updateAnimationFrame&&
this.updateAnimationFrame(n,h.kind)}};SEA3D.AnimationHandler.prototype.getStateByName=function(a){return this.states[a]};SEA3D.AnimationHandler.prototype.getStateNameByIndex=function(a){return this.animationSet.animations[a].name};
SEA3D.AnimationHandler.prototype.play=function(a,b,c){this.currentState=this.getStateByName(a);if(!this.currentState)throw Error('Animation "'+a+'" not found.');this.crossfade=b;this.currentState.offset=this.time;void 0!==c&&(this.currentState.time=c);this.playing||(SEA3D.AnimationHandler.add(this),this.playing=!0)};SEA3D.AnimationHandler.prototype.resume=function(){this.playing||(SEA3D.AnimationHandler.add(this),this.playing=!0)};
SEA3D.AnimationHandler.prototype.pause=function(){this.playing&&(SEA3D.AnimationHandler.remove(this),this.playing=!1)};SEA3D.AnimationHandler.prototype.stop=function(){this.time=0;this.pause()};SEA3D.AnimationHandler.prototype.setRelative=function(a){this.relative=a};SEA3D.AnimationHandler.prototype.getRelative=function(){return this.relative};SEA3D.AnimationHandler.add=function(a){SEA3D.AnimationHandler.animations.push(a)};
SEA3D.AnimationHandler.remove=function(a){SEA3D.AnimationHandler.animations.splice(SEA3D.AnimationHandler.animations.indexOf(a),1)};SEA3D.AnimationHandler.stateFromAnimations=function(a){for(var b=[],c=0;c<a.length;c++)b[a[c].name]=b[c]=new SEA3D.AnimationState(a[c]);return b};SEA3D.AnimationHandler.update=function(a){for(var b=0,c=SEA3D.AnimationHandler.animations.length;b<c;b++)SEA3D.AnimationHandler.animations[b].update(1E3*a)};
SEA3D.AnimationHandler.setTime=function(a){for(var b=0,c=SEA3D.AnimationHandler.animations.length;b<c;b++)SEA3D.AnimationHandler.animations[b].time=a};SEA3D.AnimationHandler.stop=function(){for(;SEA3D.AnimationHandler.animations.length;)SEA3D.AnimationHandler.animations[0].stop()};SEA3D.AnimationHandler.animations=[];SEA3D.Object=function(a,b,c,d){this.name=a;this.data=b;this.type=c;this.sea=d};
SEA3D.GeometryBase=function(a){var b=a.data;a.attrib=b.readUShort();a.isBigMesh=0!=(a.attrib&1);b.readVInt=a.isBigMesh?b.readUInt:b.readUShort;a.numVertex=b.readVInt();a.length=3*a.numVertex};
SEA3D.Geometry=function(a,b,c){var d,e;this.name=a;this.data=b;this.sea=c;SEA3D.GeometryBase(this);if(this.attrib&4)for(this.normal=[],a=0;a<this.length;)this.normal[a++]=b.readFloat();if(this.attrib&8)for(this.tangent=[],a=0;a<this.length;)this.tangent[a++]=b.readFloat();if(this.attrib&32)for(this.uv=[],this.uv.length=b.readUByte(),e=2*this.numVertex,a=0;a<this.uv.length;)for(this.uv[a++]=d=[],c=0;c<e;)d[c++]=b.readFloat();if(this.attrib&64){this.jointPerVertex=b.readUByte();c=this.numVertex*this.jointPerVertex;
this.joint=[];this.weight=[];for(a=0;a<c;)this.joint[a++]=b.readUShort();for(a=0;a<c;)this.weight[a++]=b.readFloat()}if(this.attrib&128)for(a=b.readUByte(),d=((a&64)>>6|(a&128)>>6)+1,e=4*this.numVertex,this.color=[],this.color.length=a&15,a=0;a<this.color.length;a++){var f=[];switch(d){case 1:for(c=0;c<e;)f[c++]=b.readUnsignedByte()/255,f[c++]=0,f[c++]=0,f[c++]=1;break;case 2:for(c=0;c<e;)f[c++]=b.readUnsignedByte()/255,f[c++]=b.readUnsignedByte()/255,f[c++]=0,f[c++]=1;break;case 3:for(c=0;c<e;)f[c++]=
b.readUnsignedByte()/255,f[c++]=b.readUnsignedByte()/255,f[c++]=b.readUnsignedByte()/255,f[c++]=1;break;case 4:for(c=0;c<e;)f[c++]=b.readUnsignedByte()/255,f[c++]=b.readUnsignedByte()/255,f[c++]=b.readUnsignedByte()/255,f[c++]=b.readUnsignedByte()/255}this.color[a]=f}this.vertex=[];for(a=0;a<this.length;)this.vertex[a++]=b.readFloat();this.indexes=[];this.indexes.length=b.readUByte();for(a=0;a<this.indexes.length;a++)for(e=3*b.readVInt(),this.indexes[a]=d=[],c=0;c<e;)d[c++]=b.readVInt()};
SEA3D.Geometry.prototype.type="geo";
SEA3D.GeometryDelta=function(a,b,c){var d,e,f,g;this.name=a;this.data=b;this.sea=c;this.attrib=b.readUShort();this.numVertex=b.readUInteger();this.length=3*this.numVertex;this.attrib&1?(e=function(){return b.readByte()},f=127.5):(e=function(){return b.readShort()},f=32767.5);if(this.attrib&4)for(d=b.readFloat(),this.normal=[],a=0;a<this.length;)this.normal[a++]=e()/f*d;if(this.attrib&8)for(d=b.readFloat(),this.tangent=[],a=0;a<this.length;)this.tangent[a++]=e()/f*d;if(this.attrib&32){this.uv=[];this.uv.length=
b.readUByte();var h=2*this.numVertex;for(a=0;a<this.uv.length;)for(d=b.readFloat(),this.uv[a++]=g=[],c=0;c<h;)g[c++]=e()/f*d}if(this.attrib&64){this.jointPerVertex=b.readUByte();c=this.numVertex*this.jointPerVertex;this.joint=[];this.weight=[];for(a=0;a<c;)this.joint[a++]=b.readUInteger();for(a=0;a<c;)this.weight[a++]=e()/f*1}if(this.attrib&128)for(a=b.readUByte(),d=((a&64)>>6|(a&128)>>6)+1,g=4*this.numVertex,this.color=[],this.color.length=a&15,a=0;a<this.color.length;a++){h=[];switch(d){case 1:for(c=
0;c<g;)h[c++]=b.readUnsignedByte()/255,h[c++]=0,h[c++]=0,h[c++]=1;break;case 2:for(c=0;c<g;)h[c++]=b.readUnsignedByte()/255,h[c++]=b.readUnsignedByte()/255,h[c++]=0,h[c++]=1;break;case 3:for(c=0;c<g;)h[c++]=b.readUnsignedByte()/255,h[c++]=b.readUnsignedByte()/255,h[c++]=b.readUnsignedByte()/255,h[c++]=1;break;case 4:for(c=0;c<g;)h[c++]=b.readUnsignedByte()/255,h[c++]=b.readUnsignedByte()/255,h[c++]=b.readUnsignedByte()/255,h[c++]=b.readUnsignedByte()/255}this.color[a]=h}d=b.readFloat();this.vertex=
[];for(a=0;a<this.length;)this.vertex[a++]=e()/f*d;this.indexes=[];this.indexes.length=b.readUByte();if(this.attrib&2)for(a=0;a<this.indexes.length;a++)for(f=b.readUInteger(),this.indexes[a]=e=[],c=0;c<f;c++){d=b.readUInteger();g=b.readUInteger();var h=b.readUInteger(),l=b.readUInteger();e.push(d);e.push(g);e.push(h);0<l&&(e.push(h),e.push(l+1),e.push(d))}else for(f=3*b.readUInteger(),a=0;a<this.indexes.length;a++)for(this.indexes[a]=e=[],c=0;c<f;)e[c++]=b.readUInteger()};
SEA3D.GeometryDelta.prototype.type="geDL";
SEA3D.Object3D={read:function(a){var b=a.data;a.isStatic=!1;a.attrib=b.readUShort();a.tags=[];a.attrib&1&&(a.parent=a.sea.getObject(b.readUInt()));a.attrib&2&&(a.animations=SEA3D.Animation.readAnimationList(b,a.sea));a.attrib&4&&(a.scripts=SEA3D.Script.readScriptList(b,a.sea));a.attrib&16&&(a.properties=a.sea.getObject(b.readUInt()));a.attrib&32&&(b=b.readUByte(),a.isStatic=b&1)},readTags:function(a,b){for(var c=a.data,d=c.readUByte(),e=0;e<d;++e){c.readUShort();var f=c.readUInt();c.position+=f}}};
SEA3D.Entity3D={read:function(a){SEA3D.Object3D.read(a);var b=a.data;a.castShadows=!0;a.attrib&64&&(b=b.readUByte(),a.castShadows=0==(b&1))},readTags:function(a,b){SEA3D.Object3D.readTags(a,b)}};SEA3D.Sound3D={read:function(a){SEA3D.Object3D.read(a);var b=a.data,c=a.sea;a.autoPlay=0!=(a.attrib&64);a.attrib&128&&(a.mixer=c.getObject(b.readUInt()));a.sound=c.getObject(b.readUInt());a.volume=b.readFloat()},readTags:function(a,b){SEA3D.Object3D.readTags(a,b)}};
SEA3D.SoundPoint=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Sound3D.read(this);this.position=b.readVector3();this.distance=b.readFloat();SEA3D.Sound3D.readTags(this)};SEA3D.SoundPoint.prototype.type="sp";SEA3D.Container3D=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Object3D.read(this);this.transform=b.readMatrix();SEA3D.Object3D.readTags(this)};SEA3D.Container3D.prototype.type="c3d";SEA3D.TextureURL=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.url=b.readUTF(b.length)};
SEA3D.TextureURL.prototype.type="urlT";
SEA3D.Actions=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.count=b.readUInt();this.action=[];for(a=0;a<this.count;a++){var d=b.readUByte(),e=b.readUShort(),f=b.readUShort(),g=b.position,h=this.action[a]={kind:e};d&1&&(h.range=[b.readUInt(),b.readUInt()]);d&2&&(h.time=b.readUInt());d&4&&(h.intrpl=SEA3D.DataTable.INTERPOLATION_TABLE[b.readUByte()],0==h.intrpl.indexOf("back.")?h.intrplParam0=b.readFloat():0==h.intrpl.indexOf("elastic.")&&(h.intrplParam0=b.readFloat(),h.intrplParam1=b.readFloat()));
switch(e){case SEA3D.Actions.RTT_TARGET:h.source=c.getObject(b.readUInt());h.target=c.getObject(b.readUInt());break;case SEA3D.Actions.LOOK_AT:h.source=c.getObject(b.readUInt());h.target=c.getObject(b.readUInt());break;case SEA3D.Actions.PLAY_SOUND:h.sound=c.getObject(b.readUInt());h.offset=b.readUInt();break;case SEA3D.Actions.PLAY_ANIMATION:h.object=c.getObject(b.readUInt());h.name=b.readUTF8();break;case SEA3D.Actions.FOG:h.color=b.readUInt24();h.min=b.readFloat();h.max=b.readFloat();break;case SEA3D.Actions.ENVIRONMENT:h.texture=
c.getObject(b.readUInt());break;case SEA3D.Actions.ENVIRONMENT_COLOR:h.color=b.readUInt24();break;case SEA3D.Actions.CAMERA:h.camera=c.getObject(b.readUInt());break;default:console.log('Action "'+e+'" not found.')}b.position=g+f}};SEA3D.Actions.SCENE=0;SEA3D.Actions.ENVIRONMENT_COLOR=1;SEA3D.Actions.ENVIRONMENT=2;SEA3D.Actions.FOG=3;SEA3D.Actions.PLAY_ANIMATION=4;SEA3D.Actions.PLAY_SOUND=5;SEA3D.Actions.ANIMATION_AUDIO_SYNC=6;SEA3D.Actions.LOOK_AT=7;SEA3D.Actions.RTT_TARGET=8;
SEA3D.Actions.CAMERA=9;SEA3D.Actions.prototype.type="act";
SEA3D.Script={DETAILED:!1,readScriptList:function(a,b){for(var c=[],d=a.readUByte(),e=0;e<d;){var f=a.readUByte(),g={};g.priority=f&1|f&2;if(f&4){var h,l,d=a.readUByte();if(SEA3D.Script.DETAILED)for(g.params=[],h=0;h<d;h++){l=a.readUTF8();var n=a.readUByte();g.params[h]={name:l,type:n,data:SEA3D.DataTable.readToken(n,a)}}else for(g.params={},h=0;h<d;h++)l=a.readUTF8(),g.params[l]=SEA3D.DataTable.readObject(a)}f&8&&(g.method=a.readUTF8());g.tag=b.getObject(a.readUInt());c[e++]=g}return c}};
SEA3D.JavaScript=function(a,b,c){this.name=a;this.data=b;this.sea=c};SEA3D.JavaScript.prototype.type="js";SEA3D.Dummy=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Object3D.read(this);this.transform=b.readMatrix();this.width=b.readFloat();this.height=b.readFloat();this.depth=b.readFloat();SEA3D.Object3D.readTags(this)};SEA3D.Dummy.prototype.type="dmy";
SEA3D.Line=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Object3D.read(this);this.count=3*(this.attrib&64?b.readUInt():b.readUShort());this.closed=0!=(this.attrib&128);this.transform=b.readMatrix();this.vertex=[];for(a=0;a<this.count;)this.vertex[a++]=b.readFloat();SEA3D.Object3D.readTags(this)};SEA3D.Line.prototype.type="line";SEA3D.PlanarRender=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.attrib=b.readUByte();this.quality=this.attrib&1|this.attrib&2;this.transform=b.readMatrix()};
SEA3D.PlanarRender.prototype.type="rttp";SEA3D.CubeRender=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.attrib=b.readUByte();this.quality=this.attrib&1|this.attrib&2;this.position=b.readVector3()};SEA3D.CubeRender.prototype.type="rttc";SEA3D.Mesh2D=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Object3D.read(this);this.attrib&256&&(this.material=c.getObject(b.readUInt()));this.position=b.readVector3();this.width=b.readFloat();this.height=b.readFloat();SEA3D.Object3D.readTags(this)};
SEA3D.Mesh2D.prototype.type="m2d";
SEA3D.Mesh=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Entity3D.read(this);if(this.attrib&256)if(this.material=[],a=b.readUByte(),1==a)this.material[0]=c.getObject(b.readUInt());else for(var d=0;d<a;){var e=b.readUInt();0<e?this.material[d++]=c.getObject(e-1):this.material[d++]=void 0}if(this.attrib&512)for(this.modifiers=[],a=b.readUByte(),d=0;d<a;d++)this.modifiers[d]=c.getObject(b.readUInt());this.transform=b.readMatrix();this.geometry=c.getObject(b.readUInt());SEA3D.Entity3D.readTags(this)};
SEA3D.Mesh.prototype.type="m3d";SEA3D.Skeleton=function(a,b,c){this.name=a;this.data=b;this.sea=c;a=b.readUShort();this.joint=[];for(c=0;c<a;c++)this.joint[c]={name:b.readUTF8(),parentIndex:b.readUShort()-1,inverseBindMatrix:b.readMatrix()}};SEA3D.Skeleton.prototype.type="skl";
SEA3D.SkeletonLocal=function(a,b,c){this.name=a;this.data=b;this.sea=c;a=b.readUShort();this.joint=[];for(c=0;c<a;c++)this.joint[c]={name:b.readUTF8(),parentIndex:b.readUShort()-1,x:b.readFloat(),y:b.readFloat(),z:b.readFloat(),qx:b.readFloat(),qy:b.readFloat(),qz:b.readFloat(),qw:b.readFloat(),sx:b.readFloat(),sy:b.readFloat(),sz:b.readFloat()}};SEA3D.SkeletonLocal.prototype.type="sklq";
SEA3D.AnimationBase={read:function(a){var b=a.data,c=b.readUByte();a.sequence=[];if(c&1)for(var d=b.readUShort(),e=0;e<d;e++)c=b.readUByte(),a.sequence[e]={name:b.readUTF8(),start:b.readUInt(),count:b.readUInt(),repeat:0!=(c&1),intrpl:0!=(c&2)};a.frameRate=b.readUByte();a.numFrames=b.readUInt();0==a.sequence.length&&(a.sequence[0]={name:"root",start:0,count:a.numFrames,repeat:!0,intrpl:!0})}};
SEA3D.Animation=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.AnimationBase.read(this);this.dataList=[];this.dataList.length=b.readUByte();for(a=0;a<this.dataList.length;a++){c=b.readUShort();var d=b.readUByte(),e=[];SEA3D.DataTable.readVector(d,b,e,this.numFrames,0);this.dataList[a]={kind:c,type:d,blockSize:SEA3D.DataTable.sizeOf(d),data:e}}};SEA3D.Animation.POSITION=0;SEA3D.Animation.ROTATION=1;SEA3D.Animation.SCALE=2;SEA3D.Animation.COLOR=3;SEA3D.Animation.MULTIPLIER=4;
SEA3D.Animation.ATTENUATION_START=5;SEA3D.Animation.ATTENUATION_END=6;SEA3D.Animation.FOV=7;SEA3D.Animation.OFFSET_U=8;SEA3D.Animation.OFFSET_V=9;SEA3D.Animation.SCALE_U=10;SEA3D.Animation.SCALE_V=11;SEA3D.Animation.ANGLE=12;SEA3D.Animation.ALPHA=13;SEA3D.Animation.VOLUME=14;
SEA3D.Animation.DefaultLerpFuncs=[SEA3D.Math.lerp3x,SEA3D.Math.lerpQuat4x,SEA3D.Math.lerp3x,SEA3D.Math.lerpColor1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x,SEA3D.Math.lerpAng1x,SEA3D.Math.lerp1x,SEA3D.Math.lerp1x];
SEA3D.Animation.readAnimationList=function(a,b){for(var c=[],d=a.readUByte(),e=0;e<d;){var f=a.readUByte(),g={};g.relative=0!=(f&1);f&2&&(g.timeScale=a.readFloat());g.tag=b.getObject(a.readUInt());c[e++]=g}return c};SEA3D.Animation.prototype.type="anm";
SEA3D.SkeletonAnimation=function(a,b,c){this.name=a;this.data=b;this.sea=c;var d,e;SEA3D.AnimationBase.read(this);d=b.readUShort();this.pose=[];for(a=0;a<this.numFrames;a++){e=[];e.length=d;for(c=0;c<d;c++)e[c]={x:b.readFloat(),y:b.readFloat(),z:b.readFloat(),qx:b.readFloat(),qy:b.readFloat(),qz:b.readFloat(),qw:b.readFloat()};this.pose[a]=e}};SEA3D.SkeletonAnimation.prototype.type="skla";
SEA3D.Morph=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.GeometryBase(this);a=0!=(this.attrib&2);c=0!=(this.attrib&4);var d=3*this.numVertex,e=b.readUShort();this.node=[];for(var f=0;f<e;f++){var g=b.readUTF8();if(a)for(var h=[],l=0;l<d;)h[l++]=b.readFloat();if(c)for(var n=[],l=0;l<d;)n[l++]=b.readFloat();this.node[f]={vertex:h,normal:n,name:g}}};SEA3D.Morph.prototype.type="mph";
SEA3D.Camera=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Object3D.read(this);this.attrib&64&&(this.dof={distance:b.readFloat(),range:b.readFloat()});this.transform=b.readMatrix();this.fov=b.readFloat();SEA3D.Object3D.readTags(this)};SEA3D.Camera.prototype.type="cam";SEA3D.JointObject=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Object3D.read(this);this.target=c.getObject(b.readUInt());this.joint=b.readUShort();this.transform=b.readMatrix();this.fov=b.readFloat();SEA3D.Object3D.readTags(this)};
SEA3D.JointObject.prototype.type="jnt";SEA3D.Light={read:function(a){SEA3D.Object3D.read(a);var b=a.data;if(a.attrib&64){var c=b.readUByte();a.shadow={};a.shadow.opacity=c&1?b.readFloat():1;a.shadow.color=c&2?b.readUInt24():0}a.color=b.readUInt24();a.multiplier=b.readFloat()}};SEA3D.PointLight=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Light.read(this);this.attrib&128&&(this.attenuation={start:b.readFloat(),end:b.readFloat()});this.position=b.readVector3();SEA3D.Object3D.readTags(this)};
SEA3D.PointLight.prototype.type="plht";SEA3D.DirectionalLight=function(a,b,c){this.name=a;this.data=b;this.sea=c;SEA3D.Light.read(this);this.transform=b.readMatrix();SEA3D.Object3D.readTags(this)};SEA3D.DirectionalLight.prototype.type="dlht";
SEA3D.Material=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.technique=[];this.attrib=b.readUShort();this.alpha=1;this.blendMode="normal";this.alphaThreshold=.5;this.bothSides=0!=(this.attrib&1);this.receiveLights=0==(this.attrib&2);this.receiveShadows=0==(this.attrib&4);this.receiveFog=0==(this.attrib&8);this.smooth=0==(this.attrib&16);this.attrib&32&&(this.alpha=b.readFloat());this.attrib&64&&(this.blendMode=b.readBlendMode());this.attrib&128&&(this.animations=SEA3D.Animation.readAnimationList(b,
c));this.depthMask=0==(this.attrib&256);a=b.readUByte();for(var d=0;d<a;++d){var e=b.readUShort(),f=b.readUShort(),g=b.position,h;switch(e){case SEA3D.Material.DEFAULT:h={ambientColor:b.readUInt24(),diffuseColor:b.readUInt24(),specularColor:b.readUInt24(),specular:b.readFloat(),gloss:b.readFloat()};break;case SEA3D.Material.COMPOSITE_TEXTURE:h={composite:c.getObject(b.readUInt())};break;case SEA3D.Material.DIFFUSE_MAP:h={texture:c.getObject(b.readUInt())};break;case SEA3D.Material.SPECULAR_MAP:h=
{texture:c.getObject(b.readUInt())};break;case SEA3D.Material.NORMAL_MAP:h={texture:c.getObject(b.readUInt())};break;case SEA3D.Material.REFLECTION:case SEA3D.Material.FRESNEL_REFLECTION:h={texture:c.getObject(b.readUInt()),alpha:b.readFloat()};e==SEA3D.Material.FRESNEL_REFLECTION&&(h.power=b.readFloat(),h.normal=b.readFloat());break;case SEA3D.Material.REFRACTION:h={texture:c.getObject(b.readUInt()),alpha:b.readFloat(),ior:b.readFloat()};break;case SEA3D.Material.RIM:h={color:b.readUInt24(),strength:b.readFloat(),
power:b.readFloat(),blendMode:b.readBlendMode()};break;case SEA3D.Material.LIGHT_MAP:h={texture:c.getObject(b.readUInt()),channel:b.readUByte(),blendMode:b.readBlendMode()};break;case SEA3D.Material.DETAIL_MAP:h={texture:c.getObject(b.readUInt()),scale:b.readFloat(),blendMode:b.readBlendMode()};break;case SEA3D.Material.CEL:h={color:b.readUInt24(),levels:b.readUByte(),size:b.readFloat(),specularCutOff:b.readFloat(),smoothness:b.readFloat()};break;case SEA3D.Material.TRANSLUCENT:h={color:b.readUInt24(),
translucency:b.readFloat(),scattering:b.readFloat()};break;case SEA3D.Material.BLEND_NORMAL_MAP:var l=b.readUByte();h={texture:c.getObject(b.readUInt()),secondaryTexture:c.getObject(b.readUInt())};l&1?(h.offsetX0=b.readFloat(),h.offsetY0=b.readFloat(),h.offsetX1=b.readFloat(),h.offsetY1=b.readFloat()):h.offsetX0=h.offsetY0=h.offsetX1=h.offsetY1=0;h.animate=l&2;break;case SEA3D.Material.MIRROR_REFLECTION:h={texture:c.getObject(b.readUInt()),alpha:b.readFloat()};break;default:console.warn("MaterialTechnique not found:",
e.toString(16));b.position=g+f;continue}h.kind=e;this.technique.push(h);b.position=g+f}};SEA3D.Material.DEFAULT=0;SEA3D.Material.COMPOSITE_TEXTURE=1;SEA3D.Material.DIFFUSE_MAP=2;SEA3D.Material.SPECULAR_MAP=3;SEA3D.Material.REFLECTION=4;SEA3D.Material.REFRACTION=5;SEA3D.Material.NORMAL_MAP=6;SEA3D.Material.FRESNEL_REFLECTION=7;SEA3D.Material.RIM=8;SEA3D.Material.LIGHT_MAP=9;SEA3D.Material.DETAIL_MAP=10;SEA3D.Material.CEL=11;SEA3D.Material.TRANSLUCENT=12;SEA3D.Material.BLEND_NORMAL_MAP=13;
SEA3D.Material.MIRROR_REFLECTION=14;SEA3D.Material.prototype.type="mat";SEA3D.Composite=function(a,b,c){this.name=a;this.data=b;this.sea=c;a=b.readUByte();this.layer=[];for(c=0;c<a;c++)this.layer[c]=this.readLayer(b,this)};SEA3D.Composite.prototype.getLayerByName=function(a){for(var b=0;b<this.layer.length;b++)if(this.layer[b].name==a)return this.layer[b]};
SEA3D.Composite.prototype.readLayer=function(a,b){this.scope=b;var c={blendMode:"normal",opacity:1},d=a.readUShort();d&1?c.texture=this.readLayerBitmap(a,b):c.color=a.readUInt24();d&2&&(c.mask=this.readLayerBitmap(a,b));d&4&&(c.name=a.readUTF8());d&8&&(c.blendMode=a.readBlendMode());d&16&&(c.opacity=a.readFloat());return c};
SEA3D.Composite.prototype.readLayerBitmap=function(a,b){this.scope=b;var c={channel:0,repeat:!0,offsetU:0,offsetV:0,scaleU:0,scaleV:0,rotation:0};c.map=b.sea.getObject(a.readUInt());var d=a.readUShort();0<d&&(d&1&&(c.channel=a.readUByte()),d&2&&(c.repeat=!1),d&4&&(c.offsetU=a.readFloat()),d&8&&(c.offsetV=a.readFloat()),d&16&&(c.scaleU=a.readFloat()),d&32&&(c.scaleV=a.readFloat()),d&64&&(c.rotation=a.readFloat()),d&128&&(c.animation=SEA3D.Animation.readAnimationList(a,b.sea)));return c};
SEA3D.Composite.prototype.type="ctex";SEA3D.CubeMap=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.transparent=!1;b.readExt();this.faces=[];for(a=0;6>a;a++)c=b.readUInt(),this.faces[a]=b.concat(b.position,c),b.position+=c};SEA3D.CubeMap.prototype.type="cmap";SEA3D.JPEG=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.transparent=!1};SEA3D.JPEG.prototype.type="jpg";SEA3D.JPEG_XR=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.transparent=!0};SEA3D.JPEG_XR.prototype.type="wdp";
SEA3D.PNG=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.transparent=6==b.buffer[25]};SEA3D.PNG.prototype.type="png";SEA3D.GIF=function(a,b,c){this.name=a;this.data=b;this.sea=c;this.transparent=0<b.buffer[11]};SEA3D.GIF.prototype.type="gif";SEA3D.MP3=function(a,b,c){this.name=a;this.data=b;this.sea=c};SEA3D.MP3.prototype.type="mp3";
SEA3D.File=function(a){this.stream=new SEA3D.Stream(a);this.version=SEA3D.VERSION;this.objects=[];this.typeClass={};this.typeRead={};this.position=this.dataPosition=0;this.scope=this;this.timeLimit=60;this.addClass(SEA3D.Geometry);this.addClass(SEA3D.GeometryDelta);this.addClass(SEA3D.Mesh);this.addClass(SEA3D.Mesh2D);this.addClass(SEA3D.Material);this.addClass(SEA3D.Composite);this.addClass(SEA3D.PointLight);this.addClass(SEA3D.DirectionalLight);this.addClass(SEA3D.Skeleton);this.addClass(SEA3D.SkeletonLocal);
this.addClass(SEA3D.SkeletonAnimation);this.addClass(SEA3D.JointObject);this.addClass(SEA3D.Camera);this.addClass(SEA3D.Morph);this.addClass(SEA3D.CubeMap);this.addClass(SEA3D.Animation);this.addClass(SEA3D.Dummy);this.addClass(SEA3D.Line);this.addClass(SEA3D.SoundPoint);this.addClass(SEA3D.PlanarRender);this.addClass(SEA3D.CubeRender);this.addClass(SEA3D.Actions);this.addClass(SEA3D.JavaScript);this.addClass(SEA3D.TextureURL);this.addClass(SEA3D.Container3D);this.addClass(SEA3D.JPEG);this.addClass(SEA3D.JPEG_XR);
this.addClass(SEA3D.PNG);this.addClass(SEA3D.GIF);this.addClass(SEA3D.MP3)};SEA3D.File.CompressionLibs={};SEA3D.File.DecompressionMethod={};SEA3D.File.setDecompressionEngine=function(a,b,c){SEA3D.File.CompressionLibs[a]=b;SEA3D.File.DecompressionMethod[a]=c};SEA3D.File.readStage=function(a){for(;a.stage&&a.stage(););a.stage&&(window.setTimeout(SEA3D.File.readStage,16,a),a.dispatchProgress())};SEA3D.File.prototype.addClass=function(a){this.typeClass[a.prototype.type]=a};
SEA3D.File.prototype.readHead=function(){if(16>this.stream.bytesAvailable())return!1;"SEA"!=this.stream.readUTF(3)&&console.error("Invalid SEA3D format.");var a=this.stream.readUTF(3);"S3D"!=a&&console.warn('Signature "'+a+'" not recognized.');this.version=this.stream.readUInt24();if(0!=this.stream.readUByte())throw Error("Protection algorithm not is compatible.");this.compressionID=this.stream.readUByte();this.compressionAlgorithm=SEA3D.File.CompressionLibs[this.compressionID];this.decompressionMethod=
SEA3D.File.DecompressionMethod[this.compressionID];if(0<this.compressionID&&!this.decompressionMethod)throw Error("Compression algorithm not is compatible.");this.length=this.stream.readUInt();this.dataPosition=this.stream.position;this.objects.length=0;this.stage=this.readBody;return!0};SEA3D.File.prototype.getObject=function(a){return this.objects[a]};
SEA3D.File.prototype.readSEAObject=function(){if(4>this.stream.bytesAvailable())return null;var a=this.stream.readUInt(),b=this.stream.position;if(this.stream.bytesAvailable()<a)return null;var c=this.stream.readUByte(),d=this.stream.readExt(),e=c&1?this.stream.readUTF8():"",f=0!=(c&2),c=0!=(c&4),a=a-(this.stream.position-b),b=this.stream.position,g=this.stream.concat(b,a);c&&this.typeClass[d]?(f&&this.decompressionMethod&&g.set(this.decompressionMethod(g.buffer)),f=new this.typeClass[d](e,g,this),
this.typeRead[d]&&this.typeRead[d].call(this.scope,f)):(f=new SEA3D.Object(e,g,d,this),console.warn('Unknown format "'+d+'" of the file "'+e+'". Add a module referring to the format.'));this.objects.push(this.objects[f.type+"/"+f.name]=f);this.dataPosition=b+a;++this.position;return f};
SEA3D.File.prototype.readBody=function(){for(this.timer.update();this.position<this.length;)if(this.timer.getDeltaTime()<this.timeLimit){this.stream.position=this.dataPosition;var a=this.readSEAObject();if(a)this.dispatchCompleteObject(a);else return!1}else return!1;this.stage=this.readComplete;return!0};SEA3D.File.prototype.readComplete=function(){this.stream.position=this.dataPosition;6202321!=this.stream.readUInt24()&&console.warn("SEA3D file is corrupted.");this.stage=null;this.dispatchComplete()};
SEA3D.File.prototype.read=function(){this.timer=new SEA3D.Timer;this.stage=this.readHead;SEA3D.File.readStage(this)};SEA3D.File.prototype.dispatchCompleteObject=function(a){if(this.onCompleteObject)this.onCompleteObject({file:this,object:a})};SEA3D.File.prototype.dispatchProgress=function(){if(this.onProgress)this.onProgress({file:this,position:this.position,length:this.length,progress:this.position/this.length})};
SEA3D.File.prototype.dispatchDownloadProgress=function(a,b){if(this.onDownloadProgress)this.onDownloadProgress({file:this,position:a,length:b,progress:a/b})};SEA3D.File.prototype.dispatchComplete=function(){var a=this.timer.getElapsedTime(),b=a+"ms, "+this.objects.length+" objects";if(this.onComplete)this.onComplete({file:this,timeTotal:a,message:b});else console.log("SEA3D:",b)};
SEA3D.File.prototype.dispatchError=function(a,b){if(this.onError)this.onError({file:this,id:a,message:b});else console.error("SEA3D: #"+a,b)};
SEA3D.File.prototype.load=function(a){var b=this,c=new XMLHttpRequest;c.open("GET",a,!0);c.responseType="arraybuffer";c.onprogress=function(a){a.lengthComputable&&b.dispatchDownloadProgress(a.loaded,a.total)};c.onreadystatechange=function(){2!==c.readyState&&3!==c.readyState&&4===c.readyState&&(200===c.status||0===c.status?(b.stream.set(new Uint8Array(this.response)),b.read()):this.dispatchError(1001,"Couldn't load ["+a+"] ["+c.status+"]"))};c.send()};var Audio;
THREE.Object3D.prototype.UPDATEMATRIXWORLD=THREE.Object3D.prototype.updateMatrixWorld;THREE.Object3D.prototype.updateMatrixWorld=function(a){this.animateMatrix?(this.UPDATEMATRIXWORLD(a),this.animateMatrix.compose(this.animatePosition,this.animateQuaternion,this.animateScale),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.animateMatrix)):this.UPDATEMATRIXWORLD(a)};
THREE.Object3D.prototype.setAnimateMatrix=function(a){this.getAnimateMatrix()!=a&&(a?(this.animateMatrix=new THREE.Matrix4,this.animatePosition=new THREE.Vector3,this.animateQuaternion=new THREE.Quaternion,this.animateScale=new THREE.Vector3(1,1,1)):(delete this.animateMatrix,delete this.animatePosition,delete this.animateQuaternion,delete this.animateScale),this.matrixWorldNeedsUpdate=!0)};THREE.Object3D.prototype.getAnimateMatrix=function(){return null!=this.animateMatrix};
THREE.Mesh.prototype.setWeight=function(a,b){this.morphTargetInfluences[this.geometry.morphTargets[a]]=b};THREE.Mesh.prototype.getWeight=function(a){return this.morphTargetInfluences[this.geometry.morphTargets[a]]};THREE.Mesh.prototype.DISPOSE=THREE.Mesh.prototype.dispose;THREE.Mesh.prototype.dispose=function(){this.animation&&this.animation.dispose();this.DISPOSE()};THREE.Mesh.prototype.CLONE=THREE.Mesh.prototype.clone;
THREE.Mesh.prototype.clone=function(a){a=THREE.Mesh.prototype.CLONE.call(this,a);a.animation&&(a.animation=this.animation.clone(a));return a};THREE.SkinnedMesh.prototype.stop=function(){this.currentAnimation&&(this.currentAnimation.stop(),this.currentAnimation=null,this.isPlaying=!1)};THREE.SkinnedMesh.prototype.pause=function(){this.isPlaying&&(this.currentAnimation.pause(),this.isPlaying=!1)};
THREE.SkinnedMesh.prototype.resume=function(){!this.isPlaying&&this.currentAnimation&&(this.currentAnimation.pause(),this.isPlaying=!0)};THREE.SkinnedMesh.prototype.isPlaying=!1;
THREE.SkinnedMesh.prototype.play=function(a,b,c){this.currentAnimation&&this.currentAnimation.stop();this.isPlaying=!0;this.previousAnimation=this.currentAnimation;this.currentAnimation=this.animations[a];if(!this.currentAnimation)throw Error('Animation "'+a+'" not found.');this.previousAnimation&&this.previousAnimation!==this.currentAnimation&&0<b?(this.previousAnimation.play(this.previousAnimation.currentTime,this.previousAnimation.weight),this.currentAnimation.play(void 0!==c?c:this.currentAnimation.currentTime,
this.currentAnimation.weight),THREE.AnimationHandler.addCrossfade(this,b)):this.currentAnimation.play(void 0!==c?c:this.currentAnimation.currentTime,1)};THREE.SkinnedMesh.prototype.addAnimations=function(a){this.animations=[];for(var b=0;b<a.length;b++){var c=a[b].name;this.animations[b]=new THREE.Animation(this,a[b]);this.animations[b].loop=a[b].repeat;this.animations[b].name=c;this.animations[c]=this.animations[b]}};THREE.SkinnedMesh.prototype.DISPOSE=THREE.SkinnedMesh.prototype.dispose;
THREE.SkinnedMesh.prototype.dispose=function(){this.stop();this.animations=null;this.DISPOSE()};THREE.SkinnedMesh.prototype.CLONE=THREE.SkinnedMesh.prototype.clone;THREE.SkinnedMesh.prototype.clone=function(a){a=THREE.SkinnedMesh.prototype.CLONE.call(this,a);a.animations=[];for(var b=this.geometry.animations,c=0;c<b.length;c++){var d=b[c].name,e=b[c];e.initialized=!1;a.animations[c]=new THREE.Animation(a,e);a.animations[c].loop=b[c].repeat;a.animations[c].name=d;a.animations[d]=a.animations[c]}return a};
THREE.AnimationHandler.crossfade=[];THREE.AnimationHandler.UPDATE=THREE.AnimationHandler.update;THREE.AnimationHandler.update=function(a){for(var b=0,c=THREE.AnimationHandler.crossfade;b<c.length;){var d=c[b];d.currentAnimation.weight+=a/d.crossfade;if(1<d.currentAnimation.weight){d.currentAnimation.weight=1;if(d.onCrossfadeComplete)d.onCrossfadeComplete(d);c.splice(b,1);delete d.crossfade}else++b;d.previousAnimation.weight=1-d.currentAnimation.weight}THREE.AnimationHandler.UPDATE(a)};
THREE.AnimationHandler.addCrossfade=function(a,b){void 0!==a.crossfade&&THREE.AnimationHandler.crossfade.splice(THREE.AnimationHandler.crossfade.indexOf(a),1);a.crossfade=b;THREE.AnimationHandler.crossfade.push(a)};THREE.Animation.prototype.STOP=THREE.Animation.prototype.stop;THREE.Animation.prototype.stop=function(){if(this.onComplete)this.onComplete(this);this.STOP()};
THREE.Sound3D=function(a,b,c){THREE.Object3D.call(this);this.audio=new Audio;this.audio.src=a;this.audio.load();this.distance=void 0!==c?c:1E3;this.volume=void 0!==b?b:1;this.playing=!1};THREE.Sound3D.prototype=Object.create(THREE.Object3D.prototype);THREE.Sound3D.prototype.loop=!1;
THREE.Sound3D.prototype.play=function(a){void 0!==a&&0<this.audio.duration&&(this.audio.currentTime=a);this.audio.loop=this.loop;this.audio.play();this.playing||(this.index=THREE.Sound3D.sounds.length,THREE.Sound3D.sounds.push(this),this.playing=!0)};THREE.Sound3D.prototype.stop=function(){0<this.audio.duration&&(this.audio.currentTime=0);this.pause()};THREE.Sound3D.prototype.pause=function(){this.audio.pause();this.playing&&(THREE.Sound3D.sounds.splice(this.index,1),this.playing=!1)};
THREE.Sound3D.prototype.update=function(a){var b=new THREE.Vector3;b.setFromMatrixPosition(this.matrixWorld);var c=new THREE.Vector3;c.setFromMatrixPosition(a.matrixWorld);a=b.distanceTo(c);this.audio.volume=Math.max(0,Math.min(1,this.volume*(1-a/(3*this.distance))))};THREE.Sound3D.sounds=[];THREE.Sound3D.update=function(a){for(var b=THREE.Sound3D.sounds,c=0;c<b.length;c++)b[c].update(a)};
THREE.BoneObject=function(a,b){THREE.Object3D.call(this);this.name=b.name;this.bone=b;this.matrix=b.parent instanceof THREE.Bone?b.matrixWorld:b.matrix;this.matrixAutoUpdate=!1;a.add(this)};THREE.BoneObject.fromName=function(a,b){for(var c=0,d=this.bones.length;c<d;c++)if(b==a.bones[c].name)return new THREE.BoneObject(a,b);return null};THREE.BoneObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.BoneObject.prototype.clone=function(a){void 0===a&&(a=new THREE.BoneObject(this.name,this.bone));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.SEA3D=function(a){this.container=void 0;this.invertZ=void 0!=a?!a:!0;this.invertCamera=void 0!=a?a:!1;this.objects={}};
THREE.SEA3D.prototype={constructor:THREE.SEA3D,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent};THREE.SEA3D.AUTO="auto";THREE.SEA3D.DEFAULT="default";THREE.SEA3D.BUFFER="buffer";THREE.SEA3D.backgroundColor=3355443;THREE.SEA3D.helperColor=10140133;THREE.SEA3D.textureSize=512;
THREE.SEA3D.prototype.setShadowMap=function(a,b){a.shadowMapWidth=a.shadowMapHeight=2048;a.castShadow=!0;a.shadowDarkness=void 0!==b?b:1};THREE.SEA3D.prototype.tangent=!0;THREE.SEA3D.prototype.bounding=!0;THREE.SEA3D.prototype.autoPlay=!0;THREE.SEA3D.prototype.emissive=!1;THREE.SEA3D.prototype.matrixAutoUpdate=!0;THREE.SEA3D.prototype.parser=THREE.SEA3D.AUTO;THREE.SEA3D.prototype.getMesh=function(a){return this.objects["m3d/"+a]};
THREE.SEA3D.prototype.getDummy=function(a){return this.objects["dmy/"+a]};THREE.SEA3D.prototype.getLine=function(a){return this.objects["line/"+a]};THREE.SEA3D.prototype.getSound3D=function(a){return this.objects["sn3d/"+a]};THREE.SEA3D.prototype.getMaterial=function(a){return this.objects["mat/"+a]};THREE.SEA3D.prototype.getLight=function(a){return this.objects["lht/"+a]};THREE.SEA3D.prototype.getCamera=function(a){return this.objects["cam/"+a]};
THREE.SEA3D.prototype.getTexture=function(a){return this.objects["tex/"+a]};THREE.SEA3D.prototype.getCubeMap=function(a){return this.objects["cmap/"+a]};THREE.SEA3D.prototype.getJointObject=function(a){return this.objects["jnt/"+a]};THREE.SEA3D.prototype.getSound3D=function(a){return this.objects["sn3d/"+a]};THREE.SEA3D.prototype.getSprite=function(a){return this.objects["m2d/"+a]};THREE.SEA3D.prototype.isPowerOfTwo=function(a){return a?(a&-a)==a:!1};
THREE.SEA3D.prototype.nearestPowerOfTwo=function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2))};THREE.SEA3D.prototype.vectorToVector3=function(a){for(var b=[],c=0,d=0;c<a.length;)b[d++]=new THREE.Vector3(a[c++],a[c++],a[c++]);return b};THREE.SEA3D.prototype.vectorToUV=function(a){for(var b=[],c=0;c<a.length;c++)for(var d=b[c]=[],e=a[c],f=0,g=0;f<e.length;f+=2)d[g++]=new THREE.Vector2(e[f],e[f+1]);return b};THREE.SEA3D.prototype.toVector3=function(a){return new THREE.Vector3(a.x,a.y,a.z)};
THREE.SEA3D.prototype.scaleColor=function(a,b){return(a>>16)*b<<16|(a>>8&255)*b<<8|(a&255)*b};THREE.SEA3D.prototype.updateScene=function(){if(void 0!=this.materials)for(var a=0,b=this.materials.length;a<b;++a)this.materials[a].needsUpdate=!0};
THREE.SEA3D.prototype.applyMatrix=function(a,b,c){c?(c=b.elements,c=new THREE.Matrix4(c[0],c[4],-c[8],c[12],c[1],c[5],-c[9],c[13],c[2],c[6],c[10],c[14],c[3],c[7],c[11],c[15]),a.position.setFromMatrixPosition(b),a.scale.setFromMatrixScale(b),c.scale(new THREE.Vector3(1/a.scale.x,1/a.scale.y,1/a.scale.z)),a.rotation.setFromRotationMatrix(c),a.position.z=-a.position.z,a.scale.z=-a.scale.z):(a.position.setFromMatrixPosition(b),a.scale.setFromMatrixScale(b),b.scale(new THREE.Vector3(1/a.scale.x,1/a.scale.y,
1/a.scale.z)),a.rotation.setFromRotationMatrix(b))};THREE.SEA3D.prototype.updateMatrix=function(a,b){var c=new THREE.Matrix4;c.elements=b.transform;b.isStatic?(this.invertZ?this.applyMatrix(a,c,!b.parent):a.matrix=c,a.matrixAutoUpdate=!1):(this.applyMatrix(a,c,this.invertZ&&!b.parent),a.matrixAutoUpdate=this.matrixAutoUpdate)};THREE.SEA3D.prototype.addSceneObject=function(a){a.parent?a.parent.tag.add(a.tag):this.container&&this.container.add(a.tag)};
THREE.SEA3D.prototype.bufferToTexture=function(a){return"data:image/png;base64,"+SEA3D.Stream.bufferToBase64(a)};THREE.SEA3D.prototype.bufferToSound=function(a){return"data:audio/mp3;base64,"+SEA3D.Stream.bufferToBase64(a)};
THREE.SEA3D.prototype.applyDefaultAnimation=function(a,b){for(var c=a.tag,d=0,e=a.animations?a.animations.length:0;d<e;d++){var f=a.animations[d];switch(f.tag.type){case SEA3D.Animation.prototype.type:return c.animation=new b(c,f.tag.tag),c.animation.setRelative(f.relative),this.autoPlay&&c.animation.play(c.animation.getStateNameByIndex(0)),c.animation}}};
THREE.SEA3D.prototype.readAnimation=function(a){for(var b=new SEA3D.AnimationSet,c=0;c<a.sequence.length;c++){for(var d=a.sequence[c],e=new SEA3D.AnimationNode(d.name,a.frameRate,d.count,d.repeat,d.intrpl),f=0;f<a.dataList.length;f++){var g=a.dataList[f];e.addData(new SEA3D.AnimationData(g.kind,g.type,g.data,d.start*g.blockSize))}b.addAnimation(e)}this.animationSets=this.animationSets||[];this.animationSets.push(this.objects[a.name+".#anm"]=a.tag=b)};
THREE.SEA3D.Object3DAnimator=function(a,b){SEA3D.AnimationHandler.call(this,b);this.object3d=a};THREE.SEA3D.Object3DAnimator.prototype=Object.create(SEA3D.AnimationHandler.prototype);THREE.SEA3D.Object3DAnimator.prototype.STOP=THREE.SEA3D.Object3DAnimator.prototype.stop;THREE.SEA3D.Object3DAnimator.prototype.stop=function(){this.relative&&(this.object3d.animatePosition=new THREE.Vector3,this.object3d.animateQuaternion=new THREE.Quaternion,this.object3d.animateScale=new THREE.Vector3(1,1,1));this.STOP()};
THREE.SEA3D.Object3DAnimator.prototype.setRelative=function(a){this.object3d.setAnimateMatrix(this.relative=a)};
THREE.SEA3D.Object3DAnimator.prototype.updateAnimationFrame=function(a,b){if(this.relative){switch(b){case SEA3D.Animation.POSITION:var c=a.toVector();this.object3d.animatePosition.set(c.x,c.y,c.z);break;case SEA3D.Animation.ROTATION:c=a.toVector();this.object3d.animateQuaternion.set(c.x,c.y,c.z,c.w);break;case SEA3D.Animation.SCALE:c=a.toVector(),this.object3d.animateScale.set(c.x,c.y,c.z)}this.object3d.matrixWorldNeedsUpdate=!0}else switch(b){case SEA3D.Animation.POSITION:c=a.toVector();this.object3d.position.set(c.x,
c.y,c.z);break;case SEA3D.Animation.ROTATION:c=a.toVector();this.object3d.quaternion.set(c.x,c.y,c.z,c.w);break;case SEA3D.Animation.SCALE:c=a.toVector(),this.object3d.scale.set(c.x,c.y,c.z)}};THREE.SEA3D.CameraAnimator=function(a,b){THREE.SEA3D.Object3DAnimator.call(this,a,b)};THREE.SEA3D.CameraAnimator.prototype=Object.create(THREE.SEA3D.Object3DAnimator.prototype);
THREE.SEA3D.CameraAnimator.prototype.updateAnimationFrame=function(a,b){switch(b){case SEA3D.Animation.FOV:this.object3d.fov=a.getX();break;default:this.$updateAnimationFrame(a,b)}};THREE.SEA3D.CameraAnimator.prototype.$updateAnimationFrame=THREE.SEA3D.Object3DAnimator.prototype.updateAnimationFrame;THREE.SEA3D.LightAnimator=function(a,b){THREE.SEA3D.Object3DAnimator.call(this,a,b)};THREE.SEA3D.LightAnimator.prototype=Object.create(THREE.SEA3D.Object3DAnimator.prototype);
THREE.SEA3D.LightAnimator.prototype.updateAnimationFrame=function(a,b){switch(b){case SEA3D.Animation.COLOR:this.object3d.color.setHex(a.getX());break;case SEA3D.Animation.MULTIPLIER:this.object3d.intensity=a.getX();break;default:this.$updateAnimationFrame(a,b)}};THREE.SEA3D.LightAnimator.prototype.$updateAnimationFrame=THREE.SEA3D.Object3DAnimator.prototype.updateAnimationFrame;
THREE.SEA3D.prototype.readGeometrySwitch=function(a){!(65534>a.numVertex)||a.joint||a.uv&&1!==a.uv.length||1!==a.indexes.length?this.readGeometry(a):this.readGeometryBuffer(a)};
THREE.SEA3D.prototype.readGeometryBuffer=function(a){var b=a.indexes[0],c=b.length,d=new THREE.BufferGeometry,e,f,g,h;d.attributes={index:{itemSize:1,array:e=new Uint16Array(c)},position:{itemSize:3,array:f=new Float32Array(3*c)},uv:{itemSize:2,array:h=new Float32Array(2*c)}};var l,n,p,q=a.vertex,m=a.normal,r=a.uv?a.uv[0]:void 0;m&&(d.attributes.normal={itemSize:3,array:g=new Float32Array(3*c)});for(var t=0,s=0,u=0;t<c;t+=3,s+=9,u+=6)l=3*b[t],n=3*b[t+2],p=3*b[t+1],f[s]=q[l],f[s+1]=q[l+1],f[s+2]=q[l+
2],f[s+3]=q[n],f[s+4]=q[n+1],f[s+5]=q[n+2],f[s+6]=q[p],f[s+7]=q[p+1],f[s+8]=q[p+2],m&&(g[s]=m[l],g[s+1]=m[l+1],g[s+2]=m[l+2],g[s+3]=m[n],g[s+4]=m[n+1],g[s+5]=m[n+2],g[s+6]=m[p],g[s+7]=m[p+1],g[s+8]=m[p+2]),r?(l=2*b[t],n=2*b[t+2],p=2*b[t+1],h[u]=r[l],h[u+1]=r[l+1],h[u+2]=r[n],h[u+3]=r[n+1],h[u+4]=r[p],h[u+5]=r[p+1]):(h[u]=0,h[u+1]=0,h[u+2]=0,h[u+3]=1,h[u+4]=1,h[u+5]=1),e[t]=t,e[t+1]=t+1,e[t+2]=t+2;m||d.computeVertexNormals();this.tangent&&!a.tangent&&d.computeTangents();this.bounding&&(d.computeBoundingBox(),
d.computeBoundingSphere());d.name=a.name;a.tag=d};
THREE.SEA3D.prototype.readGeometry=function(a){var b,c,d,e=new THREE.Geometry,f,g;e.vertices=this.vectorToVector3(a.vertex);a.normal&&(f=this.vectorToVector3(a.normal));if(a.uv)for(g=this.vectorToUV(a.uv),d=0;d<g.length;d++)e.faceVertexUvs[d]=[];for(b=0;b<a.indexes.length;b++){var h=a.indexes[b],l=h.length/3;for(c=0;c<l;c++){d=3*c;var n,p,q;n=h[d];q=h[d+1];p=h[d+2];d=new THREE.Face3(n,p,q,f?[f[n],f[p],f[q]]:void 0);d.materialIndex=b;e.faces.push(d);if(g)for(d=0;d<g.length;d++)e.faceVertexUvs[d].push([g[d][n],
g[d][p],g[d][q]]);else e.faceVertexUvs[0].push([new THREE.Vector2(0,0),new THREE.Vector2(0,1),new THREE.Vector2(1,1)])}}if(a.joint)if(f=[0,0,0,0],g=[0,0,0,0],h=a.jointPerVertex,4<h)for(console.warn("WebGLRenderer: Joint Per Vertex can not be greater than 4 (currently "+a.jointPerVertex+"). Using compression for joints."),d=0;d<a.joint.length;d+=h){l=[0];for(c=1;c<h;c++)n=a.weight[d+c],n>a.weight[d+l[0]]?l.unshift(c):l.push(c);n=(1-(a.weight[d+l[0]]+a.weight[d+l[1]]+a.weight[d+l[2]]+a.weight[d+l[3]]))/
4;for(c=0;4>c;c++)b=l[c],f[c]=a.joint[d+b],g[c]=a.weight[d+b]+n;e.skinIndices.push(new THREE.Vector4(f[0],f[1],f[2],f[3]));e.skinWeights.push(new THREE.Vector4(g[0],g[1],g[2],g[3]))}else for(d=0;d<a.joint.length;d+=h){for(c=0;c<h;c++)f[c]=a.joint[d+c],g[c]=a.weight[d+c];e.skinIndices.push(new THREE.Vector4(f[0],f[1],f[2],f[3]));e.skinWeights.push(new THREE.Vector4(g[0],g[1],g[2],g[3]))}a.normal||(e.computeFaceNormals(),e.computeVertexNormals());this.tangent&&!a.tangent&&e.computeTangents();this.bounding&&
(e.computeBoundingBox(),e.computeBoundingSphere());e.name=a.name;a.tag=e};THREE.SEA3D.prototype.readDummy=function(a){var b=new THREE.BoxGeometry(a.width,a.height,a.depth,1,1,1),c=new THREE.MeshBasicMaterial({wireframe:!0,color:THREE.SEA3D.helperColor}),b=new THREE.Mesh(b,c);b.name=a.name;this.dummys=this.dummys||[];this.dummys.push(this.objects["dmy/"+a.name]=a.tag=b);this.updateMatrix(b,a);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.Object3DAnimator)};
THREE.SEA3D.prototype.readLine=function(a){var b=new THREE.Geometry;b.vertices=this.vectorToVector3(a.vertex);a.closed&&b.vertices.push(b.vertices[0]);b=new THREE.Line(b,new THREE.LineBasicMaterial({color:THREE.SEA3D.helperColor,linewidth:3}));b.name=a.name;this.lines=this.lines||[];this.lines.push(this.objects["line/"+a.name]=a.tag=b);this.updateMatrix(b,a);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.Object3DAnimator)};
THREE.SEA3D.prototype.readContainer3D=function(a){var b=new THREE.Object3D;this.containers=this.containers||[];this.containers.push(this.objects["c3d/"+a.name]=a.tag=b);this.updateMatrix(b,a);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.Object3DAnimator)};
THREE.SEA3D.prototype.readMesh2D=function(a){var b;a.material&&(a.material.tag.sprite?b=a.material.tag.sprite:(b=a.material.tag.sprite=new THREE.SpriteMaterial,b.map=a.material.tag.map,b.map.flipY=!0,b.color=this.emissive?a.material.tag.emissive:a.material.tag.ambient,b.opacity=a.material.tag.opacity,b.blending=a.material.tag.blending));b=new THREE.Sprite(b);b.name=a.name;b.scale.set(a.width,a.height,1);b.position.set(a.position.x,a.position.y,this.invertZ&&!a.parent?-a.position.z:a.position.z);this.sprites=
this.sprites||[];this.sprites.push(this.objects["m2d/"+a.name]=a.tag=b);this.addSceneObject(a)};
THREE.SEA3D.prototype.readMesh=function(a){for(var b=a.geometry.tag,c,d,e,f,g=0,h=a.modifiers?a.modifiers.length:0;g<h;g++){var l=a.modifiers[g];switch(l.type){case SEA3D.Skeleton.prototype.type:c=l;b.bones=c.tag;break;case SEA3D.Morph.prototype.type:f=l}}g=0;for(h=a.animations?a.animations.length:0;g<h;g++)switch(l=a.animations[g],l.tag.type){case SEA3D.SkeletonAnimation.prototype.type:e=l.tag,b.animations=this.getSkeletonAnimation(e,c)}if(a.material)if(1<a.material.length){d=[];for(g=0;g<a.material.length;g++)d[g]=
a.material[g].tag,d[g].skinning=null!=c,d[g].morphTargets=null!=f,d[g].morphNormals=!1;d=new THREE.MeshFaceMaterial(d)}else d=a.material[0].tag,d.skinning=null!=c,d.morphTargets=null!=f,d.morphNormals=!1;f&&(b.morphTargets=this.getMorpher(f,a.geometry));c?(c=new THREE.SkinnedMesh(b,d,!1),e&&(c.addAnimations(b.animations),this.autoPlay&&c.play(c.animations[0].name))):c=new THREE.Mesh(b,d);c.name=a.name;c.castShadow=a.castShadows;c.receiveShadow=a.material?a.material[0].receiveShadows:!0;this.meshes=
this.meshes||[];this.meshes.push(this.objects["m3d/"+a.name]=a.tag=c);this.updateMatrix(c,a);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.Object3DAnimator)};
THREE.SEA3D.prototype.readSoundPoint=function(a){var b=new THREE.Sound3D(a.sound.tag,a.volume,a.distance);b.position.set(a.position.x,a.position.y,this.invertZ&&!a.parent?-a.position.z:a.position.z);a.autoPlay&&(b.loop=!0,b.play());b.name=a.name;this.sounds3d=this.sounds3d||[];this.sounds3d.push(this.objects["sn3d/"+a.name]=a.tag=b);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.Object3DAnimator)};
THREE.SEA3D.prototype.readCubeRender=function(a){var b=new THREE.CubeCamera(.1,5E3,THREE.SEA3D.textureSize);b.renderTarget.cubeCamera=b;b.position.set(a.position.x,a.position.y,this.invertZ?-a.position.z:a.position.z);this.cubeRenderers=this.cubeRenderers||[];this.cubeRenderers.push(this.objects["rttc/"+a.name]=a.tag=b.renderTarget);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.Object3DAnimator)};
THREE.SEA3D.prototype.readImage=function(a){var b=new Image,c=new THREE.Texture,d=this;c.name=a.name;c.wrapS=c.wrapT=THREE.RepeatWrapping;c.flipY=!1;b.onload=function(){if(!d.isPowerOfTwo(b.width)||!d.isPowerOfTwo(b.height)){var a=d.nearestPowerOfTwo(b.width),f=d.nearestPowerOfTwo(b.height),g=document.createElement("canvas");g.width=a;g.height=f;g.getContext("2d").drawImage(b,0,0,a,f);b=g}c.image=b;c.needsUpdate=!0};b.src=this.bufferToTexture(a.data.buffer);this.textures=this.textures||[];this.textures.push(this.objects["tex/"+
a.name]=a.tag=c)};THREE.SEA3D.prototype.readCubeMap=function(a){var b=[],c=new THREE.Texture,d=[];d[0]=a.faces[1];d[1]=a.faces[0];d[2]=a.faces[3];d[3]=a.faces[2];d[4]=a.faces[5];d[5]=a.faces[4];b.loadedCount=0;c.name=a.name;c.image=b;c.flipY=!1;for(var e=0,f=d.length;e<f;++e){var g=new Image;b[e]=g;g.onload=function(){6==++b.loadedCount&&(c.needsUpdate=!0)};g.src=this.bufferToTexture(d[e].buffer)}this.cubmaps=this.cubmaps||[];this.cubmaps.push(this.objects["cmap/"+a.name]=a.tag=c)};
THREE.SEA3D.prototype.readSound=function(a){var b=this.bufferToSound(a.data.buffer);this.sounds=this.sounds||[];this.sounds.push(this.objects["snd/"+a.name]=a.tag=b)};THREE.SEA3D.prototype.readTextureURL=function(a){var b=THREE.ImageUtils.loadTexture(a.url);b.name=a.name;b.wrapS=b.wrapT=THREE.RepeatWrapping;b.flipY=!1;this.textures=this.textures||[];this.textures.push(this.objects["tex/"+a.name]=a.tag=b)};
THREE.SEA3D.prototype.blendMode={normal:THREE.NormalBlending,add:THREE.AdditiveBlending,subtract:THREE.SubtractiveBlending,multiply:THREE.MultiplyBlending,screen:THREE.AdditiveBlending};
THREE.SEA3D.prototype.materialTechnique=function(){var a={};a[SEA3D.Material.DEFAULT]=function(a,c){this.emissive?c.emissive.setHex(a.ambientColor):c.ambient.setHex(a.ambientColor);c.color.setHex(a.diffuseColor);c.specular.setHex(this.scaleColor(a.specularColor,a.specular));c.shininess=a.gloss};a[SEA3D.Material.DIFFUSE_MAP]=function(a,c){c.map=a.texture.tag;c.transparent=a.texture.transparent};a[SEA3D.Material.SPECULAR_MAP]=function(a,c){c.specularMap=a.texture.tag};a[SEA3D.Material.NORMAL_MAP]=function(a,
c){c.normalMap=a.texture.tag};a[SEA3D.Material.REFLECTION]=a[SEA3D.Material.FRESNEL_REFLECTION]=function(a,c){c.envMap=a.texture.tag;c.envMap.mapping=new THREE.CubeReflectionMapping;c.combine=THREE.MixOperation;c.reflectivity=a.alpha};a[SEA3D.Material.REFRACTION_MAP]=function(a,c){c.envMap=a.texture.tag;c.envMap.mapping=new THREE.CubeRefractionMapping;c.refractionRatio=a.ior;c.reflectivity=a.alpha};a[SEA3D.Material.REFRACTION_MAP]=function(a,c){c.envMap=a.texture.tag;c.envMap.mapping=new THREE.CubeRefractionMapping;
c.refractionRatio=a.ior;c.reflectivity=a.alpha};a[SEA3D.Material.LIGHT_MAP]=function(a,c){c.lightMap=a.texture.tag};return a}();
THREE.SEA3D.prototype.readMaterial=function(a){var b=new THREE.MeshPhongMaterial;b.name=a.name;b.side=a.bothSides?THREE.DoubleSide:THREE.FrontSide;b.shading=a.smooth?THREE.SmoothShading:THREE.FlatShading;"normal"!=a.blendMode&&this.blendMode[a.blendMode]&&(b.blending=this.blendMode[a.blendMode]);if(1>a.alpha||b.blending>THREE.NormalBlending)b.opacity=a.alpha,b.transparent=!0;for(var c=0;c<a.technique.length;c++){var d=a.technique[c];this.materialTechnique[d.kind]&&this.materialTechnique[d.kind].call(this,
d,b)}b.transparent&&(b.alphaTest=a.alphaThreshold);this.materials=this.materials||[];this.materials.push(this.objects["mat/"+a.name]=a.tag=b)};
THREE.SEA3D.prototype.readPointLight=function(a){var b=new THREE.PointLight(a.color,a.multiplier,void 0!==a.attenuation?a.attenuation.end:void 0);b.name=a.name;b.position.set(a.position.x,a.position.y,this.invertZ&&!a.parent?-a.position.z:a.position.z);a.shadow&&this.setShadowMap(b,a.shadow.opacity);this.lights=this.lights||[];this.lights.push(this.objects["lht/"+a.name]=a.tag=b);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.LightAnimator);this.updateScene()};
THREE.SEA3D.prototype.readDirectionalLight=function(a){var b=new THREE.DirectionalLight(a.color,a.multiplier);b.name=a.name;this.updateMatrix(b,a);a.shadow&&this.setShadowMap(b,a.shadow.opacity);this.lights=this.lights||[];this.lights.push(this.objects["lht/"+a.name]=a.tag=b);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.LightAnimator);this.updateScene()};
THREE.SEA3D.prototype.readCamera=function(a){var b=new THREE.PerspectiveCamera(a.fov);b.name=a.name;this.updateMatrix(b,a);this.invertCamera&&b.scale.set(-1,1,1);this.cameras=this.camera||[];this.cameras.push(this.objects["cam/"+a.name]=a.tag=b);this.addSceneObject(a);this.applyDefaultAnimation(a,THREE.SEA3D.CameraAnimator)};
THREE.SEA3D.prototype.readSkeleton=function(a){var b=[],c=new THREE.Matrix4,d=new THREE.Matrix4,e=new THREE.Vector3,f=new THREE.Quaternion;(new THREE.Matrix4).elements=a.joint[0].inverseBindMatrix;for(var g=0;g<a.joint.length;g++){var h=a.joint[g];c.elements=h.inverseBindMatrix;d=new THREE.Matrix4;d.getInverse(c);-1<h.parentIndex&&(c.elements=a.joint[h.parentIndex].inverseBindMatrix,d.multiplyMatrices(c,d));e.setFromMatrixPosition(d);f.setFromRotationMatrix(d);b[g]={name:h.name,pos:[e.x,e.y,e.z],
rotq:[f.x,f.y,f.z,f.w],parent:h.parentIndex}}a.tag=b};THREE.SEA3D.prototype.readSkeletonLocal=function(a){for(var b=[],c=0;c<a.joint.length;c++){var d=a.joint[c];b[c]={name:d.name,pos:[d.x,d.y,d.z],rotq:[d.qx,d.qy,d.qz,d.qw],parent:d.parentIndex}}a.tag=b};THREE.SEA3D.prototype.readJointObject=function(a){var b=a.target.tag,b=new THREE.BoneObject(b,b.skeleton.bones[a.joint]);b.name=a.name;this.joints=this.joints||[];this.joints.push(this.objects["jnt/"+a.name]=a.tag=b);this.addSceneObject(a)};
THREE.SEA3D.prototype.getSkeletonAnimation=function(a,b){if(a.tag)return a.tag;for(var c=[],d=a.frameRate/1E3,e=[1,1,1],f=0;f<a.sequence.length;f++){for(var g=a.sequence[f],h=g.start,l=h+g.count,g={name:g.name,repeat:g.repeat,fps:a.frameRate,JIT:0,length:d*(g.count-1),hierarchy:[]},n=a.pose[0].length,p=0;p<n;p++){for(var q={parent:b.joint[p].parentIndex,keys:[]},m=q.keys,r=0,t=h;t<l;t++){var s=a.pose[t][p];m.push({time:r,pos:[s.x,s.y,s.z],rot:[s.qx,s.qy,s.qz,s.qw],scl:e});r+=d}g.hierarchy[p]=q}c.push(g)}return a.tag=
c};THREE.SEA3D.prototype.getMorpher=function(a,b){for(var c=[],d=0;d<a.node.length;d++){for(var e=a.node[d],f=[],g=0,h=0;g<b.vertex.length;)f[h++]=new THREE.Vector3(b.vertex[g]+e.vertex[g++],b.vertex[g]+e.vertex[g++],b.vertex[g]+e.vertex[g++]);c[e.name]=d;c[d]={name:e.name,vertices:f}}return c};THREE.SEA3D.Event={PROGRESS:"progress",DOWNLOAD_PROGRESS:"download_progress",COMPLETE:"complete",OBJECT_COMPLETE:"object_complete",ERROR:"error"};
THREE.SEA3D.prototype.onComplete=function(a){a.file=this.scope;a.type=THREE.SEA3D.Event.COMPLETE;a.file.dispatchEvent(a)};THREE.SEA3D.prototype.onProgress=function(a){a.file=this.scope;a.type=THREE.SEA3D.Event.PROGRESS;a.file.dispatchEvent(a)};THREE.SEA3D.prototype.onDownloadProgress=function(a){a.file=this.scope;a.type=THREE.SEA3D.Event.DOWNLOAD_PROGRESS;a.file.dispatchEvent(a)};THREE.SEA3D.prototype.onCompleteObject=function(a){a.file=this.scope;a.type=THREE.SEA3D.Event.OBJECT_COMPLETE;a.file.dispatchEvent(a)};
THREE.SEA3D.prototype.onError=function(a){a.file=this.scope;a.type=THREE.SEA3D.Event.ERROR;a.file.dispatchEvent(a)};THREE.SEA3D.prototype.load=function(a){this.loadBytes();this.file.load(a)};
THREE.SEA3D.prototype.loadBytes=function(a){this.file=new SEA3D.File(a);this.file.scope=this;this.file.onComplete=this.onComplete;this.file.onProgress=this.onProgress;this.file.onCompleteObject=this.onCompleteObject;this.file.onDownloadProgress=this.onDownloadProgress;this.file.onError=this.onError;switch(this.parser){case THREE.SEA3D.AUTO:this.file.typeRead[SEA3D.Geometry.prototype.type]=this.file.typeRead[SEA3D.GeometryDelta.prototype.type]=this.readGeometrySwitch;break;case THREE.SEA3D.BUFFER:this.file.typeRead[SEA3D.Geometry.prototype.type]=
this.file.typeRead[SEA3D.GeometryDelta.prototype.type]=this.readGeometryBuffer;break;default:this.file.typeRead[SEA3D.Geometry.prototype.type]=this.file.typeRead[SEA3D.GeometryDelta.prototype.type]=this.readGeometry}this.file.typeRead[SEA3D.Mesh.prototype.type]=this.readMesh;this.file.typeRead[SEA3D.Mesh2D.prototype.type]=this.readMesh2D;this.file.typeRead[SEA3D.Container3D.prototype.type]=this.readContainer3D;this.file.typeRead[SEA3D.Dummy.prototype.type]=this.readDummy;this.file.typeRead[SEA3D.Line.prototype.type]=
this.readLine;this.file.typeRead[SEA3D.Material.prototype.type]=this.readMaterial;this.file.typeRead[SEA3D.PointLight.prototype.type]=this.readPointLight;this.file.typeRead[SEA3D.DirectionalLight.prototype.type]=this.readDirectionalLight;this.file.typeRead[SEA3D.Camera.prototype.type]=this.readCamera;this.file.typeRead[SEA3D.Skeleton.prototype.type]=this.readSkeleton;this.file.typeRead[SEA3D.SkeletonLocal.prototype.type]=this.readSkeletonLocal;this.file.typeRead[SEA3D.JointObject.prototype.type]=
this.readJointObject;this.file.typeRead[SEA3D.CubeMap.prototype.type]=this.readCubeMap;this.file.typeRead[SEA3D.CubeRender.prototype.type]=this.readCubeRender;this.file.typeRead[SEA3D.Animation.prototype.type]=this.readAnimation;this.file.typeRead[SEA3D.SoundPoint.prototype.type]=this.readSoundPoint;this.file.typeRead[SEA3D.TextureURL.prototype.type]=this.readTextureURL;this.file.typeRead[SEA3D.JPEG.prototype.type]=this.readImage;this.file.typeRead[SEA3D.JPEG_XR.prototype.type]=this.readImage;this.file.typeRead[SEA3D.PNG.prototype.type]=
this.readImage;this.file.typeRead[SEA3D.GIF.prototype.type]=this.readImage;this.file.typeRead[SEA3D.MP3.prototype.type]=this.readSound;a&&this.file.read()};var LZMA=LZMA||{};LZMA.OutWindow=function(){this._windowSize=0};LZMA.OutWindow.prototype.create=function(a){this._buffer&&this._windowSize===a||(this._buffer=[]);this._windowSize=a;this._streamPos=this._pos=0};
LZMA.OutWindow.prototype.flush=function(){var a=this._pos-this._streamPos;if(0!==a){for(;a--;)this._stream.writeByte(this._buffer[this._streamPos++]);this._pos>=this._windowSize&&(this._pos=0);this._streamPos=this._pos}};LZMA.OutWindow.prototype.releaseStream=function(){this.flush();this._stream=null};LZMA.OutWindow.prototype.setStream=function(a){this.releaseStream();this._stream=a};LZMA.OutWindow.prototype.init=function(a){a||(this._pos=this._streamPos=0)};
LZMA.OutWindow.prototype.copyBlock=function(a,b){var c=this._pos-a-1;for(0>c&&(c+=this._windowSize);b--;)c>=this._windowSize&&(c=0),this._buffer[this._pos++]=this._buffer[c++],this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.putByte=function(a){this._buffer[this._pos++]=a;this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.getByte=function(a){a=this._pos-a-1;0>a&&(a+=this._windowSize);return this._buffer[a]};LZMA.RangeDecoder=function(){};
LZMA.RangeDecoder.prototype.setStream=function(a){this._stream=a};LZMA.RangeDecoder.prototype.releaseStream=function(){this._stream=null};LZMA.RangeDecoder.prototype.init=function(){var a=5;this._code=0;for(this._range=-1;a--;)this._code=this._code<<8|this._stream.readByte()};
LZMA.RangeDecoder.prototype.decodeDirectBits=function(a){for(var b=0,c;a--;)this._range>>>=1,c=this._code-this._range>>>31,this._code-=this._range&c-1,b=b<<1|1-c,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return b};
LZMA.RangeDecoder.prototype.decodeBit=function(a,b){var c=a[b],d=(this._range>>>11)*c;if((this._code^2147483648)<(d^2147483648))return this._range=d,a[b]+=2048-c>>>5,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),0;this._range-=d;this._code-=d;a[b]-=c>>>5;0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return 1};LZMA.initBitModels=function(a,b){for(;b--;)a[b]=1024};
LZMA.BitTreeDecoder=function(a){this._models=[];this._numBitLevels=a};LZMA.BitTreeDecoder.prototype.init=function(){LZMA.initBitModels(this._models,1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.decode=function(a){for(var b=1,c=this._numBitLevels;c--;)b=b<<1|a.decodeBit(this._models,b);return b-(1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.reverseDecode=function(a){for(var b=1,c=0,d=0,e;d<this._numBitLevels;++d)e=a.decodeBit(this._models,b),b=b<<1|e,c|=e<<d;return c};
LZMA.reverseDecode2=function(a,b,c,d){for(var e=1,f=0,g=0,h;g<d;++g)h=c.decodeBit(a,b+e),e=e<<1|h,f|=h<<g;return f};LZMA.LenDecoder=function(){this._choice=[];this._lowCoder=[];this._midCoder=[];this._highCoder=new LZMA.BitTreeDecoder(8);this._numPosStates=0};LZMA.LenDecoder.prototype.create=function(a){for(;this._numPosStates<a;++this._numPosStates)this._lowCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3),this._midCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3)};
LZMA.LenDecoder.prototype.init=function(){var a=this._numPosStates;for(LZMA.initBitModels(this._choice,2);a--;)this._lowCoder[a].init(),this._midCoder[a].init();this._highCoder.init()};LZMA.LenDecoder.prototype.decode=function(a,b){return 0===a.decodeBit(this._choice,0)?this._lowCoder[b].decode(a):0===a.decodeBit(this._choice,1)?8+this._midCoder[b].decode(a):16+this._highCoder.decode(a)};LZMA.Decoder2=function(){this._decoders=[]};
LZMA.Decoder2.prototype.init=function(){LZMA.initBitModels(this._decoders,768)};LZMA.Decoder2.prototype.decodeNormal=function(a){var b=1;do b=b<<1|a.decodeBit(this._decoders,b);while(256>b);return b&255};LZMA.Decoder2.prototype.decodeWithMatchByte=function(a,b){var c=1,d,e;do if(d=b>>7&1,b<<=1,e=a.decodeBit(this._decoders,(1+d<<8)+c),c=c<<1|e,d!==e){for(;256>c;)c=c<<1|a.decodeBit(this._decoders,c);break}while(256>c);return c&255};LZMA.LiteralDecoder=function(){};
LZMA.LiteralDecoder.prototype.create=function(a,b){var c;if(!this._coders||this._numPrevBits!==b||this._numPosBits!==a)for(this._numPosBits=a,this._posMask=(1<<a)-1,this._numPrevBits=b,this._coders=[],c=1<<this._numPrevBits+this._numPosBits;c--;)this._coders[c]=new LZMA.Decoder2};LZMA.LiteralDecoder.prototype.init=function(){for(var a=1<<this._numPrevBits+this._numPosBits;a--;)this._coders[a].init()};
LZMA.LiteralDecoder.prototype.getDecoder=function(a,b){return this._coders[((a&this._posMask)<<this._numPrevBits)+((b&255)>>>8-this._numPrevBits)]};
LZMA.Decoder=function(){this._outWindow=new LZMA.OutWindow;this._rangeDecoder=new LZMA.RangeDecoder;this._isMatchDecoders=[];this._isRepDecoders=[];this._isRepG0Decoders=[];this._isRepG1Decoders=[];this._isRepG2Decoders=[];this._isRep0LongDecoders=[];this._posSlotDecoder=[];this._posDecoders=[];this._posAlignDecoder=new LZMA.BitTreeDecoder(4);this._lenDecoder=new LZMA.LenDecoder;this._repLenDecoder=new LZMA.LenDecoder;this._literalDecoder=new LZMA.LiteralDecoder;this._dictionarySizeCheck=this._dictionarySize=
-1;this._posSlotDecoder[0]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[1]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[2]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[3]=new LZMA.BitTreeDecoder(6)};LZMA.Decoder.prototype.setDictionarySize=function(a){if(0>a)return!1;this._dictionarySize!==a&&(this._dictionarySize=a,this._dictionarySizeCheck=Math.max(this._dictionarySize,1),this._outWindow.create(Math.max(this._dictionarySizeCheck,4096)));return!0};
LZMA.Decoder.prototype.setLcLpPb=function(a,b,c){var d=1<<c;if(8<a||4<b||4<c)return!1;this._literalDecoder.create(b,a);this._lenDecoder.create(d);this._repLenDecoder.create(d);this._posStateMask=d-1;return!0};
LZMA.Decoder.prototype.init=function(){var a=4;this._outWindow.init(!1);LZMA.initBitModels(this._isMatchDecoders,192);LZMA.initBitModels(this._isRep0LongDecoders,192);LZMA.initBitModels(this._isRepDecoders,12);LZMA.initBitModels(this._isRepG0Decoders,12);LZMA.initBitModels(this._isRepG1Decoders,12);LZMA.initBitModels(this._isRepG2Decoders,12);LZMA.initBitModels(this._posDecoders,114);for(this._literalDecoder.init();a--;)this._posSlotDecoder[a].init();this._lenDecoder.init();this._repLenDecoder.init();
this._posAlignDecoder.init();this._rangeDecoder.init()};
LZMA.Decoder.prototype.decode=function(a,b,c){var d=0,e=0,f=0,g=0,h=0,l=0,n=0;this._rangeDecoder.setStream(a);this._outWindow.setStream(b);for(this.init();0>c||l<c;)if(a=l&this._posStateMask,0===this._rangeDecoder.decodeBit(this._isMatchDecoders,(d<<4)+a))n=this._literalDecoder.getDecoder(l++,n),n=7<=d?n.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(e)):n.decodeNormal(this._rangeDecoder),this._outWindow.putByte(n),d=4>d?0:d-(10>d?3:6);else{if(1===this._rangeDecoder.decodeBit(this._isRepDecoders,
d))n=0,0===this._rangeDecoder.decodeBit(this._isRepG0Decoders,d)?0===this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(d<<4)+a)&&(d=7>d?9:11,n=1):(0===this._rangeDecoder.decodeBit(this._isRepG1Decoders,d)?b=f:(0===this._rangeDecoder.decodeBit(this._isRepG2Decoders,d)?b=g:(b=h,h=g),g=f),f=e,e=b),0===n&&(n=2+this._repLenDecoder.decode(this._rangeDecoder,a),d=7>d?8:11);else if(h=g,g=f,f=e,n=2+this._lenDecoder.decode(this._rangeDecoder,a),d=7>d?7:10,a=this._posSlotDecoder[5>=n?n-2:3].decode(this._rangeDecoder),
4<=a)if(b=(a>>1)-1,e=(2|a&1)<<b,14>a)e+=LZMA.reverseDecode2(this._posDecoders,e-a-1,this._rangeDecoder,b);else{if(e+=this._rangeDecoder.decodeDirectBits(b-4)<<4,e+=this._posAlignDecoder.reverseDecode(this._rangeDecoder),0>e){if(-1===e)break;return!1}}else e=a;if(e>=l||e>=this._dictionarySizeCheck)return!1;this._outWindow.copyBlock(e,n);l+=n;n=this._outWindow.getByte(0)}this._outWindow.flush();this._outWindow.releaseStream();this._rangeDecoder.releaseStream();return!0};
LZMA.Decoder.prototype.setDecoderProperties=function(a){var b,c;if(5>a.size)return!1;b=a.readByte();c=b%9;b=~~(b/9);if(!this.setLcLpPb(c,b%5,~~(b/5)))return!1;b=a.readByte();b|=a.readByte()<<8;b|=a.readByte()<<16;b+=16777216*a.readByte();return this.setDictionarySize(b)};LZMA.decompress=function(a,b,c,d){var e=new LZMA.Decoder;if(!e.setDecoderProperties(a))throw"Incorrect stream properties";if(!e.decode(b,c,d))throw"Error in data stream";return!0};
LZMA.decompressFile=function(a,b){var c=new LZMA.Decoder,d;if(!c.setDecoderProperties(a))throw"Incorrect stream properties";d=a.readByte();d|=a.readByte()<<8;d|=a.readByte()<<16;d+=16777216*a.readByte();a.readByte();a.readByte();a.readByte();a.readByte();if(!c.decode(a,b,d))throw"Error in data stream";return!0};
SEA3D.File.LZMAUncompress=function(a){var b={data:[],position:0,writeByte:function(a){this.data[this.position++]=a}};LZMA.decompressFile({data:a,position:0,readByte:function(){return this.data[this.position++]}},b);return new Uint8Array(b.data)};SEA3D.File.setDecompressionEngine(2,"lzma",SEA3D.File.LZMAUncompress);SEA3D.Pool=function(){this.imgs={};this.meshs={};this.names=[];this.revers={}};
SEA3D.Pool.prototype={constructor:SEA3D.Pool,loadImages:function(a,b){if("string"==typeof a||a instanceof String)a=[a];var c=this,d=new Image;d.onload=function(){var d=a[0].substring(a[0].lastIndexOf("/")+1,a[0].lastIndexOf("."));c.imgs[d]=this;a.shift();a.length?c.loadImages(a,b):b&&b()};d.src=a[0]},getTexture:function(a,b){var c=new THREE.Texture(this.imgs[a]);b&&(c.flipY=!1);c.needsUpdate=!0;return c},loadModels:function(a,b,c){if("string"==typeof a||a instanceof String)a=[a];var d=a[0].substring(a[0].lastIndexOf("/")+
1,a[0].lastIndexOf("."));c=c||"default";var e=this,f=new THREE.SEA3D(!0);f.onComplete=function(c){for(c=f.meshes.length;c--;)e.names[c]=d+"_"+f.meshes[c].name,e.meshs[e.names[c]]=f.meshes[c],e.revers[e.names[c]]=0;a.shift();a.length?e.loadModels(a,b):b&&b()};f.parser="auto"==c?THREE.SEA3D.AUTO:"buffer"==c?THREE.SEA3D.BUFFER:THREE.SEA3D.DEFAULT;f.load(a[0])},getList:function(){for(var a="",b=0;b<this.names.length;b++)a+=this.names[b]+"<br>";return a},getMesh:function(a){return this.meshs[a]},getGeometry:function(a,
b,c){0==this.revers[a]?(this.revers[a]=1,a=this.scaleGeo(this.meshs[a].geometry,b,c)):a=this.meshs[a].geometry;return a},scaleGeo:function(a,b,c){b=b||1;c=c||"z";var d=[1,1,1];"x"==c&&(d[0]=-1);"y"==c&&(d[1]=-1);"z"==c&&(d[2]=-1);b=(new THREE.Matrix4).makeScale(b*d[0],b*d[1],b*d[2]);a.applyMatrix(b);a.computeBoundingBox();a.computeBoundingSphere();return a},geo:function(a,b,c){return this.getGeometry(a,b,c)},mesh:function(a){return this.meshs[a]},load:function(a,b,c){this.loadModels(a,b,c)},edit:function(a,
b,c,d,e){a=this.scaleGeo(this.meshs[a].geometry.clone());var f;b=b||100;console.log(a.boundingBox);a.vertices?(f=a.vertices,console.log("is not buffer")):console.log("is buffer object");c=.5*a.boundingBox.max.x;for(d=f.length;d--;)e=f[d],e.x>c&&(e.x+=b-c);a.verticesNeedUpdate=!0;return a},clear:function(){var a,b;for(b in this.meshs)a=this.meshs[b],a.geometry&&a.geometry.dispose();this.meshs={};this.names=[];this.revers={}}};void 0===Date.now&&(Date.now=function(){return(new Date).valueOf()});
var TWEEN=TWEEN||function(){var a=[];return{REVISION:"14",getAll:function(){return a},removeAll:function(){a=[]},add:function(b){a.push(b)},remove:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},update:function(b){if(0===a.length)return!1;var c=0;for(b=void 0!==b?b:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();c<a.length;)a[c].update(b)?c++:a.splice(c,1);return!0}}}();
TWEEN.Tween=function(a){var b={},c={},d={},e=1E3,f=0,g=!1,h=!1,l=0,n=null,p=TWEEN.Easing.Linear.None,q=TWEEN.Interpolation.Linear,m=[],r=null,t=!1,s=null,u=null,w=null,H;for(H in a)b[H]=parseFloat(a[H],10);this.to=function(a,b){return void 0!==b&&(e=b),c=a,this};this.start=function(e){TWEEN.add(this);h=!0;t=!1;n=void 0!==e?e:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();n+=l;for(var f in c){if(c[f]instanceof Array){if(0===
c[f].length)continue;c[f]=[a[f]].concat(c[f])}b[f]=a[f];0==b[f]instanceof Array&&(b[f]*=1);d[f]=b[f]||0}return this};this.stop=function(){return h?(TWEEN.remove(this),h=!1,null!==w&&w.call(a),this.stopChainedTweens(),this):this};this.stopChainedTweens=function(){for(var a=0,b=m.length;b>a;a++)m[a].stop()};this.delay=function(a){return l=a,this};this.repeat=function(a){return f=a,this};this.yoyo=function(a){return g=a,this};this.easing=function(a){return p=a,this};this.interpolation=function(a){return q=
a,this};this.chain=function(){return m=arguments,this};this.onStart=function(a){return r=a,this};this.onUpdate=function(a){return s=a,this};this.onComplete=function(a){return u=a,this};this.onStop=function(a){return w=a,this};this.update=function(h){var v;if(n>h)return!0;!1===t&&(null!==r&&r.call(a),t=!0);var w=(h-n)/e,w=1<w?1:w,y=p(w);for(v in c){var A=b[v]||0,B=c[v];B instanceof Array?a[v]=q(B,y):("string"==typeof B&&(B=A+parseFloat(B,10)),"number"==typeof B&&(a[v]=A+(B-A)*y))}if(null!==s&&s.call(a,
y),1==w){if(0<f){isFinite(f)&&f--;for(v in d){if("string"==typeof c[v]&&(d[v]+=parseFloat(c[v],10)),g)w=d[v],d[v]=c[v],c[v]=w;b[v]=d[v]}return n=h+l,!0}null!==u&&u.call(a);v=0;for(w=m.length;w>v;v++)m[v].start(h);return!1}return!0}};
TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return 1>(a*=2)?.5*a*a:-.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return 1>(a*=2)?.5*a*a*a:.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return 1>(a*=2)?.5*a*a*a*a:-.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*a*a},Out:function(a){return--a*
a*a*a*a+1},InOut:function(a){return 1>(a*=2)?.5*a*a*a*a*a:.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In:function(a){return 1-Math.cos(a*Math.PI/2)},Out:function(a){return Math.sin(a*Math.PI/2)},InOut:function(a){return.5*(1-Math.cos(Math.PI*a))}},Exponential:{In:function(a){return 0===a?0:Math.pow(1024,a-1)},Out:function(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut:function(a){return 0===a?0:1===a?1:1>(a*=2)?.5*Math.pow(1024,a-1):.5*(-Math.pow(2,-10*(a-1))+2)}},Circular:{In:function(a){return 1-Math.sqrt(1-
a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return 1>(a*=2)?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var b,c=.1;return 0===a?0:1===a?1:(!c||1>c?(c=1,b=.1):b=.4*Math.asin(1/c)/(2*Math.PI),-(c*Math.pow(2,10*(a-=1))*Math.sin(2*(a-b)*Math.PI/.4)))},Out:function(a){var b,c=.1;return 0===a?0:1===a?1:(!c||1>c?(c=1,b=.1):b=.4*Math.asin(1/c)/(2*Math.PI),c*Math.pow(2,-10*a)*Math.sin(2*(a-b)*Math.PI/.4)+1)},InOut:function(a){var b,c=.1;return 0===
a?0:1===a?1:(!c||1>c?(c=1,b=.1):b=.4*Math.asin(1/c)/(2*Math.PI),1>(a*=2)?-.5*c*Math.pow(2,10*(a-=1))*Math.sin(2*(a-b)*Math.PI/.4):c*Math.pow(2,-10*(a-=1))*Math.sin(2*(a-b)*Math.PI/.4)*.5+1)}},Back:{In:function(a){return a*a*(2.70158*a-1.70158)},Out:function(a){return--a*a*(2.70158*a+1.70158)+1},InOut:function(a){return 1>(a*=2)?.5*a*a*(3.5949095*a-2.5949095):.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)}},Bounce:{In:function(a){return 1-TWEEN.Easing.Bounce.Out(1-a)},Out:function(a){return 1/2.75>a?7.5625*
a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375},InOut:function(a){return.5>a?.5*TWEEN.Easing.Bounce.In(2*a):.5*TWEEN.Easing.Bounce.Out(2*a-1)+.5}}};
TWEEN.Interpolation={Linear:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.Linear;return 0>b?f(a[0],a[1],d):1<b?f(a[c],a[c-1],c-d):f(a[e],a[e+1>c?c:e+1],d-e)},Bezier:function(a,b){var c,d=0,e=a.length-1,f=Math.pow,g=TWEEN.Interpolation.Utils.Bernstein;for(c=0;e>=c;c++)d+=f(1-b,e-c)*f(b,c)*a[c]*g(e,c);return d},CatmullRom:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[c]?(0>b&&(e=Math.floor(d=c*(1+b))),f(a[(e-
1+c)%c],a[e],a[(e+1)%c],a[(e+2)%c],d-e)):0>b?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):1<b?a[c]-(f(a[c],a[c],a[c-1],a[c-1],d-c)-a[c]):f(a[e?e-1:0],a[e],a[e+1>c?c:e+1],a[e+2>c?c:e+2],d-e)},Utils:{Linear:function(a,b,c){return(b-a)*c+a},Bernstein:function(a,b){var c=TWEEN.Interpolation.Utils.Factorial;return c(a)/c(b)/c(a-b)},Factorial:function(){var a=[1];return function(b){var c,d=1;if(a[b])return a[b];for(c=b;1<c;c--)d*=c;return a[b]=d}}(),CatmullRom:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*
e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}}};"undefined"!=typeof module&&module.exports&&(module.exports=TWEEN);var V3D={};V3D.ToRad=Math.PI/180;V3D.ToDeg=180/Math.PI;V3D.View=function(a,b,c,d){var e=navigator.userAgent;this.isMobile=!1;if(e.match(/Android/i)||e.match(/webOS/i)||e.match(/iPhone/i)||e.match(/iPad/i)||e.match(/iPod/i)||e.match(/BlackBerry/i)||e.match(/Windows Phone/i))this.isMobile=!0;this.w=window.innerWidth;this.h=window.innerHeight;this.id="container";this.init(a,b,c,d)};
V3D.View.prototype={constructor:V3D.View,init:function(a,b,c){this.renderer=new THREE.WebGLRenderer({precision:"mediump",antialias:!0});this.renderer.setSize(this.w,this.h);this.renderer.setClearColor(1908512,1);this.camera=new THREE.PerspectiveCamera(60,this.w/this.h,.1,2E3);this.scene=new THREE.Scene;this.container=document.getElementById(this.id);this.container.appendChild(this.renderer.domElement);this.nav=new V3D.Navigation(this);this.nav.initCamera(a,b,c)},render:function(){this.renderer.render(this.scene,
this.camera)},initKeyboard:function(){this.nav.bindKeys()},unwrapDegrees:function(a){a%=360;180<a&&(a-=360);-180>a&&(a+=360);return a},unDegrees:function(a){a=1*(a*V3D.ToDeg).toFixed(0);a%=360;360<a&&(a-=360);return a}};
V3D.Navigation=function(a){this.parent=a;this.camPos={h:90,v:90,distance:400,automove:!1,vmax:90.5,vmin:.01};this.mouse={x:0,y:0,ox:0,oy:0,h:0,v:0,mx:0,my:0,down:!1,over:!1,moving:!0,button:0};this.vsize={w:this.parent.w,h:this.parent.h};this.center={x:0,y:0,z:0};this.key=[0,0,0,0,0,0,0];this.rayTest=null;this.initEvents()};
V3D.Navigation.prototype={constructor:V3D.Navigation,initCamera:function(a,b,c,d){this.camPos.h=a||90;this.camPos.v=b||90;this.camPos.distance=c||400;this.isRevers=d||!0,this.parent.camera.scale.x=-1;this.moveCamera()},moveCamera:function(){this.parent.camera.position.copy(this.Orbit(this.center,this.camPos.h,this.camPos.v,this.camPos.distance));this.parent.camera.lookAt(this.center)},Orbit:function(a,b,c,d){a=a||new THREE.Vector3;var e=new THREE.Vector3;c*=V3D.ToRad;b*=V3D.ToRad;e.x=d*Math.sin(c)*
Math.cos(b)+a.x;e.z=d*Math.sin(c)*Math.sin(b)+a.z;e.y=d*Math.cos(c)+a.y;return e},unwrapDegrees:function(a){a%=360;180<a&&(a-=360);-180>a&&(a+=360);return a},initEvents:function(){var a=this;document.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.parent.container.addEventListener("mousemove",function(b){a.onMouseMove(b)},!1);this.parent.container.addEventListener("mousedown",function(b){a.onMouseDown(b)},!1);this.parent.container.addEventListener("mouseout",function(b){a.onMouseUp(b)},
!1);this.parent.container.addEventListener("mouseup",function(b){a.onMouseUp(b)},!1);"undefined"!==typeof window.ontouchstart&&(this.parent.container.addEventListener("touchstart",function(b){a.onMouseDown(b)},!1),this.parent.container.addEventListener("touchend",function(b){a.onMouseUp(b)},!1),this.parent.container.addEventListener("touchmove",function(b){a.onMouseMove(b)},!1));this.parent.container.addEventListener("mousewheel",function(b){a.onMouseWheel(b)},!1);this.parent.container.addEventListener("DOMMouseScroll",
function(b){a.onMouseWheel(b)},!1);window.addEventListener("resize",function(b){a.onWindowResize(b)},!1)},onMouseRay:function(a,b){this.mouse.mx=this.mouse.x/this.vsize.w*2-1;this.mouse.my=2*-(this.mouse.y/this.vsize.h)+1;this.rayTest()},onMouseMove:function(a){a.preventDefault();a.touches?(this.mouse.x=a.clientX||a.touches[0].pageX,this.mouse.y=a.clientY||a.touches[0].pageY):(this.mouse.x=a.clientX,this.mouse.y=a.clientY);if(null!==this.rayTest)this.onMouseRay();this.mouse.down&&(document.body.style.cursor=
"move",this.camPos.h=this.isRevers?.3*-(this.mouse.x-this.mouse.ox)+this.mouse.h:.3*(this.mouse.x-this.mouse.ox)+this.mouse.h,this.camPos.v=.3*-(this.mouse.y-this.mouse.oy)+this.mouse.v,this.camPos.v<this.camPos.vmin&&(this.camPos.v=this.camPos.vmin),this.camPos.v>this.camPos.vmax&&(this.camPos.v=this.camPos.vmax),this.moveCamera())},onMouseDown:function(a){a.preventDefault();var b,c;a.touches?(b=a.clientX||a.touches[0].pageX,c=a.clientY||a.touches[0].pageY):(b=a.clientX,c=a.clientY,this.mouse.button=
a.which);this.mouse.ox=b;this.mouse.oy=c;this.mouse.h=this.camPos.h;this.mouse.v=this.camPos.v;this.mouse.down=!0;if(null!==this.rayTest)this.onMouseRay(b,c)},onMouseUp:function(a){this.mouse.down=!1;document.body.style.cursor="auto"},onMouseWheel:function(a){var b=0;a.wheelDeltaY?b=.01*a.wheelDeltaY:a.wheelDelta?b=.05*a.wheelDelta:a.detail&&(b=1*-a.detail);this.camPos.distance-=10*b;this.moveCamera()},onWindowResize:function(){this.vsize.w=window.innerWidth;this.vsize.h=window.innerHeight;this.parent.camera.aspect=
this.vsize.w/this.vsize.h;this.parent.camera.updateProjectionMatrix();this.parent.renderer.setSize(this.vsize.w,this.vsize.h)},bindKeys:function(){var a=this;document.onkeydown=function(b){b=b||window.event;switch(b.keyCode){case 38:case 87:case 90:a.key[0]=1;break;case 40:case 83:a.key[1]=1;break;case 37:case 65:case 81:a.key[2]=1;break;case 39:case 68:a.key[3]=1;break;case 17:case 67:a.key[4]=1;break;case 69:a.key[5]=1;break;case 32:a.key[6]=1;break;case 16:a.key[7]=1}};document.onkeyup=function(b){b=
b||window.event;switch(b.keyCode){case 38:case 87:case 90:a.key[0]=0;break;case 40:case 83:a.key[1]=0;break;case 37:case 65:case 81:a.key[2]=0;break;case 39:case 68:a.key[3]=0;break;case 17:case 67:a.key[4]=0;break;case 69:a.key[5]=0;break;case 32:a.key[6]=0;break;case 16:a.key[7]=0}}}};
V3D.SphericalShader=function(a){a=a||{};var b=V3D.Spherical,c=THREE.UniformsUtils.merge([b.uniforms,THREE.UniformsLib.common,THREE.UniformsLib.fog]),b=new THREE.ShaderMaterial({uniforms:c,vertexShader:b.vs,fragmentShader:b.fs,shading:THREE.SmoothShading,skinning:a.skinning||!1,morphTargets:a.morphTargets||!1,transparent:a.transparent||!1,depthTest:a.depthTest||!0,depthWrite:a.depthWrite||!0,side:a.side||THREE.FrontSide,fog:a.fog||!1});a.map&&(b.uniforms.map.value=a.map,b.uniforms.useMap.value=1);
b.uniforms.env.value=a.env||null;b.uniforms.diffuse.value=new THREE.Color(a.color||16777215);b.uniforms.opacity.value=a.opacity||1;return b};
V3D.Spherical={attributes:{},uniforms:{env:{type:"t",value:null},color:{type:"c",value:null},useMap:{type:"f",value:0},useRim:{type:"f",value:.5},rimPower:{type:"f",value:2},useExtraRim:{type:"f",value:0}},fs:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float useMap;\nuniform float useRim;\nuniform float rimPower;\nuniform float useExtraRim;\nuniform sampler2D env;\nuniform sampler2D map;\nvarying vec2 vN;\nvarying vec2 vU;\nvarying vec3 vNormal;\nvarying vec3 vPos;",THREE.ShaderChunk.fog_pars_fragment,
THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 base = diffuse;\nfloat alpha = opacity;\nif(useMap == 1.){\nvec3 mapping = texture2D( map, vU ).rgb;\nalpha *= texture2D( map, vU ).a;\nbase *= mapping;\n}\nif( useRim > 0. ) {\nfloat f = rimPower * abs( dot( vNormal, vPos ) );\nf = useRim * ( 1. - smoothstep( 0.0, 1., f ) );\nbase += vec3( f );\n}\nif( useExtraRim == 1. ) {\nfloat rim = max( 0., abs( dot( vNormal, -vPos ) ) );\nfloat r = smoothstep( .25, .75, 1. - rim );\nr -= smoothstep( .5, 1., 1. - rim );\nvec3 c = vec3( 168. / 255., 205. / 255., 225. / 255. );\nbase *= c;\n}\nvec3 ev = texture2D( env, vN ).rgb;\nbase *= ev;\ngl_FragColor = vec4( base, alpha );",
THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vs:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"varying vec2 vN;\nvarying vec2 vU;\nvarying vec3 vNormal;\nvarying vec3 vPos;\nvoid main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,
"vPos = normalize( vec3( mvPosition ) );\nvNormal = normalize( normalMatrix * normal );\nvec3 r = reflect( vPos, vNormal );\nfloat m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\nvN = r.xy / m + .5;\nvU = uv;\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n")};
var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var a=document.createElement("canvas");return!!window.WebGLRenderingContext&&(a.getContext("webgl")||a.getContext("experimental-webgl"))}catch(b){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";
a.style.textAlign="center";a.style.background="#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";this.webgl||(a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.');
return a},addGetWebGLMessage:function(a){var b,c;a=a||{};b=void 0!==a.parent?a.parent:document.body;a=void 0!==a.id?a.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};"object"===typeof module&&(module.exports=Detector);
